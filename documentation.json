{
    "pipes": [],
    "interfaces": [],
    "injectables": [
        {
            "name": "AppConfig",
            "id": "injectable-AppConfig-d6599cc2980957c6c9b419ef89c02f3d0c6638a524ec33841aaa1777d5b2cbe6948cef0d957120d30d0c4c93d6ae70e20fa99a9650ab81e1f1e6da002929b3d5",
            "file": "src/service/app.config.ts",
            "properties": [
                {
                    "name": "blogsButtonX1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "blogsButtonY1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "blogsComponentX1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "blogsComponentY1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "profileButtonX1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "profileButtonY1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "profileComponentX1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "profileComponentY1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "projectsButtonX1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "projectsButtonY1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "projectsComponentX1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "projectsComponentY1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "skillsButtonX1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "skillsButtonY1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "skillsComponentX1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "skillsComponentY1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AppConfig {\r\n\t\r\n\t//Button coordinates.\r\n\tpublic profileButtonX1: any;\r\n\tpublic profileButtonY1: any;\r\n\tpublic projectsButtonX1: any;\r\n\tpublic projectsButtonY1: any;\r\n\tpublic blogsButtonX1: any;\r\n\tpublic blogsButtonY1: any;\r\n\tpublic skillsButtonX1: any;\r\n\tpublic skillsButtonY1: any;\r\n\r\n\t//Window coordinates.\r\n\tpublic profileComponentX1: any;\r\n\tpublic profileComponentY1: any;\r\n\tpublic projectsComponentX1: any;\r\n\tpublic projectsComponentY1: any;\r\n\tpublic blogsComponentX1: any;\r\n\tpublic blogsComponentY1: any;\r\n\tpublic skillsComponentX1: any;\r\n\tpublic skillsComponentY1: any;\r\n}",
            "type": "injectable"
        },
        {
            "name": "Authenticator",
            "id": "injectable-Authenticator-f3665a7562c877695065594d6f8bca948570d5585a3553148b37eaed4495e1000730b3e7081d11e894f3abfc1ec0d50e026fc19883c8b6b49fa47b3687efe831",
            "file": "src/service/app.authenticator.ts",
            "properties": [],
            "methods": [
                {
                    "name": "authenticate",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<boolean>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        131
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { User } from './app.user';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Authenticator {\r\n  constructor(private http: HttpClient, private cookieService: CookieService) {\r\n  }\r\n\r\n  public async authenticate(): Promise<boolean>{\r\n\tif(this.cookieService.check('boonJwtToken')){\r\n\t\tconst jwtToken = this.cookieService.get('boonJwtToken');\r\n\t\tconst headers = new HttpHeaders({\r\n\t\t  'Authorization': `Bearer ${jwtToken}` // Include the JWT token in the Authorization header\r\n\t\t});\r\n\t\ttry{\r\n\t\t\tconst response = await this.http.get<any>(`${environment.baseUrl}/api/v1/secured/verify_user`, {headers: headers}).toPromise();\r\n\t\t\tUser.setUser(response.username);\r\n\t\t\treturn true;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(\"JWT authentication error :\", error);\t\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "User",
            "id": "class-User-546daabc6820ea175ed7d65b2df32c0cf6438e395c4d74918ca7713aeea13825726dde021f272fd3203e8a0408b79bec101fc6cfc183b86025b3387340cb3cb2",
            "file": "src/service/app.user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class User {\r\n  private static userInstance: User | null = null;\r\n  private static currentUser: any;\r\n\r\n  private constructor(currentUser: any) {\r\n    User.currentUser = currentUser;\r\n  }\r\n\r\n  public static setUser(currentUser: any): void{\r\n    if(!User.userInstance){\r\n      User.userInstance = new User(currentUser);\r\n    }\r\n    User.currentUser = currentUser;\r\n  }\r\n\r\n  // Service methods\r\n  public static getCurrentUser() {\r\n    return this.currentUser;\r\n  }\r\n\r\n  public static isLoggedIn(){\r\n    return (this.currentUser != undefined);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "currentUser",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 3,
                "modifierKind": [
                    121
                ],
                "jsdoctags": [
                    {
                        "name": "currentUser",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "currentUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "modifierKind": [
                        121,
                        124
                    ]
                },
                {
                    "name": "userInstance",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        121,
                        124
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getCurrentUser",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "isLoggedIn",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "setUser",
                    "args": [
                        {
                            "name": "currentUser",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "currentUser",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-dee23e9ea5eb729e6bf229548e7209137bfecdf254137e559494ce4766b5c5b244ee9a75c474412e6d2df6c6852ba3336f34d384158146f5a0b1b75acaba1bf7",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'portfolio'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { WallComponent } from 'src/lib/wall/wall.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'portfolio';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<router-outlet></router-outlet>\r\n\r\n"
        },
        {
            "name": "BlogsComponent",
            "id": "component-BlogsComponent-164116c2117564d1fd79606b438c90772329f52fc7bdf0cbfc6da5723ce3af2612a44e171b823cdc992213ad3e34bb3a13e35bca0f97ecf556052faa9dc633e9",
            "file": "src/lib/blogs/blogs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-blogs",
            "styleUrls": [
                "./blogs.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./blogs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "X1",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "Y1",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "close",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter"
                },
                {
                    "name": "Xemitter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter"
                },
                {
                    "name": "Yemitter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "AddBlogs",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "author",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "blogs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "blogsConfig",
                    "defaultValue": "{\r\n    theme: \"theme-blogs\",\r\n    heading: \"Blogs\"\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Object",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "currentUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "editorConfig",
                    "defaultValue": "{\r\n    editable: true,\r\n    spellcheck: true,\r\n    height: '24rem',\r\n    minHeight: '8rem',\r\n    placeholder: 'Enter text here...',\r\n    translate: 'no',\r\n    defaultParagraphSeparator: 'p',\r\n    defaultFontName: 'Comic Sans MS',\r\n    toolbarHiddenButtons: [\r\n      ['bold']\r\n      ],\r\n    customClasses: [\r\n      {\r\n        name: \"quote\",\r\n        class: \"quote\",\r\n      },\r\n      {\r\n        name: 'redText',\r\n        class: 'redText'\r\n      },\r\n      {\r\n        name: \"titleText\",\r\n        class: \"titleText\",\r\n        tag: \"h1\",\r\n      },\r\n    ]\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AngularEditorConfig",
                    "optional": false,
                    "description": "",
                    "line": 77
                },
                {
                    "name": "heading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "htmlContent",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 75
                },
                {
                    "name": "showBlog",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 74
                },
                {
                    "name": "userblogs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "back",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "closeWindow",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 153,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "emitX",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emitY",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "post",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "readMore",
                    "args": [
                        {
                            "name": "blog",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "blog",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showAddBlogs",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, OnChanges, HostListener, Input, Output, EventEmitter} from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\r\nimport { User } from 'src/service/app.user'\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-blogs',\r\n  templateUrl: './blogs.component.html',\r\n  styleUrls: ['./blogs.component.scss']\r\n})\r\nexport class BlogsComponent implements OnInit, OnChanges {\r\n\r\n  public currentUser: any;\r\n\r\n  public blogsConfig: Object = {\r\n    theme: \"theme-blogs\",\r\n    heading: \"Blogs\"\r\n  }\r\n\r\n  @Input() public username: any;\r\n  @Input() public X1: number = 0;\r\n  @Input() public Y1: number = 0;\r\n  @Output() public Xemitter = new EventEmitter<any>();\r\n  @Output() public Yemitter = new EventEmitter<any>();\r\n  @Output() public close = new EventEmitter<any>();\r\n\r\n  // public showTrending: boolean = true;\r\n  public AddBlogs: boolean = false;\r\n  public blogs: any;\r\n  public userblogs: any;\r\n\r\n  //current blog status\r\n  public showBlog: boolean = false;\r\n  public heading: any;\r\n  public author: any;\r\n  public content: any;\r\n  public date: any;\r\n\r\n  constructor(private http: HttpClient, private cookieService: CookieService) {\r\n    this.currentUser = User.getCurrentUser();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const jwtToken = this.cookieService.get('boonJwtToken');\r\n    const headers = new HttpHeaders({\r\n      'Authorization': `Bearer ${jwtToken}` // Include the JWT token in the Authorization header\r\n    });\r\n\r\n    this.http.get(`${environment.baseUrl}/api/v1/public/blogs/${this.username}`)\r\n    .subscribe({\r\n      next: response => {\r\n        console.log(response);\r\n        this.userblogs = response;\r\n      },\r\n      error: error => {\r\n        console.error('API Error', error);\r\n      }   \r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: any) {\r\n    if (changes.username) {\r\n      // Perform any necessary actions when the variable changes\r\n      this.ngOnInit();\r\n    }\r\n  }\r\n\r\n  showAddBlogs(){\r\n    this.AddBlogs = !this.AddBlogs;\r\n  }\r\n\r\n  title = '';\r\n  htmlContent = '';\r\n\r\n  editorConfig: AngularEditorConfig = {\r\n    editable: true,\r\n    spellcheck: true,\r\n    height: '24rem',\r\n    minHeight: '8rem',\r\n    placeholder: 'Enter text here...',\r\n    translate: 'no',\r\n    defaultParagraphSeparator: 'p',\r\n    defaultFontName: 'Comic Sans MS',\r\n    toolbarHiddenButtons: [\r\n      ['bold']\r\n      ],\r\n    customClasses: [\r\n      {\r\n        name: \"quote\",\r\n        class: \"quote\",\r\n      },\r\n      {\r\n        name: 'redText',\r\n        class: 'redText'\r\n      },\r\n      {\r\n        name: \"titleText\",\r\n        class: \"titleText\",\r\n        tag: \"h1\",\r\n      },\r\n    ]\r\n  };\r\n\r\n  post(){\r\n    const jwtToken = this.cookieService.get('boonJwtToken');\r\n    const username = this.cookieService.get('boonCurrentUser');\r\n    const body = {\r\n      username: username,\r\n      title: this.title,\r\n      content: this.htmlContent\r\n    };\r\n\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${jwtToken}` // Include the JWT token in the Authorization header\r\n    });\r\n\r\n    console.log(headers);\r\n\r\n    this.http.post(`${environment.baseUrl}/api/v1/secured/blogs`, body, { headers })\r\n    .subscribe({\r\n      next: response => {\r\n        console.log(response);\r\n      },\r\n      error: error => {\r\n        console.error('API Error', error);\r\n      }   \r\n    });\r\n  }\r\n\r\n  readMore(blog: any){\r\n    this.heading = blog.title;\r\n    this.author = blog.firstname + ' ' + blog.lastname;\r\n    this.content = blog.content;\r\n    this.date = blog.createdAt;\r\n    this.showBlog = true;\r\n  }\r\n\r\n  back(){\r\n    this.showBlog = false;\r\n  }\r\n\r\n  emitX(value:any){\r\n    this.Xemitter.emit(value);\r\n  }\r\n  \r\n  emitY(value:any){\r\n    this.Yemitter.emit(value);\r\n  }\r\n\r\n  closeWindow(){\r\n    this.close.emit();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import './../../styles/config.scss';\r\n\r\n.main-container{\r\n\theight: 80vh;\r\n\twidth: 80vw;\r\n\tpadding: 8px;\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.search{\r\n\theight: 4%;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\r\n\tinput{\r\n\t\theight: 24px;\r\n\t\twidth: 320px;\r\n\t\tpadding: 0px 8px;\r\n\t\tborder-radius: 24px;\r\n\t\tborder: solid 2px black;\r\n\t}\r\n\t\r\n\t.search-btn{\r\n\t\theight: 24px;\r\n\t\twidth: 24px;\r\n\t\tmargin-left: 8px;\r\n\t\tborder-radius: 24px;\r\n\t\t// border: solid 2px black;\r\n\t\tbackground-color: $primary-color-blogs;\r\n\t\tbox-shadow: 4px 4px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\t\r\n\t.search-btn:hover{\r\n\t\tbackground-color: rgb(36, 93, 199);\r\n\t}\r\n\t.search-btn:active{\r\n\t\tbox-shadow: 2px 2px;\r\n\t}\r\n}\r\n\r\n.blogs-container{\r\n\t// background-color: red;\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\tbox-sizing: border-box;\r\n\r\n\t.add{\r\n\t\tbackground-color: white;\r\n\t\theight: 48px;\r\n\t\twidth: 48px;\r\n\t\tborder-radius: 50%;\r\n\t\tbox-shadow: 4px 4px;\r\n\t\tposition: absolute;\r\n\t\tbottom: 32px; \r\n\t\tright: 32px;\r\n\t}\r\n\r\n\t.add:hover{\r\n\t\tbackground-color: whitesmoke;\r\n\t}\r\n\r\n\t.add:active{\r\n\t\tbox-shadow: 2px 2px;\r\n\t}\r\n\t\r\n\t.myblogs-container{\r\n\t\tbackground-color: $primary-color-blogs;\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t\tborder-radius: 8px;\r\n\t\tpadding: 32px 100px;\r\n\t\tbox-sizing: border-box;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\toverflow-y: scroll;\r\n\r\n\t\t.blog{\r\n\t\t\twidth: 90%;\r\n\t\t\tbackground-color: white;\r\n\t\t\tmargin: 16px;\r\n\t\t\tborder-radius: 8px;\r\n\t\t\tbox-shadow: 4px 4px;\r\n\t\t\tpadding: 16px;\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\r\n\t\t\t.heading{\r\n\t\t\t\tfont-size: 24px;\r\n\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\ttext-overflow: ellipsis;\r\n\t\t\t\twhite-space: nowrap;\r\n\t\t\t\toverflow: hidden;\r\n\t\t\t\tfont-weight: bold;\r\n\t\t\t}\r\n\r\n\t\t\t.date{\r\n\t\t\t\tfont-size: 14px;\r\n\t\t\t\tfont-style: italic;\r\n\t\t\t}\r\n\r\n\t\t\t.content{\r\n\t\t\t\theight: 96px;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tpadding: 4px;\r\n\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\toverflow: hidden;\r\n\t\t\t\twidth:100%;\r\n\t\t\t\tdisplay: -webkit-box;\r\n\t\t\t\t-webkit-line-clamp: 4;\r\n\t\t\t\t-webkit-box-orient: vertical;\r\n\t\t\t\tmargin-bottom: 8px;\r\n\t\t\t}\r\n\r\n\t\t\t.read-more{\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tjustify-content: center;\r\n\t\t\t\tcolor: white;\r\n\t\t\t\tbackground-color: $primary-color-blogs;\r\n\t\t\t\tmargin-left: auto;\r\n\t\t\t\tborder-radius: 24px;\r\n\t\t\t\tbox-shadow: black 4px 4px;\r\n\t\t\t\theight: 24px;\r\n\t\t\t\twidth: 128px;\r\n\t\t\t}\r\n\r\n\t\t\t.read-more:hover{\r\n\t\t\t\tbackground-color: rgb(36, 93, 199);\r\n\t\t\t}\r\n\r\n\t\t\t.read-more:active{\r\n\t\t\t\tbox-shadow: black 2px 2px;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.addblogs-container{\r\n\t\tbackground-color: $primary-color-blogs;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: space-evenly;\r\n\t\talign-items: center;\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t\tborder-radius: 8px;\r\n\t\tposition: relative;\r\n\t\tpadding: 8px;\r\n\t\tbox-sizing: border-box;\r\n\r\n\t\t.return{\r\n\t\t\tposition: absolute;\r\n\t\t\ttop: 0;\r\n\t\t\tleft: 0;\r\n\t\t\theight: 48px;\r\n\t\t\twidth: 48px;\r\n\t\t}\r\n\r\n\r\n\t\tinput{\r\n\t\t\theight: 36px ;\r\n\t\t\tfont-size: 32px;\r\n\t\t\tpadding: 4px;\r\n\t\t\tborder-radius: 4px;\r\n\t\t\tborder: solid 1px black;\r\n\t\t}\r\n\r\n\t\t.innerclass{\r\n\t\t\tbackground-color: white;\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\t\t\talign-items: center;\r\n\t\t\tpadding: 16px;\r\n\t\t\tborder-radius: 8px;\r\n\r\n\t\t\t.btn{\r\n\t\t\t\tbackground-color: cornflowerblue;\r\n\t\t\t\theight: 32px;\r\n\t\t\t\twidth: 84px;\r\n\t\t\t\tborder: 0px;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tjustify-content: center;\r\n\t\t\t\tbox-shadow: 4px 4px;\r\n\t\t\t\tborder-radius: 24px;\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t\tmargin-top: 4px;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t.btn:hover{\r\n\t\t\t\tbackground-color: rgb(36, 93, 199);\r\n\t\t\t}\r\n\r\n\t\t\t.btn:active{\r\n\t\t\t\tbox-shadow: 2px 2px;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.readmore-container{\r\n\tbackground-color: white;\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\tborder-radius: 0px 0px 8px 8px;\r\n\tpadding: 8px;\r\n\tbox-sizing: border-box;\r\n\toverflow-y: scroll;\r\n\tposition: absolute;\r\n\ttop: 0px;\r\n\tleft: 0px;\r\n\r\n\t.back{\r\n\t\tcursor: pointer;\r\n\t\theight: 32px;\r\n\t\twidth: 32px;\r\n\t\tpadding: 4px;\r\n\t\t// background-color: red;\r\n\t}\r\n\r\n\t.blog-heading{\r\n\t\tfont-size: 32px;\r\n\t}\r\n\r\n\t.blog-metadata{\r\n\t\tfont-style: italic;\r\n\t\tfont-size: 14px;\r\n\t}\r\n}\r\n\r\n::-webkit-scrollbar {\r\n\twidth: 12px;\r\n}\r\n\r\n// /* Track */\r\n// ::-webkit-scrollbar-track {\r\n// \t-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3); \r\n// \t-webkit-border-radius: 8px;\r\n// \tborder-radius: 8px;\r\n// }\r\n\r\n/* Handle */\r\n::-webkit-scrollbar-thumb {\r\n\t-webkit-border-radius: 8px;\r\n\tborder-radius: 8px;\r\n\tbackground: rgb(36, 93, 199); \r\n\t// -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.5); \r\n}",
                    "styleUrl": "./blogs.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 39,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<app-window [windowConfig]=\"blogsConfig\" [X1]=\"this.X1\" [Y1]=\"this.Y1\" (Xemitter)=\"emitX($event)\" (Yemitter)=\"emitY($event)\" (close)=\"closeWindow()\">\r\n\t<div class=\"main-container\">\r\n\t\t<!-- <div class=\"search\">\r\n\t\t\t<input type=\"text\" placeholder=\"Search\">\r\n\t\t\t<div class=\"search-btn\"></div>\r\n\t\t</div> -->\r\n\t\t<div class=\"blogs-container\">\r\n\t\t\t<div class=\"addblogs-container\" *ngIf=\"AddBlogs; else myBlogs\">\r\n\t\t\t\t<img class=\"return\" src=\"./../../assets/images/buttons/return.png\" alt=\"\" (click)=\"showAddBlogs()\">\r\n\t\t\t\t<input type=\"text\" placeholder=\"Enter blog title...\" [(ngModel)]=\"title\">\r\n\t\t\t\t<div class=\"innerclass\">\r\n\t\t\t\t\t<angular-editor [(ngModel)]=\"htmlContent\" class=\"editor\" [config]=\"editorConfig\"></angular-editor>\r\n\t\t\t\t\t<div class=\"btn\" (click)=\"post()\">Post</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<ng-template #myBlogs>\r\n\t\t\t\t<div class=\"myblogs-container\">\r\n\t\t\t\t\t<ng-container *ngFor=\"let b of userblogs\">\r\n\t\t\t\t\t\t<div class=\"blog\">\r\n\t\t\t\t\t\t\t<div class=\"heading\">{{b.title}}</div>\r\n\t\t\t\t\t\t\t<div class=\"date\"> Authored by <b>{{b.firstname}} {{b.lastname}}</b> on {{b.createdAt | slice:0:10 }}</div>\r\n\t\t\t\t\t\t\t<div class=\"content\" [innerHTML]=\"b.content\"></div>\r\n\t\t\t\t\t\t\t<div class=\"read-more\" (click)=\"readMore(b)\">Read More</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</ng-container>\r\n\t\t\t\t</div>\r\n\t\t\t\t<img *ngIf=\"(this.currentUser == this.username)\" src=\"./../../assets/images/buttons/add.png\" alt=\"\" class=\"add\" (click)=\"showAddBlogs()\">\r\n\t\t\t</ng-template>\r\n\t\t</div>\r\n\t\t<div class=\"readmore-container\" *ngIf=\"showBlog\">\r\n\t\t\t<img src=\"assets/images/buttons/return.png\" class=\"back\" (click)=\"back()\">\r\n\t\t\t<div class=\"blog-heading\">\r\n\t\t\t\t{{ this.heading }}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"blog-metadata\">\r\n\t\t\t\tAuthored by <b>{{ this.author }}</b> on {{ this.date | slice:0:10 }}\r\n\t\t\t</div>\r\n\t\t\t<br>\r\n\t\t\t<div class=\"blog-content\" [innerHTML]=\"this.content\"></div>\r\n\t\t</div>\r\n\t</div>\r\n</app-window>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-e104c3aa20a930d7b0c1bf42f3a292ed6adbd9133b6e150602d2e23eb39ccf011ecf2cb274c27d3465bb244fc4cf2a4380b4351e6a620274f884284b58f9e930",
            "file": "src/lib/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "buttonConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "ButtonX1",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "ButtonY1",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "Xemitter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter"
                },
                {
                    "name": "Yemitter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "ButtonX2",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ButtonY2",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "endTime",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "initialWidth",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "insideButton",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "mouseHoldsButton",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "startTime",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "mouseOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "mouseOver",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMouseDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:mousedown', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMouseMove",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:mousemove', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMouseUp",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:mouseup', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onResize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:resize', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:mousedown",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39
                },
                {
                    "name": "document:mousemove",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57
                },
                {
                    "name": "document:mouseup",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49
                },
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostListener, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-button',\r\n  templateUrl: './button.component.html',\r\n  styleUrls: ['./button.component.scss']\r\n})\r\nexport class ButtonComponent {\r\n\r\n  public initialWidth = 0; // initial size of window\r\n  @Input() public buttonConfig: any;\r\n\r\n  // Button coordinates.\r\n  @Input() public ButtonX1: number = 0;\r\n  @Input() public ButtonY1: number = 0;\r\n  @Output() Xemitter = new EventEmitter<any>();\r\n  @Output() Yemitter = new EventEmitter<any>();\r\n  public ButtonX2: number = 0;\r\n  public ButtonY2: number = 0;\r\n  public insideButton: boolean = false;\r\n  public mouseHoldsButton: boolean = false;\r\n  public startTime: number = 0;\r\n  public endTime: number = 0;\r\n\r\n  constructor(){\r\n    this.initialWidth = window.innerWidth;\r\n  }\r\n\r\n  // this maintains the position of button with respect to right side, when window size is changing.\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event: any) {\r\n    this.ButtonX1 -= this.initialWidth - window.innerWidth;\r\n    this.Xemitter.emit(this.ButtonX1);\r\n    this.initialWidth = window.innerWidth;\r\n  }\r\n\r\n  // listen to the mouseclick is pressed.\r\n  @HostListener('document:mousedown', ['$event'])\r\n  onMouseDown(event: MouseEvent) {\r\n    if(this.insideButton){\r\n      this.mouseHoldsButton = true;\r\n      this.ButtonX2 = event.clientX;\r\n      this.ButtonY2 = event.clientY;\r\n    }\r\n  }\r\n\r\n  // when mouse click is released.\r\n  @HostListener('document:mouseup', ['$event'])\r\n  onMouseUp(event: MouseEvent) {\r\n    // event.preventDefault();\r\n    this.endTime = Date.now();\r\n    this.mouseHoldsButton = false;\r\n  }\r\n\r\n   // when mouse is moving.\r\n   @HostListener('document:mousemove', ['$event'])\r\n   onMouseMove(event: MouseEvent) { \r\n     if(this.mouseHoldsButton && this.insideButton){\r\n        event.preventDefault();\r\n        this.ButtonX1 += event.clientX - this.ButtonX2;\r\n        this.Xemitter.emit(this.ButtonX1);\r\n        this.ButtonY1 += event.clientY - this.ButtonY2;\r\n        this.Yemitter.emit(this.ButtonY1);\r\n        this.ButtonX2 = event.clientX;\r\n        this.ButtonY2 = event.clientY;\r\n     }\r\n   }\r\n\r\n     // when mouse is inside the div.\r\n  mouseOver(){\r\n    // console.log(\"insideButton\");\r\n    this.insideButton = true;\r\n  }\r\n\r\n  // when mouse is outsider the div.\r\n  mouseOut(){\r\n    // console.log('outsidemouse')\r\n    if(this.mouseHoldsButton == false) this.insideButton = false;\r\n  }\r\n\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import './../../styles/config.scss';\r\n\r\n.btn-container{\r\n\tcursor: pointer;\r\n\r\n\t.btn{\r\n\t\theight: 40px;\r\n\t\twidth: 48px;\r\n\t}\r\n\r\n\tp{\r\n\t\tmargin:0;\r\n\t\ttext-align: center;\r\n\t\tfont-family: $primary-font;\r\n\t\tfont-size: 12px;\r\n\t\tmargin-left: 4px;\r\n\t}\r\n}\r\n\r\n.btn-container:hover .btn{\r\n\t\theight: 42px;\r\n\t\twidth: 50px;\r\n}\r\n\r\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 23
            },
            "templateData": "<div class=\"btn-container\" (mouseover)=\"mouseOver()\" (mouseout)=\"mouseOut()\">\r\n\t<img src=\"{{this.buttonConfig.image}}\" class=\"btn\">\r\n\t<p>{{this.buttonConfig.name}}</p>\r\n</div>\r\n"
        },
        {
            "name": "ContentComponent",
            "id": "component-ContentComponent-56eb6431e753c8bd04a4975d371e1766156a4770ff59cc092bf4dff5ee57ca76771e181968592e7a2982af8be5d12ee86527e4e020f87b325a15d236fda332a2",
            "file": "src/lib/quilandquest/content/content.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-content",
            "styleUrls": [
                "./content.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./content.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "blog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "blogId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "currentUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "headers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isLoggedIn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "jwtToken",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "disliked",
                    "args": [
                        {
                            "name": "blogId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "liked",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "blogId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "liked",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "liked",
                    "args": [
                        {
                            "name": "blogId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "liked",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "blogId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "liked",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "updateDatabase",
                    "args": [
                        {
                            "name": "blogId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "liked",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "blogId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "liked",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { User } from 'src/service/app.user';\r\nimport { Authenticator } from 'src/service/app.authenticator';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n@Component({\r\n  selector: 'app-content',\r\n  templateUrl: './content.component.html',\r\n  styleUrls: ['./content.component.scss']\r\n})\r\nexport class ContentComponent implements OnInit {\r\n\r\n  public currentUser: any;\r\n  public isLoggedIn: boolean = false;\r\n  public blog: any;\r\n  public blogId: any;\r\n  private jwtToken: any;\r\n  private headers: any;\r\n\r\n  constructor(private http: HttpClient, private cookieService: CookieService, private authenticator: Authenticator, private router: Router, private route: ActivatedRoute){\r\n    this.jwtToken = this.cookieService.get('boonJwtToken');\r\n    this.headers = new HttpHeaders({\r\n      'Authorization': `Bearer ${this.jwtToken}` // Include the JWT token in the Authorization header\r\n    });\r\n  }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    await this.authenticator.authenticate();\r\n    this.isLoggedIn = User.isLoggedIn();\r\n    this.currentUser = User.getCurrentUser();\r\n\r\n    //get the blog id from router\r\n    this.route.params.subscribe(params => {\r\n      this.blogId = params['blog_id'];\r\n    }); \r\n\r\n    if(this.isLoggedIn){\r\n      console.log(this.headers);\r\n      this.http.get(`${environment.baseUrl}/api/v1/public/blogs/blog_id/${this.blogId}`, {headers: this.headers})\r\n      .subscribe({\r\n        next: response => {\r\n          console.log(response);\r\n          this.blog = response;\r\n        },\r\n        error: error => {\r\n          console.error('API Error', error);\r\n        }   \r\n      });\r\n    }else{\r\n      this.http.get(`${environment.baseUrl}/api/v1/public/blogs/blog_id/${this.blogId}`)\r\n      .subscribe({\r\n        next: response => {\r\n          console.log(response);\r\n          this.blog = response;\r\n        },\r\n        error: error => {\r\n          console.error('API Error', error);\r\n        }   \r\n      });\r\n    }\r\n  }\r\n\r\n  liked(blogId: number, liked: number){\r\n    if(User.isLoggedIn() == false){\r\n      alert(\"Please LogIn to like.\");\r\n      return;\r\n    } \r\n    var blog = this.blog;\r\n    // console.log(blog);\r\n    if(liked == 1) {\r\n      blog.liked = 0;\r\n      blog.likes -= 1;\r\n    }\r\n    else if(liked == -1){\r\n      blog.liked = 1;\r\n      blog.dislikes -= 1;\r\n      blog.likes += 1;\r\n    }else{\r\n      blog.liked = 1;\r\n      blog.likes += 1;\r\n    }\r\n    this.updateDatabase(blogId, blog.liked);\r\n  }\r\n\r\n  disliked(blogId: number, liked: number){\r\n    if(User.isLoggedIn() == false){\r\n      alert(\"Please LogIn to dislike.\");\r\n      return;\r\n    } \r\n    var blog = this.blog;\r\n    // console.log(blog);\r\n    if(liked == -1) {\r\n      blog.liked = 0;\r\n      blog.dislikes -= 1;\r\n    }else if(liked == 1){\r\n      blog.liked = -1;\r\n      blog.likes -= 1;\r\n      blog.dislikes += 1;\r\n    }\r\n    else {\r\n      blog.liked = -1;\r\n      blog.dislikes += 1;\r\n    }\r\n    this.updateDatabase(blogId, blog.liked);\r\n  }\r\n\r\n  updateDatabase(blogId: any, liked: any){\r\n    const body = {\r\n      liked: liked\r\n    }\r\n    this.http.post(`${environment.baseUrl}/api/v1/secured/event/${blogId}`, body, {headers: this.headers})\r\n      .subscribe({\r\n        next: response => {\r\n          console.log(response);\r\n        },\r\n        error: error => {\r\n          console.error('API Error', error);\r\n        }   \r\n      });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".content-container{\r\n\theight: 100vh;\r\n\twidth: 100vw;\r\n\t\r\n\t.container{\r\n\t\theight: 90vh;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\toverflow-y: scroll;\r\n\t\tpadding-bottom: 32px;\r\n\t\tbox-sizing: border-box;\r\n\t\t// background-color: grey;\r\n\r\n\t\t.blog{\r\n\t\t\tmin-height: 240px;\r\n\t\t\twidth: 48vw;\r\n\t\t\tmargin-top: 12px;\r\n\t\t\tpadding: 12px;\r\n\t\t\tborder-bottom: solid gainsboro 2px;\r\n\t\t\t// background-color: lightblue;\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\r\n\t\t\t.heading{\r\n\t\t\t\ttext-align: center;\r\n\t\t\t}\r\n\r\n\t\t\t.metadata{\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tjustify-content: center;\r\n\t\t\t\tfont-style: italic;\r\n\r\n\t\t\t\t.info{\r\n\t\t\t\t\tcolor: lightcoral;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t.content{\r\n\t\t\t\ttext-align: justify;\r\n\t\t\t\thyphens: auto;\r\n\t\t\t\tword-wrap: break-word;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t.vote{\r\n\t\t\t\tmargin-top: auto;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tjustify-content: center;\r\n\t\t\t\tpadding-top: 4px;\r\n\r\n\t\t\t\timg{\r\n\t\t\t\t\theight: 24px;\r\n\t\t\t\t\twidth: 24px;\r\n\t\t\t\t\tcursor: pointer;\r\n\t\t\t\t}\r\n\t\t\t\tp{\r\n\t\t\t\t\tmargin: 0;\r\n\t\t\t\t\tpadding: 2px 4px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.likes{\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\tmargin-right: 64px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.dislikes{\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}",
                    "styleUrl": "./content.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authenticator",
                        "type": "Authenticator",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authenticator",
                        "type": "Authenticator",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"content-container\">\r\n\t<app-nav [currentUser]=\"this.currentUser\" [isLoggedIn]=\"this.isLoggedIn\"></app-nav>\r\n\t<div class=\"container\">\r\n\t\t<div class=\"blog\">\r\n\t\t\t<h3 class=\"heading\"> {{ this.blog.title }}</h3>\r\n\t\t\t<div class=\"metadata\">\r\n\t\t\t\t<p class=\"author\">Written By <a class=\"info\" [routerLink]=\"['/user', this.blog.username]\">{{this.blog.firstname}} {{this.blog.lastname}}</a> |</p>\r\n\t\t\t\t<p class=\"date\">| Published On <span class=\"info\">{{this.blog.createdAt | slice:0:10}}</span></p>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"content\" [innerHTML]=\"this.blog.content\"></div>\r\n\t\t\t<div class=\"vote\">\r\n\t\t\t\t<div class=\"likes\">\r\n\t\t\t\t\t<img src=\"{{(blog.liked == 1) ? './../../../assets/images/quilandquest/liked.png' : './../../../assets/images/quilandquest/like.png' }}\" alt=\"\" (click)=\"liked(blog.blogId, blog.liked)\"> <p>{{blog.likes}}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"dislikes\">\r\n\t\t\t\t\t<img src=\"{{(blog.liked == -1) ? './../../../assets/images/quilandquest/disliked.png' : './../../../assets/images/quilandquest/dislike.png' }}\" alt=\"\" (click)=\"disliked(blog.blogId, blog.liked)\"> <p>{{blog.dislikes}}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>"
        },
        {
            "name": "FeedComponent",
            "id": "component-FeedComponent-e0147ecb8f08dfcba30fdf37ac493189bc5d39fdcab80490d937c56ee401e97babc822e3420fd0c35adf23f6880e233863807b5860dcafa07eed501fbeb4f6ce",
            "file": "src/lib/quilandquest/feed/feed.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-feed",
            "styleUrls": [
                "./feed.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./feed.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "blogs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "currentUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "headers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "isLoggedIn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "jwtToken",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "validClick",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "disliked",
                    "args": [
                        {
                            "name": "blogId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "liked",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "blogId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "liked",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "liked",
                    "args": [
                        {
                            "name": "blogId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "liked",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "blogId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "liked",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "onMouseDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:mousedown', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMouseMove",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:mousemove', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "readMore",
                    "args": [
                        {
                            "name": "blogId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "blogId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateDatabase",
                    "args": [
                        {
                            "name": "blogId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "liked",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "blogId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "liked",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:mousedown",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 124
                },
                {
                    "name": "document:mousemove",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 129
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostListener, OnInit } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { User } from 'src/service/app.user';\r\nimport { Authenticator } from 'src/service/app.authenticator';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-feed',\r\n  templateUrl: './feed.component.html',\r\n  styleUrls: ['./feed.component.scss']\r\n})\r\nexport class FeedComponent implements OnInit{\r\n\r\n  public currentUser: any;\r\n  public isLoggedIn: boolean = false;\r\n  public blogs: any;\r\n  private jwtToken: any;\r\n  private headers: any;\r\n  private validClick: boolean = false;\r\n\r\n  constructor(private http: HttpClient, private cookieService: CookieService, private authenticator: Authenticator, private router: Router){\r\n    this.jwtToken = this.cookieService.get('boonJwtToken');\r\n    this.headers = new HttpHeaders({\r\n      'Authorization': `Bearer ${this.jwtToken}` // Include the JWT token in the Authorization header\r\n    });\r\n  }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    //check if user is authenticated.\r\n    await this.authenticator.authenticate();\r\n    this.isLoggedIn = User.isLoggedIn();\r\n    this.currentUser = User.getCurrentUser();\r\n\r\n    if(this.isLoggedIn){\r\n      console.log(this.headers);\r\n      this.http.get(`${environment.baseUrl}/api/v1/public/blogs/all`, {headers: this.headers})\r\n      .subscribe({\r\n        next: response => {\r\n          console.log(response);\r\n          this.blogs = response;\r\n        },\r\n        error: error => {\r\n          console.error('API Error', error);\r\n        }   \r\n      });\r\n    }else{\r\n      this.http.get(`${environment.baseUrl}/api/v1/public/blogs/all`)\r\n      .subscribe({\r\n        next: response => {\r\n          console.log(response);\r\n          this.blogs = response;\r\n        },\r\n        error: error => {\r\n          console.error('API Error', error);\r\n        }   \r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  liked(blogId: number, liked: number){\r\n    if(User.isLoggedIn() == false){\r\n      alert(\"Please LogIn to like.\");\r\n      return;\r\n    } \r\n    var blog = this.blogs.find( (t:any) => t.blogId === blogId);\r\n    // console.log(blog);\r\n    if(liked == 1) {\r\n      blog.liked = 0;\r\n      blog.likes -= 1;\r\n    }\r\n    else if(liked == -1){\r\n      blog.liked = 1;\r\n      blog.dislikes -= 1;\r\n      blog.likes += 1;\r\n    }else{\r\n      blog.liked = 1;\r\n      blog.likes += 1;\r\n    }\r\n    this.updateDatabase(blogId, blog.liked);\r\n  }\r\n\r\n  disliked(blogId: number, liked: number){\r\n    if(User.isLoggedIn() == false){\r\n      alert(\"Please LogIn to dislike.\");\r\n      return;\r\n    } \r\n    var blog = this.blogs.find( (t:any) => t.blogId === blogId);\r\n    // console.log(blog);\r\n    if(liked == -1) {\r\n      blog.liked = 0;\r\n      blog.dislikes -= 1;\r\n    }else if(liked == 1){\r\n      blog.liked = -1;\r\n      blog.likes -= 1;\r\n      blog.dislikes += 1;\r\n    }\r\n    else {\r\n      blog.liked = -1;\r\n      blog.dislikes += 1;\r\n    }\r\n    this.updateDatabase(blogId, blog.liked);\r\n  }\r\n\r\n  updateDatabase(blogId: any, liked: any){\r\n    const body = {\r\n      liked: liked\r\n    }\r\n    this.http.post(`${environment.baseUrl}/api/v1/secured/event/${blogId}`, body, {headers: this.headers})\r\n      .subscribe({\r\n        next: response => {\r\n          console.log(response);\r\n        },\r\n        error: error => {\r\n          console.error('API Error', error);\r\n        }   \r\n      });\r\n  }\r\n\r\n  // logic for a valid click -> could be improved.\r\n  @HostListener('document:mousedown', ['$event'])\r\n  onMouseDown(event: MouseEvent) {\r\n    this.validClick = true;\r\n  }\r\n\r\n  @HostListener('document:mousemove', ['$event'])\r\n  onMouseMove(event: MouseEvent) {\r\n    this.validClick = false;\r\n  }\r\n\r\n  readMore(blogId: any){\r\n    if(this.validClick)this.router.navigate(['/content', blogId]);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".feed-container{\r\n\theight: 100vh;\r\n\twidth: 100vw;\r\n\t\r\n\t.feeds{\r\n\t\theight: 90vh;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\toverflow-y: scroll;\r\n\t\tpadding-bottom: 32px;\r\n\t\tbox-sizing: border-box;\r\n\t\t// background-color: grey;\r\n\r\n\t\t.blog{\r\n\t\t\tmin-height: 240px;\r\n\t\t\tmax-height: 240px;\r\n\t\t\twidth: 48vw;\r\n\t\t\tmargin-top: 12px;\r\n\t\t\tpadding: 12px;\r\n\t\t\tborder-bottom: solid gainsboro 2px;\r\n\t\t\t// background-color: lightblue;\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\r\n\t\t\t.heading{\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t}\r\n\r\n\t\t\t.metadata{\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tfont-style: italic;\r\n\r\n\t\t\t\t.info{\r\n\t\t\t\t\tcolor: lightcoral;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t.content{\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t\theight: 92px;\r\n\t\t\t\toverflow: hidden;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t.vote{\r\n\t\t\t\tmargin-top: auto;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tjustify-content: center;\r\n\t\t\t\tpadding-top: 4px;\r\n\r\n\t\t\t\timg{\r\n\t\t\t\t\theight: 24px;\r\n\t\t\t\t\twidth: 24px;\r\n\t\t\t\t\tcursor: pointer;\r\n\t\t\t\t}\r\n\t\t\t\tp{\r\n\t\t\t\t\tmargin: 0;\r\n\t\t\t\t\tpadding: 2px 4px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.likes{\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\tmargin-right: 64px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.dislikes{\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}",
                    "styleUrl": "./feed.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authenticator",
                        "type": "Authenticator",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authenticator",
                        "type": "Authenticator",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"feed-container\">\r\n\t<app-nav [currentUser]=\"this.currentUser\" [isLoggedIn]=\"this.isLoggedIn\"></app-nav>\r\n\t<div class=\"feeds\">\r\n\t\t<ng-container *ngFor=\"let blog of blogs\">\r\n\t\t\t<div class=\"blog\">\r\n\t\t\t\t<h3 class=\"heading\" (click)=\"readMore(blog.blogId)\"> {{ blog.title }}</h3>\r\n\t\t\t\t<div class=\"metadata\">\r\n\t\t\t\t\t<p class=\"author\">Written By <a class=\"info\" [routerLink]=\"['/user', blog.username]\">{{blog.firstname}} {{blog.lastname}}</a> |</p>\r\n\t\t\t\t\t<p class=\"date\">| Published On <span class=\"info\">{{blog.createdAt | slice:0:10}}</span></p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"content\" [innerHTML]=\"blog.content\" (click)=\"readMore(blog.blogId)\"></div>\r\n\t\t\t\t<div class=\"vote\">\r\n\t\t\t\t\t<div class=\"likes\">\r\n\t\t\t\t\t\t<img src=\"{{(blog.liked == 1) ? './../../../assets/images/quilandquest/liked.png' : './../../../assets/images/quilandquest/like.png' }}\" alt=\"\" (click)=\"liked(blog.blogId, blog.liked)\"> <p>{{blog.likes}}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"dislikes\">\r\n\t\t\t\t\t\t<img src=\"{{(blog.liked == -1) ? './../../../assets/images/quilandquest/disliked.png' : './../../../assets/images/quilandquest/dislike.png' }}\" alt=\"\" (click)=\"disliked(blog.blogId, blog.liked)\"> <p>{{blog.dislikes}}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</ng-container>\r\n\t</div>\r\n</div>\r\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-99f811e9480fa2cb398ab48e87753dcc47168f2b7f52ab47705e01f7187de398bd0c52aed69399c866bfae42b165c36456c205501323aa76d24e2bc40040633b",
            "file": "src/lib/auth/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "formData",
                    "defaultValue": "{\r\n    username: '',\r\n    password: '',\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "source",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public source!: string;\r\n\r\n  constructor(private http: HttpClient, private cookieService: CookieService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(params => {\r\n      this.source = params['source'];\r\n    });    \r\n  }\r\n\r\n  formData = {\r\n    username: '',\r\n    password: '',\r\n  };\r\n\r\n  submitForm() {\r\n    this.http.post<any>(`${environment.baseUrl}/api/v1/public/auth/authenticate`, this.formData)\r\n    .subscribe({\r\n      next: response => {\r\n        const jwtToken = response.token;\r\n        const username = response.username;\r\n        this.cookieService.set('boonJwtToken', jwtToken, 7, '/');\r\n        this.cookieService.set('boonCurrentUser', username, 7, '/');\r\n        console.log(response);\r\n        if(response.isAuthenticated){\r\n          if(this.source != undefined && this.source.length > 0) this.router.navigate([this.source]);\r\n          else this.router.navigate(['/user', response.username]);\r\n        }\r\n      },\r\n      error: error => {\r\n        console.error('API Error:', error);\r\n        // Handle the error response\r\n      }\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"./../../../styles/config.scss\";\r\n\r\n.login-page{\r\n  // background-color: red;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  // flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-family: $primary-font;\r\n\r\n    .login-form{\r\n      background-color: whitesmoke;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      // align-items: center;\r\n      padding: 48px;\r\n      border-radius: 8px;\r\n      // border: solid black 2px;\r\n      box-shadow: 4px 4px;\r\n\r\n      input{\r\n        height: 24px;\r\n        width: 256px;\r\n        padding: 4px 8px;\r\n        border: solid black 1px;\r\n        border-radius: 24px;\r\n        margin-top: 16px;\r\n      }\r\n\r\n      button{\r\n        height: 32px;\r\n        border: 0px;\r\n        margin-top: 16px;\r\n        background-color: palegreen;\r\n        box-shadow: black 4px 4px;\r\n        border-radius: 24px;\r\n        font-weight: bold;\r\n      }\r\n\r\n      p{\r\n        font-size: 14px;\r\n        text-align: center;\r\n      }\r\n\r\n      button:hover{\r\n        background-color: rgb(89, 211, 89);\r\n      }\r\n\r\n      button:active{\r\n        box-shadow: 2px 2px;\r\n      }\r\n    }\r\n}\r\n\r\n.error{\r\n  color: orangered;\r\n  font-size: 12px;\r\n  margin-left: 12px;\r\n}",
                    "styleUrl": "./login.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"login-page\">\r\n\t  <form class=\"login-form\" (ngSubmit)=\"submitForm()\" #myForm=\"ngForm\">\r\n\t\t<input type=\"text\" placeholder=\"username\" name=\"username\" [(ngModel)]=\"formData.username\" class=\"form-controle\" required minlength=\"4\" #username=\"ngModel\"/>\r\n\t\t<div *ngIf=\"username.invalid && (username.dirty || username.touched)\"class=\"error\">\r\n\t\t\t<div *ngIf=\"username.errors?.['required']\">\r\n\t\t\t\tusername is required.\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<input type=\"password\" placeholder=\"password\" name=\"password\" [(ngModel)]=\"formData.password\" required #password=\"ngModel\"/>\r\n\t\t<div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"error\">\r\n\t\t\t<div *ngIf=\"password.errors?.['required']\">\r\n\t\t\t\tpassword is required.\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<button type=\"submit\" [disabled]=\"!myForm.form.valid\">Log In</button>\r\n\t\t<!-- <button> Log In </button> -->\r\n\t\t<p class=\"message\">Not registered? <a routerLink=\"/signup/{{this.source}}\">Create an account</a></p>\r\n\t  </form>\r\n  </div>"
        },
        {
            "name": "NavComponent",
            "id": "component-NavComponent-1a13545c9d2136ee773648ad0ecdcc4f09ffd29a992f07daba102b05d6368cb4e2b895bc84d7b28129fc35f60a3b5fdbc3ab6dc03f39efbf43f4cef3d62575f1",
            "file": "src/lib/quilandquest/nav/nav.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-nav",
            "styleUrls": [
                "./nav.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./nav.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "currentUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "isLoggedIn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "showCurrentUser",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "logOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.scss']\r\n})\r\nexport class NavComponent implements OnInit{\r\n\r\n  @Input() public currentUser: any;\r\n  @Input() public isLoggedIn: boolean = false;\r\n  public showCurrentUser: boolean = false;\r\n\r\n  constructor(private router: Router, private cookieService: CookieService) {}\r\n\r\n  ngOnInit(): void {\r\n      \r\n  }\r\n\r\n  showMenu(){\r\n    this.showCurrentUser = !this.showCurrentUser;\r\n  }\r\n\r\n  logOut(){\r\n    this.cookieService.deleteAll('/');\r\n    this.router.navigate(['/login/quilandquest']);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".nav{\r\n\theight: 10vh;\r\n\tposition: relative;\r\n\tborder-bottom: solid gainsboro 2px;\r\n\tdisplay: flex;\r\n\t// justify-content: flex-end;\r\n\talign-items: center;\r\n\tmargin: 0 24px;\r\n\tpadding: 12px;\r\n\r\n\ta{\t\r\n\t\tmargin-right: auto;\r\n\t\tdisplay: flex;\r\n\t\ttext-decoration: none\r\n\t}\r\n\t\r\n\ta:link { color: black;}\r\n\t\r\n\ta:visited { color: black; }\r\n\t\r\n\ta:hover { color: black; }\r\n\t\r\n\ta:active { color: black; }\r\n\r\n\t.logo{\r\n\t\theight: 64px;\r\n\t\twidth: 64px;\r\n\t}\r\n\r\n\t.user{\r\n\t\t// margin-left: auto;\r\n\t\tborder-radius: 24px;\r\n\t\tbox-shadow: black 4px 4px;\r\n\t\tbackground-color: white;\r\n\t\theight: 48px;\r\n\t\twidth: 48px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\t.user:active{\r\n\t\tbox-shadow: black 2px 2px;\r\n\t}\r\n\t.user:hover{\r\n\t\tbackground-color: whitesmoke;\r\n\t}\r\n\r\n\t.user-card{\r\n\t\tmargin-right: 16px;\r\n\t\tbackground-color: white;\r\n\t\tborder: solid black 1px;\r\n\t\twidth: 256px;\r\n\t\tborder-radius: 24px;\r\n\t\tz-index: 10;\r\n\r\n\t\t.info-container{\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 100%;\r\n\t\t\tdisplay: flex;\r\n\t\t\talign-items: center;\r\n\t\t\tpadding: 8px 12px;\r\n\t\t\tbox-sizing: border-box;\r\n\t\t\t\r\n\t\t\ta{\r\n\t\t\t\tfont-weight: bold;\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t}\r\n\t\t\ta:hover{\r\n\t\t\t\tcolor: coral;\r\n\t\t\t}\r\n\r\n\t\t\t.log{\r\n\t\t\t\tbackground-color: gray;\r\n\t\t\t\tborder-radius: 16px;\r\n\t\t\t\twidth: 72px;\r\n\t\t\t\theight: 32px;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tjustify-content: center;\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n",
                    "styleUrl": "./nav.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"nav\">\r\n\t<a [routerLink]=\"['/quilandquest']\">\r\n\t\t<img class=\"logo\" src=\"/assets/images/quilandquest/feather.png\" alt=\"\">\r\n\t\t<h2> Quil And Quest </h2>\r\n\t</a>\r\n\t<div class=\"user-card\" *ngIf=\"this.showCurrentUser\">\r\n\t\t<div class=\"info-container\" *ngIf=\"this.isLoggedIn; else notLoggedIn\">\r\n\t\t\t<a [routerLink]=\"['/user', this.currentUser]\">{{ this.currentUser }}</a>\r\n\t\t\t<div class=\"log\" (click)=\"logOut()\"> LogOut</div>\r\n\t\t</div>\r\n\t\t<ng-template #notLoggedIn>\r\n\t\t\t<div class=\"info-container\">\r\n\t\t\t\t<p>Please log in to continue.</p>\r\n\t\t\t\t<a class=\"log\" [routerLink]=\"['/login/quilandquest']\"> LogIn </a>\r\n\t\t\t</div>\r\n\t\t</ng-template>\r\n\t</div>\r\n\t<img src=\"/assets/images/profile/user.png\" class=\"user\" (click)=\"showMenu()\">\r\n</div>"
        },
        {
            "name": "ProfileComponent",
            "id": "component-ProfileComponent-b409750c3a5584a5fc18952f2d9edf1ec82a2d6bcadc07d894ed8befeb4061f1122fb655d84f11c9e6273e4dcb9e071c30f76a38a2cacb9ee7a5654c0ecd5981",
            "file": "src/lib/profile/profile.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-profile",
            "styleUrls": [
                "./profile.component.scss",
                "./../../styles/config.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./profile.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "X1",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "Y1",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "close",
                    "defaultValue": "new EventEmitter<any> ()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "EventEmitter"
                },
                {
                    "name": "Xemitter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                },
                {
                    "name": "Yemitter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "currentUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "descriptionLength",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "editProfile",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "formData",
                    "defaultValue": "{\r\n    description: \"\",\r\n    username: \"\",\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    resume: \"\",\r\n    showResume: false,\r\n    linkedin: \"\",\r\n    showLinkedin: false,\r\n    github: \"\",\r\n    showGithub: false,\r\n    gmail: \"\",\r\n    showGmail: false\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "profileConfig",
                    "defaultValue": "{\r\n    theme : \"theme-profile\",\r\n    heading : \"Profile\",\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Object",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "closeWindow",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "emitX",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emitY",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "limitInputLength",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setEditProfile",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submitForm",
                    "args": [
                        {
                            "name": "form",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { User } from 'src/service/app.user'\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss', './../../styles/config.scss']\r\n})\r\nexport class ProfileComponent implements OnInit, OnChanges{\r\n  public currentUser: any;\r\n  @Input() public username: any;\r\n  @Input() public X1: number = 0;\r\n  @Input() public Y1: number = 0;\r\n  @Output() public Xemitter = new EventEmitter<any>();\r\n  @Output() public Yemitter = new EventEmitter<any>();\r\n  @Output() public close = new EventEmitter<any> ();\r\n\r\n  public profileConfig: Object = {\r\n    theme : \"theme-profile\",\r\n    heading : \"Profile\",\r\n  }\r\n\r\n  public descriptionLength: number = 0;\r\n  public editProfile: boolean = false;\r\n  // formData: any;\r\n  formData = {\r\n    description: \"\",\r\n    username: \"\",\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    resume: \"\",\r\n    showResume: false,\r\n    linkedin: \"\",\r\n    showLinkedin: false,\r\n    github: \"\",\r\n    showGithub: false,\r\n    gmail: \"\",\r\n    showGmail: false\r\n  }\r\n\r\n  constructor(private http: HttpClient, private cookieService: CookieService) { \r\n    this.currentUser = User.getCurrentUser();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.http.get(`${environment.baseUrl}/api/v1/public/profile/${this.username}`)\r\n    .subscribe({\r\n      next: response => {\r\n        const data: any = response;\r\n        this.formData = data;\r\n      },\r\n      error: error => {\r\n        console.error('API Error:', error);\r\n        // Handle the error response\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: any) {\r\n    if (changes.username) {\r\n      // Perform any necessary actions when the variable changes\r\n      this.ngOnInit();\r\n    }\r\n  }\r\n\r\n  submitForm(form: any) {\r\n    if (form.valid) {\r\n      const jwtToken = this.cookieService.get('boonJwtToken');\r\n      const headers = new HttpHeaders({\r\n        'Authorization': `Bearer ${jwtToken}` // Include the JWT token in the Authorization header\r\n      });\r\n      console.log(jwtToken);\r\n      console.log(this.formData);\r\n      this.http.post(`${environment.baseUrl}/api/v1/secured/profile`, this.formData, {headers})\r\n      .subscribe({\r\n        next: response => {\r\n          console.log(\"res\", response);\r\n        },\r\n        error: error => {\r\n          console.error('API Error:', error);\r\n          // Handle the error response\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  limitInputLength() {\r\n    if (this.formData.description.length > 255) {\r\n      this.formData.description = this.formData.description.slice(0, 255);\r\n    }\r\n    this.descriptionLength = this.formData.description.length;\r\n  }\r\n\r\n  emitX(value:any){\r\n    this.Xemitter.emit(value);\r\n  }\r\n  \r\n  emitY(value:any){\r\n    this.Yemitter.emit(value);\r\n  }\r\n\r\n  closeWindow(){\r\n    this.close.emit();\r\n  }\r\n\r\n  setEditProfile(){\r\n    this.editProfile = !this.editProfile;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "app-window{\r\n\t.profile-container{\r\n\t\tmin-height: 36vh;\r\n\t\twidth: 40vw;\r\n\t\tmin-width: 400px;\r\n\t\tpadding: 8px;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\t\r\n\t\t.profile{\r\n\t\t\theight: 100%;\r\n\t\t\twidth: 100%;\r\n\t\t\tbackground-color: #ebb7c9;\r\n\t\t\tborder-radius: 8px;\r\n\t\t\tdisplay: flex;\r\n\r\n\t\t\t.left{\r\n\t\t\t\tmin-height: 36vh;\r\n\t\t\t\tbackground-color: antiquewhite;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tpadding: 0px 16px;\r\n\r\n\t\t\t\t.profile-image{\r\n\t\t\t\t\theight: 96px;\r\n\t\t\t\t\twidth: 96px;\r\n\t\t\t\t\tmargin: 8px;\r\n\t\t\t\t\tborder-radius: 50%;\r\n\t\t\t\t\tborder: solid black;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.contacts{\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t\t// background-color: aquamarine;\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\tflex-direction: column;\r\n\t\t\t\t\tjustify-content: center;\r\n\r\n\t\t\t\t\t.source{\r\n\t\t\t\t\t\tpadding: 4px;\r\n\t\t\t\t\t\tdisplay: flex;\r\n\r\n\t\t\t\t\t\t.icon{\r\n\t\t\t\t\t\t\theight: 24px;\r\n\t\t\t\t\t\t\twidth: 24px;\r\n\t\t\t\t\t\t\tmargin-right: 8px;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tp{\r\n\t\t\t\t\t\t\tmargin: 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t.right{\r\n\t\t\t\tpadding: 8px;\r\n\t\t\t\tmin-height: 36vh;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t\tposition: relative;\r\n\r\n\t\t\t\th2{\r\n\t\t\t\t\tmargin: 0;\r\n\t\t\t\t}\r\n\t\t\t\th5{\r\n\t\t\t\t\tmargin: 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.description{\r\n\t\t\t\t\tbackground-color: white;\r\n\t\t\t\t\theight: fit-content;\r\n\t\t\t\t\tmargin-top: 16px;\r\n\t\t\t\t\tpadding: 8px 16px;\r\n\t\t\t\t\tborder-radius: 8px;\r\n\t\t\t\t\ttext-align: justify;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.edit{\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\tbottom: 8px;\r\n\t\t\t\t\tright: 8px;\r\n\t\t\t\t\theight: 32px;\r\n\t\t\t\t\twidth: 32px;\r\n\t\t\t\t\tbackground-color: white;\r\n\t\t\t\t\tmargin-top: auto;\r\n\t\t\t\t\tmargin-left: auto;\r\n\t\t\t\t\tbox-shadow: black 4px 4px;\r\n\t\t\t\t\tpadding: 4px;\r\n\t\t\t\t\tborder-radius: 48px 48px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.edit:hover{\r\n\t\t\t\t\tbackground-color: whitesmoke;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.edit:active{\r\n\t\t\t\t\tbox-shadow: 2px 2px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t.edit-profile{\r\n\t\t\tmin-height: 40vh;\r\n\t\t\twidth: 100%;\r\n\t\t\tbackground-color: #ebb7c9;\r\n\t\t\tborder-radius: 8px;\r\n\r\n\t\t\t.return{\r\n\t\t\t\theight: 32px;\r\n\t\t\t\twidth: 32px;\r\n\t\t\t\tpadding: 4px;\r\n\t\t\t}\r\n\r\n\t\t\t.description{\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tpadding: 4px;\r\n\t\t\t\tmargin-bottom: 8px;\r\n\r\n\t\t\t\ttextarea{\r\n\t\t\t\t\tresize: none;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t.element{\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tpadding: 4px;\r\n\t\t\t\tmargin-bottom: 8px;\r\n\t\t\t}\r\n\r\n\t\t\tbutton{\r\n\t\t\t\tmargin-left: 4px;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n",
                    "styleUrl": "./profile.component.scss"
                },
                {
                    "data": "$primary-font: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;;\r\n\r\n\r\n//themes\r\n$primary-color-profile: #ebb7c9;\r\n$secondary-color-profile: #faedf1; \r\n.theme-profile{\r\n\tbackground-color: $secondary-color-profile;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-profile;\r\n\t}\r\n}\r\n\r\n$primary-color-projects: #b2fcb2;\r\n$secondary-color-projects: #ecfeec;\r\n.theme-projects{\r\n\tbackground-color: $secondary-color-projects;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-projects;\r\n\t}\r\n}\r\n\r\n$primary-color-skills: #ffefd5;\r\n$secondary-color-skills: #fffbf4;\r\n.theme-skills{\r\n\tbackground-color: $secondary-color-skills;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-skills;\r\n\t}\r\n}\r\n\r\n$primary-color-blogs: #8baff1;\r\n$seconday-color-blogs: #e2ebfb;\r\n.theme-blogs{\r\n\tbackground-color: $seconday-color-blogs;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-blogs;\r\n\t}\r\n}\r\n\r\n",
                    "styleUrl": "./../../styles/config.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 42,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<app-window [windowConfig]=\"profileConfig\" [X1]=\"this.X1\" [Y1]=\"this.Y1\" (Xemitter)=\"emitX($event)\" (Yemitter)=\"emitY($event)\" (close)=\"closeWindow()\">\r\n\t<div class=\"profile-container\">\r\n\t\t<div class=\"edit-profile\" *ngIf=\"editProfile; else profile\">\r\n\t\t\t<img src=\"./../../assets/images/buttons/return.png\" alt=\"\" class=\"return\" (click)=\"setEditProfile()\">\r\n\t\t\t<form #myForm=\"ngForm\" (ngSubmit)=\"submitForm(myForm)\">\r\n\t\t\t\t<div class=\"description\">\r\n\t\t\t\t  <label for=\"description\">Description ({{ this.descriptionLength }}/255 characters):</label>\r\n\t\t\t\t  <textarea rows=\"5\" cols=\"60\" id=\"description\" placeholder=\"Enter Description ...\" name=\"description\" maxlength=\"255\" [(ngModel)]=\"formData.description\" (input)=\"limitInputLength()\"></textarea>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"element\">\r\n\t\t\t\t  <label for=\"resume\">Resume:</label>\r\n\t\t\t\t  <input type=\"url\" id=\"resume\" name=\"resume\" [(ngModel)]=\"formData.resume\">\r\n\t\t\t\t  <label for=\"show-resume\">Show resume on profile:</label>\r\n\t\t\t\t  <input type=\"checkbox\" id=\"show-resume\" name=\"showResume\" [(ngModel)]=\"formData.showResume\">\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"element\">\r\n\t\t\t\t  <label for=\"linkedin\">LinkedIn:</label>\r\n\t\t\t\t  <input type=\"url\" id=\"linkedin\" name=\"linkedin\" [(ngModel)]=\"formData.linkedin\">\r\n\t\t\t\t  <label for=\"show-linkedin\">Show resume on profile:</label>\r\n\t\t\t\t  <input type=\"checkbox\" id=\"show-linkedin\" name=\"showLinkedin\" [(ngModel)]=\"formData.showLinkedin\">\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"element\">\r\n\t\t\t\t  <label for=\"github\">GitHub:</label>\r\n\t\t\t\t  <input type=\"url\" id=\"github\" name=\"github\" [(ngModel)]=\"formData.github\">\r\n\t\t\t\t  <label for=\"show-github\">Show resume on profile:</label>\r\n\t\t\t\t  <input type=\"checkbox\" id=\"show-github\" name=\"showGithub\" [(ngModel)]=\"formData.showGithub\">\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"element\">\r\n\t\t\t\t  <label for=\"gmail\">Gmail:</label>\r\n\t\t\t\t  <input type=\"email\" id=\"gmail\" name=\"gmail\" [(ngModel)]=\"formData.gmail\">\r\n\t\t\t\t  <label for=\"show-gmail\">Show resume on profile:</label>\r\n\t\t\t\t  <input type=\"checkbox\" id=\"show-gmail\" name=\"showGmail\" [(ngModel)]=\"formData.showGmail\">\r\n\t\t\t\t</div>\r\n\t\t\t\t<button type=\"submit\">Submit</button>\r\n\t\t\t</form>  \r\n\t\t</div>\r\n\t\t<ng-template #profile>\r\n\t\t\t<div class=\"profile\">\r\n\t\t\t\t<div class=\"left\">\r\n\t\t\t\t\t<img src=\"./../../assets/images/profile/user.png\" alt=\"\" class=\"profile-image\">\r\n\t\t\t\t\t<div class=\"contacts\">\r\n\t\t\t\t\t\t<a href=\"{{this.formData.resume}}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"source\" *ngIf=\"this.formData.showResume\"> <img src=\"./../../assets/images/profile/doc.png\" alt=\"\" class=\"icon\"> <p> Resume </p></a>\r\n\t\t\t\t\t\t<a href=\"{{this.formData.linkedin}}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"source\" *ngIf=\"this.formData.showLinkedin\"> <img src=\"./../../assets/images/profile/linkedin.png\" alt=\"\" class=\"icon\"> <p> Linkedin </p> </a>\r\n\t\t\t\t\t\t<a href=\"{{this.formData.github}}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"source\" *ngIf=\"this.formData.showGithub\"> <img src=\"./../../assets/images/profile/git.png\" alt=\"\" class=\"icon\"> <p> GitHub </p></a>\r\n\t\t\t\t\t\t<a href=\"https://mail.google.com/mail/?view=cm&fs=1&to={{this.formData.gmail}}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"source\" *ngIf=\"this.formData.showGmail\"> <img src=\"./../../assets/images/profile/gmail.png\" alt=\"\" class=\"icon\"> <p> Gmail </p> </a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"right\">\r\n\t\t\t\t\t<div class=\"name\"><h2>{{this.formData.firstname}} {{this.formData.lastname}}</h2></div>\r\n\t\t\t\t\t<div class=\"username\"><h5>@{{this.formData.username}}</h5></div>\r\n\t\t\t\t\t<div class=\"description\"><p>{{ this.formData.description }}</p></div>\r\n\t\t\t\t\t<img *ngIf=\"(this.currentUser == this.username) \"class=\"edit\" src=\"./../../assets/images/profile/edit.png\" alt=\"\" (click)=\"setEditProfile()\">\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</ng-template>\r\n\t</div>\t\r\n</app-window>"
        },
        {
            "name": "ProjectsComponent",
            "id": "component-ProjectsComponent-5705019a012638f35dd890e72001605901fbe20914efb02ecec16734870c5c93636f64570fc4214b723503ebd881c8f2b396420686a2dee6421c516665659066",
            "file": "src/lib/projects/projects.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-projects",
            "styleUrls": [
                "./projects.component.scss",
                "./../../styles/config.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./projects.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "X1",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "Y1",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "close",
                    "defaultValue": "new EventEmitter<any> ()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter"
                },
                {
                    "name": "Xemitter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "EventEmitter"
                },
                {
                    "name": "Yemitter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "currentUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "descriptionLength",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "editorConfig",
                    "defaultValue": "{\r\n    editable: true,\r\n    spellcheck: true,\r\n    height: '24rem',\r\n    minHeight: '8rem',\r\n    placeholder: 'Enter text here...',\r\n    translate: 'no',\r\n    defaultParagraphSeparator: 'p',\r\n    toolbarHiddenButtons:[\r\n      ['fontName']\r\n    ]\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AngularEditorConfig",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "formData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "headers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "jwtToken",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "projects",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "projectsConfig",
                    "defaultValue": "{\r\n    theme : \"theme-projects\",\r\n    heading : \"Projects\",\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Object",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectedProjectId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showDeletePopup",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showProjectEditor",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "closeWindow",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "confirmDelete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 150,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "deleteProject",
                    "args": [
                        {
                            "name": "projectId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "projectId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emitX",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emitY",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "limitInputLength",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 165,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setAddProject",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleDeletePopup",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 146,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateProject",
                    "args": [
                        {
                            "name": "projectId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "projectId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Component, OnInit, OnChanges, Input, Output, EventEmitter} from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { User } from 'src/service/app.user';\r\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-projects',\r\n  templateUrl: './projects.component.html',\r\n  styleUrls: ['./projects.component.scss', './../../styles/config.scss']\r\n})\r\nexport class ProjectsComponent implements OnInit, OnChanges{\r\n  public currentUser: any;\r\n  private headers: any;\r\n  private jwtToken: any;\r\n  @Input() public username: any;\r\n  @Input() public X1: number = 0;\r\n  @Input() public Y1: number = 0;\r\n  @Output() public Xemitter = new EventEmitter<any>();\r\n  @Output() public Yemitter = new EventEmitter<any>();\r\n  @Output() public close = new EventEmitter<any> ();\r\n\r\n  public projectsConfig: Object = {\r\n    theme : \"theme-projects\",\r\n    heading : \"Projects\",\r\n  }\r\n  \r\n  public showProjectEditor: boolean = false;\r\n  public showDeletePopup: boolean = false;\r\n  public projects: any;\r\n  public descriptionLength: number = 0;\r\n  public formData: any;\r\n  public selectedProjectId: any;\r\n  \r\n  editorConfig: AngularEditorConfig = {\r\n    editable: true,\r\n    spellcheck: true,\r\n    height: '24rem',\r\n    minHeight: '8rem',\r\n    placeholder: 'Enter text here...',\r\n    translate: 'no',\r\n    defaultParagraphSeparator: 'p',\r\n    toolbarHiddenButtons:[\r\n      ['fontName']\r\n    ]\r\n  };\r\n\r\n  constructor(private http: HttpClient, private cookieService: CookieService, private toastr: ToastrService) { \r\n    this.currentUser = User.getCurrentUser();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.jwtToken = this.cookieService.get('boonJwtToken');\r\n    this.headers = new HttpHeaders({\r\n      'Authorization': `Bearer ${this.jwtToken}` // Include the JWT token in the Authorization header\r\n    });\r\n\r\n    this.http.get(`${environment.baseUrl}/api/v1/public/projects/${this.username}`)\r\n    .subscribe({\r\n      next: response => {\r\n        console.log(response);\r\n        this.projects = response;\r\n      },\r\n      error: error => {\r\n        console.error('API Error', error);\r\n      }   \r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: any) {\r\n    if (changes.username) {\r\n      // Perform any necessary actions when the variable changes\r\n      this.ngOnInit();\r\n    }\r\n  }\r\n\r\n  emitX(value:any){\r\n    this.Xemitter.emit(value);\r\n  }\r\n  \r\n  emitY(value:any){\r\n    this.Yemitter.emit(value);\r\n  }\r\n\r\n  closeWindow(){\r\n    this.close.emit();\r\n  }\r\n  \r\n  setAddProject(){\r\n    this.showProjectEditor = !this.showProjectEditor;\r\n    this.formData = {\r\n      showProject: false,\r\n      title: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      description: \"\",\r\n      content: \"\"\r\n    }\r\n\r\n  }\r\n\r\n  submitForm(){\r\n    if(this.formData.projectId === undefined){\r\n      this.http.post<any>(`${environment.baseUrl}/api/v1/secured/projects`, this.formData, {\"headers\": this.headers})\r\n      .subscribe({\r\n        next: response => {\r\n          if(response.status == \"success\") this.toastr.success(response.message);\r\n          else this.toastr.error(response.message);\r\n          this.ngOnInit();\r\n          this.showProjectEditor = !this.showProjectEditor;\r\n        },\r\n        error: error => {\r\n          console.error('API Error', error);\r\n        }   \r\n      });\r\n    }else{\r\n      this.http.post<any>(`${environment.baseUrl}/api/v1/secured/projects/${this.formData.projectId}`, this.formData, {\"headers\": this.headers})\r\n      .subscribe({\r\n        next: response => {\r\n          if(response.status == \"success\") this.toastr.success(response.message);\r\n          else this.toastr.error(response.message);\r\n          this.showProjectEditor = !this.showProjectEditor;\r\n        },\r\n        error: error => {\r\n          console.error('API Error', error);\r\n        }   \r\n      });\r\n    }\r\n  }\r\n\r\n  updateProject(projectId: any){\r\n    this.showProjectEditor = !this.showProjectEditor;\r\n    this.formData = this.projects.find((x:any) => x.projectId === projectId);\r\n    this.formData.startDate = this.formData.startDate.slice(0,10);\r\n    this.formData.endDate = this.formData.endDate.slice(0,10);\r\n    console.log(this.formData);\r\n  }\r\n\r\n  deleteProject(projectId: any){\r\n    this.toggleDeletePopup();\r\n    this.selectedProjectId = projectId;\r\n  }\r\n\r\n  toggleDeletePopup(){\r\n    this.showDeletePopup = !this.showDeletePopup;\r\n  }\r\n\r\n  confirmDelete(){\r\n    this.http.delete<any>(`${environment.baseUrl}/api/v1/secured/projects/delete/${this.selectedProjectId}`, {\"headers\": this.headers})\r\n      .subscribe({\r\n        next: response => {\r\n          if(response.status == \"success\") this.toastr.success(response.message);\r\n          else this.toastr.error(response.message);\r\n          this.ngOnInit();\r\n          this.toggleDeletePopup();\r\n        },\r\n        error: error => {\r\n          console.error('API Error', error);\r\n        }  \r\n      });\r\n  }\r\n\r\n  limitInputLength(){\r\n    this.descriptionLength = this.formData.description.length;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import './../../styles/config.scss';\r\n\r\n.projects-window{\r\n\theight: 80vh;\r\n\twidth: 80vw;\r\n\tpadding: 8px;\r\n\tposition: relative;\r\n\r\n\t.add{\r\n\t\tbackground-color: white;\r\n\t\theight: 48px;\r\n\t\twidth: 48px;\r\n\t\tborder-radius: 50%;\r\n\t\tbox-shadow: 4px 4px;\r\n\t\tposition: absolute;\r\n\t\tbottom: 32px; \r\n\t\tright: 32px;\r\n\t}\r\n\r\n\t.add:hover{\r\n\t\tbackground-color: whitesmoke;\r\n\t}\r\n\r\n\t.add:active{\r\n\t\tbox-shadow: 2px 2px;\r\n\t}\r\n\t\r\n\t.projects-container{\r\n\t\tposition: relative;\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t\tpadding: 8px 124px 8px 196px;\r\n\t\tbox-sizing: border-box;\r\n\t\tbackground-color: $primary-color-projects;\r\n\t\tborder-radius: 8px;\r\n\t\toverflow-y: scroll;\r\n\r\n\t\t.timeline{\r\n\t\t\tlist-style: none;\r\n\t\t\tborder-left: solid white 8px;\r\n\r\n\t\t\t.block{\r\n\t\t\t\t// background-color: grey;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tposition: relative;\r\n\t\t\t\t// padding-bottom: 16px;\r\n\t\t\t\t// padding-right: 16px;\r\n\t\t\t\tmargin-bottom: 32px;\r\n\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\t\r\n\t\t\t\t.date{\r\n\t\t\t\t\tbackground-color: white;\r\n\t\t\t\t\tborder-radius: 8px;\r\n\t\t\t\t\tpadding: 0px 4px;\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\ttop:50%;\r\n\t\t\t\t\tleft: -158px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.circle{\r\n\t\t\t\t\tbackground-color: palegreen;\r\n\t\t\t\t\tborder-radius: 50%;\r\n\t\t\t\t\tborder: 6px solid white;\r\n\t\t\t\t\theight: 10px;\r\n\t\t\t\t\twidth: 10px;\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\ttop: 50%;\r\n\t\t\t\t\tleft: -55px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.show{\r\n\t\t\t\t\tcursor: pointer;\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\ttop: 8px;\r\n\t\t\t\t\tleft: 20px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.radio:checked ~ label .show{\r\n\t\t\t\t\topacity: 0;\r\n\t\t\t\t\ttransform: translateX(20px);\r\n\t\t\t\t\ttransition: transform 0.2s linear;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.radio:not(:checked) ~ label .show{\r\n\t\t\t\t\topacity: 1;\r\n\t\t\t\t\ttransform: translateX(-20px);\r\n\t\t\t\t\ttransition: transform 0.2s linear;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.hide{\r\n\t\t\t\t\tcursor: pointer;\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\ttop: 8px;\r\n\t\t\t\t\tleft: 20px;\r\n\t\t\t\t\topacity: 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.radio:checked ~ label .hide{\r\n\t\t\t\t\topacity: 1;\r\n\t\t\t\t\ttransform: translateX(20px);\r\n\t\t\t\t\ttransition: transform 0.2s linear;\r\n\t\t\t\t}\r\n\t\t\t\t.radio:not(:checked) ~ label .hide{\r\n\t\t\t\t\topacity: 0;\r\n\t\t\t\t\ttransform: translateX(-20px);\r\n\t\t\t\t\ttransition: transform 0.2s linear;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.edit{\r\n\t\t\t\t\tcursor: pointer;\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\ttop: 8px;\r\n\t\t\t\t\tright: 100px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.radio:checked ~ .edit{\r\n\t\t\t\t\ttransform: translateX(40px);\r\n\t\t\t\t\ttransition: transform 0.2s linear;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.radio:not(:checked) ~ .edit{\r\n\t\t\t\t\ttransform: translateX(0px);\r\n\t\t\t\t\ttransition: transform 0.2s linear;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.delete{\r\n\t\t\t\t\tcursor: pointer;\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\ttop: 8px;\r\n\t\t\t\t\tright: 40px;\r\n\t\t\t\t\tcolor: coral;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.radio:checked ~ .delete{\r\n\t\t\t\t\ttransform: translateX(40px);\r\n\t\t\t\t\ttransition: transform 0.2s linear;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.radio:not(:checked) ~ .delete{\r\n\t\t\t\t\ttransform: translateX(0px);\r\n\t\t\t\t\ttransition: transform 0.2s linear;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.content{\r\n\t\t\t\t\tposition: relative;\r\n\t\t\t\t\tbackground-color: white;\r\n\t\t\t\t\tborder-radius: 8px;\r\n\t\t\t\t\tpadding: 16px;\r\n\t\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\t\toverflow: hidden;\r\n\t\t\t\t\twidth:100%;\r\n\t\t\t\t\tbox-shadow: black 4px 4px;\r\n\r\n\t\t\t\t\t.material{\r\n\t\t\t\t\t\tmax-height: 0;\r\n\t\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\t\toverflow: hidden;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.radio{\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.radio:checked ~ .content{\r\n\t\t\t\t\t// background-color: gainsboro;\r\n\t\t\t\t\ttransform: translateX(20px);\r\n\t\t\t\t\ttransition: transform 0.2s linear;\r\n\t\t\t\t\t// height: max-content;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.radio:checked ~ .content .material{\r\n\t\t\t\t\tmax-height: 2000px;\r\n\t\t\t\t\t// overflow: scroll;\r\n\t\t\t\t\twidth: auto;\r\n\t\t\t\t\ttransition: max-height 0.2s linear;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.radio:not(:checked) ~ .content .material{\r\n\t\t\t\t\tmax-height: 0px;\r\n\t\t\t\t\t// overflow: scroll;\r\n\t\t\t\t\twidth: auto;\r\n\t\t\t\t\ttransition: max-height 0.2s linear;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.radio:not(:checked) ~ .content{\r\n\t\t\t\t\t// background-color: gainsboro;\r\n\t\t\t\t\ttransform: translateX(-20px);\r\n\t\t\t\t\ttransition: transform 0.2s linear;\r\n\t\t\t\t\t// height: max-content;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.radio:checked ~ .circle{\r\n\t\t\t\t\tbackground-color: lightcoral;\r\n\t\t\t\t\ttransition: background-color 0.2s linear;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.radio:not(:checked) ~ .circle{\r\n\t\t\t\t\tbackground-color: palegreen;\r\n\t\t\t\t\ttransition: background-color 0.2s linear;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t::-webkit-scrollbar {\r\n\t\twidth: 12px;\r\n\t}\r\n\t\r\n\t/* Handle */\r\n\t::-webkit-scrollbar-thumb {\r\n\t\t-webkit-border-radius: 8px;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground: rgb(76, 170, 76); \r\n\t}\r\n\r\n\t.edit-project{\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t\toverflow-y: scroll;\r\n\t\t// background-color: red;\r\n\r\n\t\t.return{\r\n\t\t\theight: 48px;\r\n\t\t\twidth: 48px;\r\n\t\t}\r\n\r\n\t\t.element{\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\t\t\tjustify-content: space-between;\r\n\t\t\talign-items: baseline;\r\n\r\n\t\t\tangular-editor{\r\n\t\t\t\tbackground-color: white;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\r\n\t\t\ttextarea{\r\n\t\t\t\tresize: none;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tbox-sizing: border-box;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.delete-popup{\r\n\t\tposition: absolute;\r\n\t\ttop: 0px;\r\n\t\tleft: 0px;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t\tbackground-color: rgb(0, 0, 0, 0.8);\r\n\t\tz-index: 10;\r\n\r\n\t\t.options{\r\n\t\t\tbackground-color: whitesmoke;\r\n\t\t\theight: 100px;\r\n\t\t\twidth: 200px;\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\t\t\tjustify-content: center;\r\n\t\t\talign-items: center;\r\n\t\t\tborder-radius: 8px;\r\n\r\n\t\t\t.btn{\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tjustify-content: space-evenly;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n",
                    "styleUrl": "./projects.component.scss"
                },
                {
                    "data": "$primary-font: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;;\r\n\r\n\r\n//themes\r\n$primary-color-profile: #ebb7c9;\r\n$secondary-color-profile: #faedf1; \r\n.theme-profile{\r\n\tbackground-color: $secondary-color-profile;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-profile;\r\n\t}\r\n}\r\n\r\n$primary-color-projects: #b2fcb2;\r\n$secondary-color-projects: #ecfeec;\r\n.theme-projects{\r\n\tbackground-color: $secondary-color-projects;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-projects;\r\n\t}\r\n}\r\n\r\n$primary-color-skills: #ffefd5;\r\n$secondary-color-skills: #fffbf4;\r\n.theme-skills{\r\n\tbackground-color: $secondary-color-skills;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-skills;\r\n\t}\r\n}\r\n\r\n$primary-color-blogs: #8baff1;\r\n$seconday-color-blogs: #e2ebfb;\r\n.theme-blogs{\r\n\tbackground-color: $seconday-color-blogs;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-blogs;\r\n\t}\r\n}\r\n\r\n",
                    "styleUrl": "./../../styles/config.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "toastr",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 48,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "toastr",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<app-window [windowConfig]=\"projectsConfig\" [X1]=\"this.X1\" [Y1]=\"this.Y1\" (Xemitter)=\"emitX($event)\" (Yemitter)=\"emitY($event)\" (close)=\"closeWindow()\">\r\n\t<div class=\"projects-window\">\r\n\t\t<div class=\"edit-project\" *ngIf=\"showProjectEditor; else project\">\r\n\t\t\t<img src=\"./../../assets/images/buttons/return.png\" alt=\"\" class=\"return\" (click)=\"setAddProject()\">\r\n\t\t\t<div class=\"element\">\r\n\t\t\t\t<label for=\"title\">Title:</label>\r\n\t\t\t\t<input type=\"text\" id=\"title\" name=\"title\" [(ngModel)]=\"formData.title\">\r\n\t\t\t</div>\r\n\t\t\t<div class=\"element\">\r\n\t\t\t\t<label for=\"description\">Description ({{ this.descriptionLength }}/255 characters):</label>\r\n\t\t\t\t<textarea rows=\"3\" cols=\"60\" id=\"description\" placeholder=\"Enter Description ...\" name=\"description\" maxlength=\"255\" [(ngModel)]=\"formData.description\" (input)=\"limitInputLength()\"></textarea>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"element\">\r\n\t\t\t\t<label for=\"startDate\">Start Date:</label>\r\n\t\t\t\t<input type=\"date\" id=\"startDate\" name=\"startDate\" [(ngModel)]=\"formData.startDate\">\r\n\t\t\t</div>\r\n\t\t\t<div class=\"element\">\r\n\t\t\t\t<label for=\"endDate\">End Date:</label>\r\n\t\t\t\t<input type=\"date\" id=\"endDate\" name=\"endDate\" [(ngModel)]=\"formData.endDate\">\r\n\t\t\t</div>\r\n\t\t\t<div class=\"element content\">\r\n\t\t\t\t<label for=\"content\">Content:</label>\r\n\t\t\t\t<angular-editor id=\"content\" [(ngModel)]=\"formData.content\" class=\"editor\" [config]=\"editorConfig\"></angular-editor>\r\n\t\t\t</div>\r\n\t\t\t<button (click)=\"submitForm()\">Submit</button>\r\n\t\t</div>\r\n\t\t<ng-template #project>\r\n\t\t\t<div class=\"projects-container\">\r\n\t\t\t\t<ul class=\"timeline\">\r\n\t\t\t\t\t<ng-container *ngFor=\"let project of projects; let i = index\">\r\n\t\t\t\t\t\t<li class=\"block\">\r\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"project{{i}}\" class=\"radio\" name=\"project\">\r\n\t\t\t\t\t\t\t<div class=\"date\">{{project.startDate|slice:0:10}}</div>\r\n\t\t\t\t\t\t\t<span class=\"circle\"></span>\r\n\t\t\t\t\t\t\t<div class=\"content\">\r\n\t\t\t\t\t\t\t\t<h2> {{project.title}} </h2>\r\n\t\t\t\t\t\t\t\t<p> {{project.description}} </p>\r\n\t\t\t\t\t\t\t\t<p class=\"material\" [innerHTML]=\"project.content\"></p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<label for=\"project{{i}}\">\r\n\t\t\t\t\t\t\t\t<div class=\"show\">[ + ]</div>\r\n\t\t\t\t\t\t\t\t<div class=\"hide\">[ - ]</div>\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<div *ngIf=\"(this.currentUser == this.username)\" class=\"edit\" (click)=\"updateProject(project.projectId)\">\r\n\t\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div *ngIf=\"(this.currentUser == this.username)\" class=\"delete\" (click)=\"deleteProject(project.projectId)\">\r\n\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ng-container>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"delete-popup\" *ngIf=\"showDeletePopup\">\r\n\t\t\t\t<div class=\"options\">\r\n\t\t\t\t\t<p> Confirm delete ?</p>\r\n\t\t\t\t\t<div class=\"btn\"> \r\n\t\t\t\t\t\t<button (click)=\"confirmDelete()\"> YES </button>\r\n\t\t\t\t\t\t<button (click)=\"toggleDeletePopup()\"> NO </button> \r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<img *ngIf=\"(this.currentUser == this.username)\" class=\"add\" src=\"./../../assets/images/buttons/add.png\" alt=\"\" (click)=\"setAddProject()\">\r\n\t\t</ng-template>\r\n\t</div>\t\r\n</app-window>"
        },
        {
            "name": "SignupComponent",
            "id": "component-SignupComponent-498c89fc83fe1a69f62dd5a030bfde1c6f8a1220ab5ebd783ffa1efa5462adf97b6ec2766f977f304252eb8326ebec1a23e26e99980be463aa624e93e23e6a99",
            "file": "src/lib/auth/signup/signup.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-signup",
            "styleUrls": [
                "./signup.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./signup.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "emailExists",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "formData",
                    "defaultValue": "{\r\n    username: '',\r\n    firstname: '',\r\n    lastname: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "source",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "userCreated",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "usernameExists",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n  public source: any;\r\n\r\n  constructor(private http: HttpClient, private cookieService: CookieService, private router: Router, private route: ActivatedRoute){}\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(params => {\r\n      this.source = params['source'];\r\n    });   \r\n  }\r\n\r\n  formData = {\r\n    username: '',\r\n    firstname: '',\r\n    lastname: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  };\r\n\r\n  public usernameExists: boolean = false;\r\n  public emailExists: boolean = false;\r\n  public userCreated: boolean = false;\r\n\r\n  submitForm() {\r\n    console.log(this.formData);\r\n    this.http.post<any>(`${environment.baseUrl}/api/v1/public/auth/register`, this.formData)\r\n    .subscribe({\r\n      next: response => {\r\n        this.cookieService.set('boonCurrentUser', response.username, 7, '/');\r\n        this.cookieService.set('boonJwtToken', response.token), 7, '/';\r\n        this.usernameExists = response.usernameCollision;\r\n        this.emailExists = response.emailCollision;\r\n        this.userCreated = response.userCreated;\r\n        if(this.userCreated) {\r\n          if(this.source != undefined && this.source.length > 0) this.router.navigate([this.source]);\r\n          else this.router.navigate(['/user', response.username]);\r\n        }\r\n        console.log(response);\r\n        // Handle the JWT token as needed\r\n      },\r\n      error: error => {\r\n        console.error('API Error:', error);\r\n        // Handle the error response\r\n      }\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"./../../../styles/config.scss\";\r\n\r\n.signup-page{\r\n  // background-color: red;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  // flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-family: $primary-font;\r\n\r\n    .register-form{\r\n      background-color: whitesmoke;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      // align-items: center;\r\n      padding: 48px;\r\n      border-radius: 8px;\r\n      // border: solid black 2px;\r\n      box-shadow: 4px 4px;\r\n\r\n      input{\r\n        height: 24px;\r\n        width: 256px;\r\n        padding: 4px 8px;\r\n        border: solid black 1px;\r\n        border-radius: 24px;\r\n        margin-top: 16px;\r\n      }\r\n\r\n      button{\r\n        height: 32px;\r\n        margin-top: 16px;\r\n        border: 0px;\r\n        background-color: palegreen;\r\n        box-shadow: black 4px 4px;\r\n        border-radius: 24px;\r\n        font-weight: bold;\r\n      }\r\n\r\n      p{\r\n        font-size: 14px;\r\n        text-align: center;\r\n      }\r\n\r\n      button:hover{\r\n        background-color: rgb(89, 211, 89);\r\n      }\r\n\r\n      button:active{\r\n        box-shadow: 2px 2px;\r\n      }\r\n    }\r\n}\r\n\r\n.error{\r\n  color: orangered;\r\n  font-size: 12px;\r\n  margin-left: 12px;\r\n}",
                    "styleUrl": "./signup.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"signup-page\">\r\n\t\t<form class=\"register-form\" (ngSubmit)=\"submitForm()\" #myForm=\"ngForm\">\r\n\t\t\t<input type=\"text\" placeholder=\"username\" name=\"username\" [(ngModel)]=\"formData.username\" class=\"form-controle\" required minlength=\"4\" #username=\"ngModel\"/>\r\n\t\t\t<div *ngIf=\"username.invalid && (username.dirty || username.touched)\"class=\"error\">\r\n\t\t\t\t<div *ngIf=\"username.errors?.['required']\">\r\n\t\t\t\t\tusername is required.\r\n\t\t\t\t</div>\r\n\t\t\t\t<div *ngIf=\"username.errors?.['minlength']\">\r\n\t\t\t\t\tusername must be at least 4 characters long.\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div *ngIf=\"this.usernameExists\" class=\"error\">\r\n\t\t\t\tusername already in use. Try another.\r\n\t\t\t</div>\r\n\t\t\t<input type=\"text\" placeholder=\"firstname\" name=\"firstname\" [(ngModel)]=\"formData.firstname\" class=\"form-controle\" required minlength=\"4\" #firstname=\"ngModel\"/>\r\n\t\t\t<div *ngIf=\"firstname.invalid && (firstname.dirty || firstname.touched)\"class=\"error\">\r\n\t\t\t\t<div *ngIf=\"firstname.errors?.['required']\">\r\n\t\t\t\t\tfirstname is required.\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<input type=\"text\" placeholder=\"lastname\" name=\"lastname\" [(ngModel)]=\"formData.lastname\" class=\"form-controle\" required minlength=\"4\" #lastname=\"ngModel\"/>\r\n\t\t\t<div *ngIf=\"lastname.invalid && (lastname.dirty || lastname.touched)\"class=\"error\">\r\n\t\t\t\t<div *ngIf=\"lastname.errors?.['required']\">\r\n\t\t\t\t\tlastname is required.\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<input type=\"email\" placeholder=\"email\" name=\"email\" [(ngModel)]=\"formData.email\" required email #email=\"ngModel\"/>\r\n\t\t\t<div *ngIf=\"email.invalid && (email.dirty || email.touched)\"class=\"error\">\r\n\t\t\t\t<div *ngIf=\"email.errors?.['required']\">\r\n\t\t\t\t\temail is required.\r\n\t\t\t\t</div>\r\n\t\t\t\t<div *ngIf=\"email.errors?.['email']\">\r\n\t\t\t\t\tinvalid email format.\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div *ngIf=\"this.emailExists\" class=\"error\">\r\n\t\t\t\tEmail already in use. Try another.\r\n\t\t\t</div>\r\n\t\t\t<input type=\"password\" placeholder=\"password\" name=\"password\" [(ngModel)]=\"formData.password\" required #password=\"ngModel\"/>\r\n\t\t\t<div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"error\">\r\n\t\t\t\t<div *ngIf=\"password.errors?.['required']\">\r\n\t\t\t\t\tpassword is required.\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<input type=\"password\" placeholder=\"confirm password\" name=\"confirmPassword\" [(ngModel)]=\"formData.confirmPassword\" required #confirm=\"ngModel\"/>\r\n\t\t\t<div *ngIf=\"confirm.invalid && (confirm.dirty || confirm.touched)\" class=\"error\">\r\n\t\t\t\t<div *ngIf=\"confirm.errors?.['required']\">\r\n\t\t\t\t\tconfirm password is required.\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div *ngIf=\"password.value != confirm.value\" class=\"error\">\r\n\t\t\t\tPasswords do not match.\r\n\t\t\t</div>\r\n\t\t\t<button type=\"submit\" [disabled]=\"!myForm.form.valid || password.value != confirm.value\">Sign Up</button>\r\n\t\t\t<p class=\"message\">Already registered? <a routerLink=\"/login/{{this.source}}\">Sign In</a></p>\r\n\t  \t</form>\r\n</div>"
        },
        {
            "name": "SkillsComponent",
            "id": "component-SkillsComponent-6e2e4a22f89dc355dcd04ab8da5b5e8358cc257210879d7f94a0580e1a76047be7adc446d4246bcfe15004c7b0e0523c36c517aac4edf6f2308e5c342798e66b",
            "file": "src/lib/skills/skills.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-skills",
            "styleUrls": [
                "./skills.component.scss",
                "./../../styles/config.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./skills.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "X1",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "Y1",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "close",
                    "defaultValue": "new EventEmitter<any> ()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter"
                },
                {
                    "name": "Xemitter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter"
                },
                {
                    "name": "Yemitter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "projectsConfig",
                    "defaultValue": "{\r\n    theme : \"theme-skills\",\r\n    heading : \"Skills\",\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Object",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "closeWindow",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "emitX",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emitY",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-skills',\r\n  templateUrl: './skills.component.html',\r\n  styleUrls: ['./skills.component.scss', './../../styles/config.scss']\r\n})\r\nexport class SkillsComponent implements OnInit {\r\n  @Input() public username: any;\r\n  @Input() public X1: number = 0;\r\n  @Input() public Y1: number = 0;\r\n  @Output() public Xemitter = new EventEmitter<any>();\r\n  @Output() public Yemitter = new EventEmitter<any>();\r\n  @Output() public close = new EventEmitter<any> ();\r\n\r\n  public projectsConfig: Object = {\r\n    theme : \"theme-skills\",\r\n    heading : \"Skills\",\r\n  }\r\n\r\n  constructor() { \r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  emitX(value:any){\r\n    this.Xemitter.emit(value);\r\n  }\r\n  \r\n  emitY(value:any){\r\n    this.Yemitter.emit(value);\r\n  }\r\n\r\n  closeWindow(){\r\n    this.close.emit();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "app-window{\r\n\t.skills-container{\r\n\t\theight: 720px;\r\n\t\tpadding: 8px;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\t\r\n\t\t.skills{\r\n\t\t\tposition: relative;\r\n\t\t\theight: 100%;\r\n\t\t\twidth: 100%;\r\n\t\t\tbackground-color: #ffefd5;\r\n\t\t\tborder-radius: 8px;\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n}",
                    "styleUrl": "./skills.component.scss"
                },
                {
                    "data": "$primary-font: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;;\r\n\r\n\r\n//themes\r\n$primary-color-profile: #ebb7c9;\r\n$secondary-color-profile: #faedf1; \r\n.theme-profile{\r\n\tbackground-color: $secondary-color-profile;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-profile;\r\n\t}\r\n}\r\n\r\n$primary-color-projects: #b2fcb2;\r\n$secondary-color-projects: #ecfeec;\r\n.theme-projects{\r\n\tbackground-color: $secondary-color-projects;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-projects;\r\n\t}\r\n}\r\n\r\n$primary-color-skills: #ffefd5;\r\n$secondary-color-skills: #fffbf4;\r\n.theme-skills{\r\n\tbackground-color: $secondary-color-skills;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-skills;\r\n\t}\r\n}\r\n\r\n$primary-color-blogs: #8baff1;\r\n$seconday-color-blogs: #e2ebfb;\r\n.theme-blogs{\r\n\tbackground-color: $seconday-color-blogs;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-blogs;\r\n\t}\r\n}\r\n\r\n",
                    "styleUrl": "./../../styles/config.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-window [windowConfig]=\"projectsConfig\" [X1]=\"this.X1\" [Y1]=\"this.Y1\" (Xemitter)=\"emitX($event)\" (Yemitter)=\"emitY($event)\" (close)=\"closeWindow()\">\r\n\t<div class=\"skills-container\">\r\n\t\t<div class=\"skills\">\r\n\t\t\t\r\n\t\t</div>\r\n\t</div>\t\r\n</app-window>"
        },
        {
            "name": "WallComponent",
            "id": "component-WallComponent-4d9d5b27e7da748f9156cae0833f5b752c057b3d4e50a48007b166cba4b35f2b0c097c9df9035f7aade6d5b3c4555f0defa74e9235532634afc71b3f55711fe7",
            "file": "src/lib/wall/wall.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-wall",
            "styleUrls": [
                "./wall.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./wall.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "BLOGS",
                    "defaultValue": "Comp.BLOGS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "blogsButton",
                    "defaultValue": "{\r\n    name: \"Blogs\",\r\n    image: \"/assets/images/buttons/cloudClosedFolder.png\",\r\n    state: false\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppConfig",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "currentUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "initialWidth",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isLoggedIn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loadBlogsComponent",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loadProfileComponent",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loadProjectsComponent",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loadSkillsComponent",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "PROFILE",
                    "defaultValue": "Comp.PROFILE",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "profileButton",
                    "defaultValue": "{\r\n    name: \"Profile\",\r\n    image: \"/assets/images/buttons/cloudClosedFolder.png\",\r\n    state: false\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "PROJECTS",
                    "defaultValue": "Comp.PROJECTS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "projectsButton",
                    "defaultValue": "{\r\n    name: \"Projects\",\r\n    image: \"/assets/images/buttons/cloudClosedFolder.png\",\r\n    state: false\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showCurrentUser",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "SKILLS",
                    "defaultValue": "Comp.SKILLS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "skillsButton",
                    "defaultValue": "{\r\n    name: \"Skills\",\r\n    image: \"/assets/images/buttons/cloudClosedFolder.png\",\r\n    state: false\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "validClick",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "flipWindow",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 125,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "setButtonX1",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "button",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 164,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "button",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setButtonY1",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "button",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 171,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "button",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setWindowX1",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "window",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 150,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "window",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setWindowY1",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "window",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 157,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "window",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 178,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, HostListener} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AppConfig} from 'src/service/app.config';\r\nimport { User } from 'src/service/app.user'\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { Authenticator } from 'src/service/app.authenticator';\r\n\r\nenum Comp{\r\n  PROFILE,\r\n  PROJECTS,\r\n  SKILLS,\r\n  BLOGS,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-wall',\r\n  templateUrl: './wall.component.html',\r\n  styleUrls: ['./wall.component.scss']\r\n})\r\n\r\nexport class WallComponent implements OnInit {\r\n  public currentUser: any;\r\n  public isLoggedIn: boolean = false;\r\n  public username: any;\r\n  public showCurrentUser: boolean = false;\r\n\r\n  public PROFILE: any = Comp.PROFILE;\r\n  public PROJECTS: any = Comp.PROJECTS;\r\n  public SKILLS: any = Comp.SKILLS;\r\n  public BLOGS: any = Comp.BLOGS;\r\n\r\n  public profileButton = {\r\n    name: \"Profile\",\r\n    image: \"/assets/images/buttons/cloudClosedFolder.png\",\r\n    state: false\r\n  }\r\n  public projectsButton = {\r\n    name: \"Projects\",\r\n    image: \"/assets/images/buttons/cloudClosedFolder.png\",\r\n    state: false\r\n  }\r\n  public skillsButton = {\r\n    name: \"Skills\",\r\n    image: \"/assets/images/buttons/cloudClosedFolder.png\",\r\n    state: false\r\n  }\r\n  public blogsButton = {\r\n    name: \"Blogs\",\r\n    image: \"/assets/images/buttons/cloudClosedFolder.png\",\r\n    state: false\r\n  }\r\n\r\n\r\n  public initialWidth = 0; // initial size of window\r\n  public validClick: boolean = false;\r\n\r\n  // Component booleans\r\n  public loadProfileComponent: boolean = false;\r\n  public loadProjectsComponent: boolean = false;\r\n  public loadSkillsComponent: boolean = false;\r\n  public loadBlogsComponent: boolean =  false;\r\n  \r\n\r\n  constructor(public config: AppConfig, private cookieService: CookieService, private route: ActivatedRoute, private router: Router, private authenticator: Authenticator) { \r\n    //set initil window width.\r\n    this.initialWidth = window.innerWidth;\r\n\r\n    // Initialize all button coordinates.\r\n    if(config.profileButtonX1 == undefined) config.profileButtonX1 = window.innerWidth - 100;\r\n    if(config.profileButtonY1 == undefined) config.profileButtonY1 = 50;\r\n\r\n    if(config.projectsButtonX1 == undefined) config.projectsButtonX1 = window.innerWidth - 100;\r\n    if(config.projectsButtonY1 == undefined) config.projectsButtonY1 = 140;  // 50 + 90\r\n\r\n    if(config.blogsButtonX1 == undefined) config.blogsButtonX1 = window.innerWidth - 100;\r\n    if(config.blogsButtonY1 == undefined) config.blogsButtonY1 = 230; // 140 + 90\r\n\r\n    if(config.skillsButtonX1 == undefined) config.skillsButtonX1 = window.innerWidth - 100;\r\n    if(config.skillsButtonY1 == undefined) config.skillsButtonY1 = 310; // 230 + 90\r\n\r\n  \r\n    // Initialize all window coordinates.\r\n    if(config.profileComponentX1 == undefined) config.profileComponentX1 = (window.innerWidth * 60) / 200; // for view width 40%\r\n    if(config.profileComponentY1 == undefined) config.profileComponentY1 = 72;\r\n\r\n    if(config.projectsComponentX1 == undefined) config.projectsComponentX1 = ((window.innerWidth * 20) / 200); // for view width 80%\r\n    if(config.projectsComponentY1 == undefined) config.projectsComponentY1 = 72;\r\n\r\n    if(config.skillsComponentX1 == undefined) config.skillsComponentX1 = ((window.innerWidth * 15) / 200); // for view width 85%\r\n    if(config.skillsComponentY1 == undefined) config.skillsComponentY1 = 72;\r\n\r\n    if(config.blogsComponentX1 == undefined) config.blogsComponentX1 = ((window.innerWidth * 20) / 200); // for view width 80%\r\n    if(config.blogsComponentY1 == undefined) config.blogsComponentY1 = 72;\r\n  }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    //check if user is authenticated.\r\n    await this.authenticator.authenticate();\r\n\r\n    this.isLoggedIn = User.isLoggedIn();\r\n    this.currentUser = User.getCurrentUser();\r\n\r\n    this.route.params.subscribe(params => {\r\n      this.username = params['username'];\r\n      //load profile component\r\n      if(!this.loadProfileComponent) this.flipWindow(this.PROFILE);\r\n      //set profile folder name.\r\n      this.profileButton.name = this.username;\r\n    });    \r\n  }\r\n  \r\n\r\n  // This section is required only when validClick logic is to be implemented.\r\n\r\n  // @HostListener('document:mousedown', ['$event'])\r\n  // onMouseDown(event: MouseEvent) {\r\n  //   this.validClick = true;\r\n  // }\r\n\r\n  // @HostListener('document:mousemove', ['$event'])\r\n  // onMouseMove(event: MouseEvent) {\r\n  //   // this.validClick = false;\r\n  // }\r\n  \r\n  flipWindow(value: any) {\r\n    // implement some validClick logic if want buttons to be moved.\r\n    if(value == Comp.PROJECTS) {\r\n      this.loadProjectsComponent = !this.loadProjectsComponent;\r\n      this.projectsButton.state = !this.projectsButton.state;\r\n      if(this.projectsButton.state) this.projectsButton.image = \"/assets/images/buttons/cloudOpenFolder.png\";\r\n      else this.projectsButton.image = \"/assets/images/buttons/cloudClosedFolder.png\"\r\n    }else if(value == Comp.BLOGS){\r\n      this.loadBlogsComponent = !this.loadBlogsComponent;\r\n      this.blogsButton.state = !this.blogsButton.state;\r\n      if(this.blogsButton.state) this.blogsButton.image = \"/assets/images/buttons/cloudOpenFolder.png\";\r\n      else this.blogsButton.image = \"/assets/images/buttons/cloudClosedFolder.png\"\r\n    }else if(value == Comp.SKILLS){\r\n      this.loadSkillsComponent = !this.loadSkillsComponent;\r\n      this.skillsButton.state = !this.skillsButton.state;\r\n      if(this.skillsButton.state) this.skillsButton.image = \"/assets/images/buttons/cloudOpenFolder.png\";\r\n      else this.skillsButton.image = \"/assets/images/buttons/cloudClosedFolder.png\"\r\n    }else{\r\n      this.loadProfileComponent = !this.loadProfileComponent;\r\n      this.profileButton.state = !this.profileButton.state;\r\n      if(this.profileButton.state) this.profileButton.image = \"/assets/images/buttons/cloudOpenFolder.png\";\r\n      else this.profileButton.image = \"/assets/images/buttons/cloudClosedFolder.png\"\r\n    }\r\n  }\r\n\r\n  setWindowX1(value: any, window: any){\r\n    if(window == Comp.PROFILE) this.config.profileComponentX1 = value;\r\n    else if(window == Comp.PROJECTS) this.config.projectsComponentX1 = value;\r\n    else if(window == Comp.SKILLS) this.config.skillsComponentX1 = value;\r\n    else this.config.blogsComponentX1 = value;\r\n  }\r\n\r\n  setWindowY1(value: any, window: any){\r\n    if(window == Comp.PROFILE) this.config.profileComponentY1 = value;\r\n    else if(window == Comp.PROJECTS) this.config.projectsComponentY1 = value;\r\n    else if(window == Comp.SKILLS) this.config.skillsComponentY1 = value;\r\n    else this.config.blogsComponentY1 = value;\r\n  }\r\n\r\n  setButtonX1(value: any, button: any){\r\n    // if(button == Comp.PROFILE) this.config.profileButtonX1 = value;\r\n    // else if(button == Comp.PROJECTS) this.config.projectsButtonX1 = value;\r\n    // else if(button == Comp.SKILLS) this.config.skillsButtonX1 = value;\r\n    // else this.config.blogsButtonX1 = value;\r\n  }\r\n\r\n  setButtonY1(value: any, button: any){\r\n    // if(button == Comp.PROFILE) this.config.profileButtonY1 = value;\r\n    // else if(button == Comp.PROJECTS) this.config.projectsButtonY1 = value;\r\n    // else if(button == Comp.SKILLS) this.config.skillsButtonY1 = value;\r\n    // else this.config.blogsButtonY1 = value;\r\n  }\r\n\r\n  showMenu(){\r\n    this.showCurrentUser = !this.showCurrentUser;\r\n  }\r\n\r\n  logOut(){\r\n    this.cookieService.deleteAll('/');\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wall{\r\n\toverflow: hidden;\r\n\theight: 100vh;\r\n\twidth: 100vw;\r\n\t// display: flex;\r\n\t// align-items: center;\r\n\t// justify-content: center;\r\n\tz-index: 0;\r\n\tposition: relative;\r\n\t// background-image: url(\"/assets/images/wall/wall1.jpg\");\r\n\t// background-color: #c7ede6;\r\n\tbackground-color: #afeeee;\r\n\tbackground-image:\r\n      repeating-linear-gradient(#ebfbfb 0 2px, transparent 1px 100%),\r\n      repeating-linear-gradient(90deg, #ebfbfb 0 2px, transparent 1px 100%);\r\n    background-size: 32px 32px;\r\n\r\n\t.user{\r\n\t\tposition: fixed;\r\n\t\ttop: 24px;\r\n\t\tleft: 24px;\r\n\t\tborder-radius: 24px;\r\n\t\tbox-shadow: black 4px 4px;\r\n\t\tbackground-color: white;\r\n\t\theight: 48px;\r\n\t\twidth: 48px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\t.user:active{\r\n\t\tbox-shadow: black 2px 2px;\r\n\t}\r\n\t.user:hover{\r\n\t\tbackground-color: whitesmoke;\r\n\t}\r\n\r\n\t.user-card{\r\n\t\tbackground-color: white;\r\n\t\tbox-shadow: 4px 4px;\r\n\t\twidth: 256px;\r\n\t\tposition: fixed;\r\n\t\tborder-radius: 24px;\r\n\t\ttop: 24px;\r\n\t\tleft: 84px;\r\n\t\tz-index: -1;\r\n\r\n\t\t.info-container{\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: row;\r\n\t\t\talign-items: center;\r\n\t\t\tjustify-content: space-around;\r\n\t\t\tpadding: 8px 12px;\r\n\r\n\t\t\t.log{\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t\tbackground-color: gray;\r\n\t\t\t\tborder-radius: 8px;\r\n\t\t\t\tpadding: 8px;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.quilandquest{\r\n\t\tposition: fixed;\r\n\t\ttop: 104px;\r\n\t\tleft: 24px;\r\n\t\tborder-radius: 24px;\r\n\t\tbox-shadow: black 4px 4px;\r\n\t\tbackground-color: white;\r\n\t\theight: 48px;\r\n\t\twidth: 48px;\r\n\t\tpadding: 8px;\r\n\t\tbox-sizing: border-box;\r\n\t\tcursor: pointer;\r\n\r\n\t\timg{\r\n\t\t\theight: 32px;\r\n\t\t\twidth: 32px;\r\n\t\t}\r\n\t}\r\n\t.quilandquest:active{\r\n\t\tbox-shadow: black 2px 2px;\r\n\t}\r\n\t.quilandquest:hover{\r\n\t\tbackground-color: whitesmoke;\r\n\t}\r\n\r\n\tapp-button{\r\n\t\tposition: fixed;\r\n\t}\r\n\t\r\n\tapp-profile{\r\n\t\tposition: fixed;\r\n\t\tz-index: 100;\r\n\t}\r\n\r\n\tapp-projects{\r\n\t\tposition: fixed;\r\n\t\tz-index: 100;\r\n\t}\r\n\r\n\tapp-skills{\r\n\t\tposition: fixed;\r\n\t\tz-index: 100;\r\n\t}\r\n\r\n\tapp-blogs{\r\n\t\tposition: fixed;\r\n\t\tz-index: 100;\r\n\t}\r\n\r\n\t.homebtn{\r\n\t\tz-index: 1;\r\n\t\tposition: absolute;\r\n\t\tcursor: pointer;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\r\n\t\t.logo{\r\n\t\t\theight: 40px;\r\n\t\t\twidth: 60px;\r\n\t\t\tmargin-bottom: 5px;\r\n\t\t}\r\n\r\n\t\t.foldername{\r\n\t\t\theight: 20px;\r\n\t\t\twidth: 60px;\r\n\t\t\tfont-size: 16px;\r\n\t\t\tfont-weight: bolder;\r\n\t\t\tfont-family: 'Courier New', Courier, monospace;\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: center;\r\n\t\t\tmargin: 0px;\r\n\t\t}\r\n\t}\r\n\r\n\t.folderbtn{\r\n\t\tz-index: 1;\r\n\t\tposition: absolute;\r\n\t\tcursor: pointer;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\r\n\t\t.homelogo{\r\n\t\t\theight: 40px;\r\n\t\t\twidth: 60px;\r\n\t\t\tmargin-bottom: 2px;\r\n\t\t}\r\n\r\n\t\t.logo{\r\n\t\t\theight: 50px;\r\n\t\t\twidth: 60px;\r\n\t\t\tmargin-bottom: 2px;\r\n\t\t}\r\n\r\n\t\t.foldername{\r\n\t\t\theight: 15px;\r\n\t\t\twidth: 60px;\r\n\t\t\tfont-size: 12px;\r\n\t\t\t// font-weight: bold;\r\n\t\t\tcolor: black;\r\n\t\t\tfont-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: center;\r\n\t\t\tmargin: 0px;\r\n\t\t}\r\n\t}\r\n\r\n\t.card-container{\r\n\t\tz-index: 3;\r\n\t\theight: 300px;\r\n\t\twidth: 700px;\r\n\t\tposition: absolute;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tbackground-color: aquamarine;\r\n\t\tborder-radius: 20px;\r\n\t\tbox-shadow: 0 10px 25px -5px rgb(0 0 0 / 0.8), 0 8px 10px -6px rgb(0 0 0 / 0.5);\r\n\t\tvisibility: hidden;\r\n\t\t// padding: 15px;\r\n\t\t// box-sizing: border-box;\r\n\t\t// transform: translateY(10px);\r\n\t\t// transition: all 100ms ease-out;\r\n\r\n\t\t&.show-card{\r\n\t\t\tvisibility: visible;\r\n\t\t\t// transform: translateY(0);\r\n\t\t}\r\n\r\n\t\t.menu-bar{\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 32px;\r\n\t\t\tcursor: pointer;\r\n\t\t\tbackground-color: whitesmoke;\r\n\t\t\tborder-radius: 20px 20px 0px 0px;\r\n\t\t\tborder: 2px solid black;\r\n\t\t\tborder-bottom: 0px;\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: row;\r\n\t\t\talign-items: center;\r\n\r\n\t\t\t.first{\r\n\t\t\t\theight: 15px;\r\n\t\t\t\twidth: 15px;\r\n\t\t\t\tbackground-color: lightcoral;\r\n\t\t\t\tborder-radius: 10px 10px 10px 10px;\r\n\t\t\t\tborder: 2px solid black;\r\n\t\t\t\tmargin-left: 10px;\r\n\t\t\t}\r\n\t\t\t.second{\r\n\t\t\t\theight: 15px;\r\n\t\t\t\twidth: 15px;\r\n\t\t\t\tbackground-color: white;\r\n\t\t\t\tborder-radius: 10px 10px 10px 10px;\r\n\t\t\t\tborder: 2px solid black;\r\n\t\t\t\tmargin-left: 10px;\r\n\t\t\t}\r\n\t\t\t.third{\r\n\t\t\t\theight: 15px;\r\n\t\t\t\twidth: 15px;\r\n\t\t\t\tbackground-color: white;\r\n\t\t\t\tborder-radius: 10px 10px 10px 10px;\r\n\t\t\t\tborder: 2px solid black;\r\n\t\t\t\tmargin-left: 10px;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.content-box{\r\n\t\t\tbackground-color: whitesmoke;\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 100%;\r\n\t\t\tborder-radius: 0px 0px 20px 20px;\r\n\t\t\tborder: 2px solid black;\r\n\t\t\t// font-family: 'Courier New', Courier, monospace;\r\n\t\t\t// font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n\t\t\t// font-family: Jost,sans-serif;\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\t\t\tjustify-content: space-around;\r\n\t\t\t// font-weight: bold;\r\n\t\t\t// padding: 15px;\r\n\t\t\t// box-sizing: border-box;\r\n\r\n\t\t\th1{\r\n\t\t\t\tpadding: 12px 24px;\r\n\t\t\t\tmargin: 0px;\r\n\t\t\t}\r\n\r\n\t\t\tp{\r\n\t\t\t\tpadding: 12px 24px;\t\r\n\t\t\t\tmargin: 0px;\r\n\t\t\t\tfont-size: 15px;\r\n\t\t\t\tfont-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n\t\t\t}\r\n\r\n\t\t\t.find{\r\n\t\t\t\tpadding: 0px 24px;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\t// background-color: blue;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: 60px;\r\n\r\n\t\t\t\tp{\r\n\t\t\t\t\tpadding: 12px 0px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.logo{\r\n\t\t\t\t\theight: 32px;\r\n\t\t\t\t\twidth: 32px;\r\n\t\t\t\t\tmargin: 8px;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.res{\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t\twidth: 60%;\r\n\t\t\t\t\t// background-color: red;\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\talign-items: center;\r\n\t\t\t\t\tflex-direction: row;\r\n\t\t\t\t\tjustify-content: flex-end;\r\n\r\n\t\t\t\t\t.logo{\r\n\t\t\t\t\t\theight: 32px;\r\n\t\t\t\t\t\twidth: 32px;\r\n\t\t\t\t\t\tmargin: 8px;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\n",
                    "styleUrl": "./wall.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "config",
                        "type": "AppConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authenticator",
                        "type": "Authenticator",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 61,
                "jsdoctags": [
                    {
                        "name": "config",
                        "type": "AppConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authenticator",
                        "type": "Authenticator",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"wall\">\r\n\t<img src=\"/assets/images/profile/user.png\" class=\"user\" (click)=\"showMenu()\">\r\n\t<div class=\"user-card\" *ngIf=\"this.showCurrentUser\">\r\n\t\t<div class=\"info-container\" *ngIf=\"this.isLoggedIn; else notLoggedIn\">\r\n\t\t\t<a [routerLink]=\"['/user', this.currentUser]\">{{ this.currentUser }}</a>\r\n\t\t\t<div class=\"log\" (click)=\"logOut()\"> LogOut</div>\r\n\t\t</div>\r\n\t\t<ng-template #notLoggedIn>\r\n\t\t\t<div class=\"info-container\">\r\n\t\t\t\t<p>Please log in to continue.</p>\r\n\t\t\t\t<a class=\"log\" [routerLink]=\"['/login']\"> LogIn </a>\r\n\t\t\t</div>\r\n\t\t</ng-template>\r\n\t</div>\r\n\t<a class=\"quilandquest\" [routerLink]=\"['/quilandquest']\"> <img src=\"/assets/images/quilandquest/feather.png\" alt=\"\" > </a>\r\n\t<app-button (click)=\"flipWindow(PROFILE)\" [buttonConfig]=\"profileButton\" [ButtonX1]=\"this.config.profileButtonX1\" [ButtonY1]=\"this.config.profileButtonY1\" (Xemitter)=\"setButtonX1($event, PROFILE)\" (Yemitter)=\"setButtonY1($event, PROFILE)\"style = \"top: {{this.config.profileButtonY1}}px; left: {{this.config.profileButtonX1}}px\"></app-button>\r\n\t<app-button (click)=\"flipWindow(PROJECTS)\" [buttonConfig]=\"projectsButton\" [ButtonX1]=\"this.config.projectsButtonX1\" [ButtonY1]=\"this.config.projectsButtonY1\" (Xemitter)=\"setButtonX1($event, PROJECTS)\" (Yemitter)=\"setButtonY1($event, PROJECTS)\"style = \"top: {{this.config.projectsButtonY1}}px; left: {{this.config.projectsButtonX1}}px\"></app-button>\r\n\t<!-- <app-button (click)=\"flipWindow(SKILLS)\" [buttonConfig]=\"skillsButton\" [ButtonX1]=\"this.config.skillsButtonX1\" [ButtonY1]=\"this.config.skillsButtonY1\" (Xemitter)=\"setButtonX1($event, SKILLS)\" (Yemitter)=\"setButtonY1($event, SKILLS)\"style = \"top: {{this.config.skillsButtonY1}}px; left: {{this.config.skillsButtonX1}}px\"></app-button>\t -->\r\n\t<app-button (click)=\"flipWindow(BLOGS)\" [buttonConfig]=\"blogsButton\" [ButtonX1]=\"this.config.blogsButtonX1\" [ButtonY1]=\"this.config.blogsButtonY1\" (Xemitter)=\"setButtonX1($event, BLOGS)\" (Yemitter)=\"setButtonY1($event, BLOGS)\"style = \"top: {{this.config.blogsButtonY1}}px; left: {{this.config.blogsButtonX1}}px\"></app-button>\r\n\t\r\n\r\n\t<app-profile [username]=\"username\" [X1] = \"this.config.profileComponentX1\" [Y1] = \"this.config.profileComponentY1\" (Xemitter)=\"setWindowX1($event, PROFILE)\" (Yemitter)=\"setWindowY1($event, PROFILE)\" (close)=\"flipWindow(PROFILE)\" *ngIf=\"loadProfileComponent\"style=\"top : {{this.config.profileComponentY1}}px; left: {{this.config.profileComponentX1}}px\"> </app-profile>\r\n\t<app-projects [username]=\"username\" [X1] = \"this.config.projectsComponentX1\" [Y1] = \"this.config.projectsComponentY1\" (Xemitter)=\"setWindowX1($event, PROJECTS)\" (Yemitter)=\"setWindowY1($event, PROJECTS)\" (close)=\"flipWindow(PROJECTS)\"*ngIf=\"loadProjectsComponent\"style=\"top : {{this.config.projectsComponentY1}}px; left: {{this.config.projectsComponentX1}}px\"> </app-projects>\r\n\t<!-- <app-skills [username]=\"username\" [X1] = \"this.config.skillsComponentX1\" [Y1] = \"this.config.skillsComponentY1\" (Xemitter)=\"setWindowX1($event, SKILLS)\" (Yemitter)=\"setWindowY1($event, SKILLS)\" (close)=\"flipWindow(SKILLS)\" *ngIf=\"loadSkillsComponent\"style=\"top : {{this.config.skillsComponentY1}}px; left: {{this.config.skillsComponentX1}}px\"> </app-skills>  -->\r\n\t<app-blogs [username]=\"username\" [X1] = \"this.config.blogsComponentX1\" [Y1] = \"this.config.blogsComponentY1\" (Xemitter)=\"setWindowX1($event, BLOGS)\" (Yemitter)=\"setWindowY1($event, BLOGS)\" (close)=\"flipWindow(BLOGS)\" *ngIf=\"loadBlogsComponent\"style=\"top : {{this.config.blogsComponentY1}}px; left: {{this.config.blogsComponentX1}}px\"> </app-blogs>\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t<!-- <div class = \"card-container\" [class.show-card] = \"cardVisible\" style = \"top: {{cardY1}}px; left: {{cardX1}}px\">\r\n\t\t<div class=\"menu-bar\" (mouseover)=\"mouseOver(CARD)\" (mouseout)=\"mouseOut(CARD)\">\r\n\t\t\t<div class=\"first\" (click)=\"flipCard(HOME)\" ></div>\r\n\t\t\t<div class=\"second\" (click)=\"flipCard(HOME)\"></div>\r\n\t\t\t<div class=\"third\"></div>\r\n\t\t</div>\t\r\n\t\t<div class=\"content-box\">\r\n\t\t\t<h1>Hey, I'm Gagan!</h1>\r\n\t\t\t<p> I am a full-stack software developer and a hobbyist competitive programmer who loves to tackle challenging problems. I am currently pursuing an undergrad degree at the National Institute of Technology Raipur.</p>\r\n\t\t\t<div class=\"find\">\r\n\t\t\t\t<p> Find me on : </p> \r\n\t\t\t\t<a href=\"https://linkedin.com/in/gagan-gaurav\">\r\n\t\t\t\t\t<img src=\"assets/images/buttons/cloudLinkedin.png\" class = \"logo\">\r\n\t\t\t\t</a>\r\n\t\t\t\t<a href=\"https://mail.google.com/mail/?view=cm&fs=1&to=iamgagangaurav@gmail.com\">\r\n\t\t\t\t\t<img src=\"assets/images/buttons/cloudGmail.png\" class = \"logo\">\r\n\t\t\t\t</a>\r\n\t\t\t\t<a href=\"https://github.com/gagan-gaurav\">\r\n\t\t\t\t\t<img src=\"assets/images/buttons/cloudGit.png\" class = \"logo\">\r\n\t\t\t\t</a>\r\n\t\t\t\t<div class=\"res\">\r\n\t\t\t\t\t<p> Resume : </p>\r\n\t\t\t\t\t<a href=\"https://docs.google.com/document/d/1CaoFqU-tZwj7LNEjBxguaU8XPmAwZQbI9Sjfh1ohzYU/edit?usp=sharing\">\r\n\t\t\t\t\t\t<img src=\"assets/images/buttons/cloudDoc.png\" class = \"logo\">\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div> -->\r\n</div>\r\n\r\n"
        },
        {
            "name": "WelcomeComponent",
            "id": "component-WelcomeComponent-4e157324bbb1347dd132ee9643c3ec40901f1d039d353317e4580c5741bac5db7600cb8aadad3ca1e16613b22b3238329204cf0c6f03a0e12f20efb105effd25",
            "file": "src/lib/welcome/welcome.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-welcome",
            "styleUrls": [
                "./welcome.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./welcome.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "quilandquest",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "signup",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-welcome',\r\n  templateUrl: './welcome.component.html',\r\n  styleUrls: ['./welcome.component.scss']\r\n})\r\nexport class WelcomeComponent {\r\n\r\n  constructor(private router: Router){}\r\n\r\n  login(){\r\n    this.router.navigate(['login']);\r\n  }\r\n\r\n  signup(){\r\n    this.router.navigate(['signup']);\r\n  }\r\n\r\n  quilandquest(){\r\n    this.router.navigate(['quilandquest']);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"./../../styles/config.scss\";\r\n\r\n.main-container{\r\n\theight: 100vh;\r\n\twidth: 100vw;\r\n\tdisplay: flex;\r\n\tfont-family: $primary-font;\r\n\r\n\t.banner{\r\n\t\tbackground-color: lightgreen;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tborder-right: solid black 4px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.links{\r\n\t\t// background-color: green;\r\n\t\theight: 100%;\r\n\t\tmin-width: 520px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\r\n\t\t.btn{\r\n\t\t\t// background-color: white;\r\n\t\t\tcursor: pointer;\r\n\t\t\twidth: 320px;\r\n\t\t\theight: 32px;\r\n\t\t\tmargin-bottom: 32px;\r\n\t\t\tborder-radius: 16px;\r\n\t\t\tborder: solid black 1px;\r\n\t\t\tbox-shadow: 4px 4px;\r\n\t\t\tdisplay: flex;\r\n\t\t\talign-items: center;\r\n\t\t\tjustify-content: center;\r\n\t\t}\r\n\r\n\t\t.btn:active{\r\n\t\t\tbox-shadow: 2px 2px;\r\n\t\t}\r\n\r\n\t\t.login:hover{\r\n\t\t\tbackground-color: whitesmoke;\r\n\t\t}\r\n\r\n\t\t.signup{\r\n\t\t\tbackground-color: #90ee90;\r\n\t\t}\r\n\r\n\t\t.signup:hover{\r\n\t\t\tbackground-color: #6acf6a;\r\n\t\t}\r\n\r\n\t\t.quilandquest{\r\n\t\t\t// background-color: red;\r\n\t\t\tdisplay: flex;\r\n\t\t\talign-items: center;\r\n\r\n\t\t\t.arrow{\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t\tmargin-left: 4px;\r\n\t\t\t\theight: 48px;\r\n\t\t\t\twidth: 48px;\r\n\t\t\t\tborder: solid black 1px;\r\n\t\t\t\tborder-radius: 50%;\r\n\t\t\t\tbox-shadow: 4px 4px;\r\n\t\t\t}\r\n\r\n\t\t\t.arrow:hover{\r\n\t\t\t\tbackground-color: whitesmoke;\r\n\t\t\t}\r\n\r\n\t\t\t.arrow:active{\r\n\t\t\t\tbox-shadow: 2px 2px;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t}\r\n}\r\n\r\n",
                    "styleUrl": "./welcome.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"main-container\">\r\n\t<div class=\"banner\">\r\n\t\t<h1> Welcome to the Portfolio Maker. </h1>\r\n\t\t<p>Showcase your projects, experiences and write blogs. </p>\r\n\t</div>\r\n\t<div class=\"links\">\r\n\t\t<div class=\"login btn\" (click)=\"login()\">\r\n\t\t\tLog In\r\n\t\t</div>\r\n\t\t<div class=\"signup btn\" (click)=\"signup()\">\r\n\t\t\tSign Up\r\n\t\t</div>\r\n\t\t<div class=\"quilandquest\">\r\n\t\t\t<p> Continue to Quil and Quest without logging.</p>\r\n\t\t\t<img src=\"./../../assets/images/welcome/next.png\" alt=\"\" class=\"arrow\" (click)=\"quilandquest()\">\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n"
        },
        {
            "name": "WindowComponent",
            "id": "component-WindowComponent-39baa8ef079ab6a574dda7545ac2bb0bd0401d181068a21b160a5ed4d4a87d7486c7cfcc486219335fa19204f24037b0d0e1e9a3f5e921812f6b92de19bf8ba6",
            "file": "src/lib/window/window.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-window",
            "styleUrls": [
                "./window.component.scss",
                "./../../styles/config.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./window.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "windowConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "X1",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "Y1",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "close",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter"
                },
                {
                    "name": "Xemitter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter"
                },
                {
                    "name": "Yemitter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "insideMenubar",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "mouseHoldsComponent",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "X2",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "Y2",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "closeWindow",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "mouseOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "mouseOver",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMouseDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:mousedown', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMouseMove",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:mousemove', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMouseUp",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:mouseup', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:mousedown",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40
                },
                {
                    "name": "document:mousemove",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58
                },
                {
                    "name": "document:mouseup",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostListener, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-window',\r\n  templateUrl: './window.component.html',\r\n  styleUrls: ['./window.component.scss', './../../styles/config.scss']\r\n})\r\nexport class WindowComponent implements OnInit{\r\n  //Window config\r\n  @Input() public windowConfig: any;\r\n\r\n  public insideMenubar: boolean = false;\r\n  public mouseHoldsComponent: boolean = false;\r\n  @Input() public X1: number = 0;\r\n  @Input() public Y1: number = 0;\r\n  @Output() public Xemitter = new EventEmitter<any>();\r\n  @Output() public Yemitter = new EventEmitter<any>();\r\n  @Output() public close = new EventEmitter<any>();\r\n  public X2: number = 0;\r\n  public Y2: number = 0;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n      // console.log(this.X1, this.Y1);\r\n  }\r\n\r\n  mouseOver(){\r\n    this.insideMenubar = true;\r\n    // console.log(\"insideMenubar\", this.insideMenubar);\r\n  }\r\n\r\n  mouseOut(){\r\n    if(!this.mouseHoldsComponent) this.insideMenubar = false;\r\n    // console.log(\"insideMenubar\", this.insideMenubar);\r\n  }\r\n\r\n  @HostListener('document:mousedown', ['$event'])\r\n  onMouseDown(event: MouseEvent) {\r\n    // event.preventDefault();\r\n    if(this.insideMenubar) {\r\n      this.mouseHoldsComponent = true;\r\n      this.X2 = event.clientX;\r\n      this.Y2 = event.clientY;\r\n      // console.log(\"HoldsBlogs\");\r\n    }\r\n  }\r\n\r\n  @HostListener('document:mouseup', ['$event'])\r\n  onMouseUp(event: MouseEvent) {\r\n    // event.preventDefault();\r\n    this.mouseHoldsComponent = false;\r\n    // console.log(\"DonstHoldBlogs\");\r\n  }\r\n\r\n  @HostListener('document:mousemove', ['$event'])\r\n  onMouseMove(event: MouseEvent) {\r\n    if(this.mouseHoldsComponent && this.insideMenubar){\r\n      event.preventDefault();\r\n      this.X1 += event.clientX - this.X2;\r\n      this.Xemitter.emit(this.X1);\r\n      this.Y1 += event.clientY - this.Y2;\r\n      this.Yemitter.emit(this.Y1);\r\n      this.X2 = event.clientX;\r\n      this.Y2 = event.clientY;\r\n    }\r\n  }\r\n\r\n  closeWindow(){\r\n    this.close.emit();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import './../../styles/config.scss';\r\n\r\n.window{\r\n\tfont-family: $primary-font;\r\n\tbackground-color: white;\r\n\tborder-radius: 8px;\r\n\tborder: solid black;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\twidth: fit-content;\r\n\r\n\t.menu-bar{\r\n\t\tcursor: pointer;\r\n\t\tbackground-color: white;\r\n\t\theight: 24px;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: align-self;\r\n\t\talign-items: center;\r\n\t\tborder-bottom: solid black;\r\n\r\n\t\t.heading{\r\n\t\t\tmargin-left: auto;\r\n\t\t}\r\n\t\t.close{\r\n\t\t\tbackground-color: coral;\r\n\t\t\theight: 12px;\r\n\t\t\twidth: 12px;\r\n\t\t\tborder: solid black;\r\n\t\t\tborder-radius: 12px;\r\n\t\t\tmargin-left: auto;\r\n\t\t\tmargin-right: 4px;\r\n\t\t}\r\n\t}\r\n}\r\n",
                    "styleUrl": "./window.component.scss"
                },
                {
                    "data": "$primary-font: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;;\r\n\r\n\r\n//themes\r\n$primary-color-profile: #ebb7c9;\r\n$secondary-color-profile: #faedf1; \r\n.theme-profile{\r\n\tbackground-color: $secondary-color-profile;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-profile;\r\n\t}\r\n}\r\n\r\n$primary-color-projects: #b2fcb2;\r\n$secondary-color-projects: #ecfeec;\r\n.theme-projects{\r\n\tbackground-color: $secondary-color-projects;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-projects;\r\n\t}\r\n}\r\n\r\n$primary-color-skills: #ffefd5;\r\n$secondary-color-skills: #fffbf4;\r\n.theme-skills{\r\n\tbackground-color: $secondary-color-skills;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-skills;\r\n\t}\r\n}\r\n\r\n$primary-color-blogs: #8baff1;\r\n$seconday-color-blogs: #e2ebfb;\r\n.theme-blogs{\r\n\tbackground-color: $seconday-color-blogs;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-blogs;\r\n\t}\r\n}\r\n\r\n",
                    "styleUrl": "./../../styles/config.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"window\" [class]=\"windowConfig.theme\">\r\n\t<div class=\"menu-bar\" (mouseover)=\"mouseOver()\" (mouseout)=\"mouseOut()\">\r\n\t\t<div class=\"heading\">{{this.windowConfig.heading}}</div>\r\n\t\t<div class=\"close\" (click)=\"closeWindow()\"></div>\r\n\t</div>\r\n\t<ng-content></ng-content>\r\n</div>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-5d737b86fcfd0dbd4c50d9b0e10d0cf06e1cb17c9dd3940b9ffe80b3cb814926cf5edb43797a2672ef4be5ee41e30118547310cf4ee5fd1a1ece59e4a32e1c28",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { PortfolioModule } from 'src/lib/portfolio.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    PortfolioModule,\r\n    BrowserModule,\r\n    CommonModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "PortfolioModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-6d5597b38e64748ac2f6c66b27588d06b11725c688534f7a38cf1cff416521fcc220d3ac3aa66978c28e6f4729cb9d4f68d1250ae5fbf9da2686335f7a96f333",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { WallComponent } from 'src/lib/wall/wall.component';\r\nimport { LoginComponent } from 'src/lib/auth/login/login.component';\r\nimport { SignupComponent } from 'src/lib/auth/signup/signup.component';\r\nimport { FeedComponent } from 'src/lib/quilandquest/feed/feed.component';\r\nimport { ContentComponent } from 'src/lib/quilandquest/content/content.component';\r\nimport { WelcomeComponent } from 'src/lib/welcome/welcome.component';\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", component: WelcomeComponent},\r\n  { path: \"user/:username\", component: WallComponent},\r\n  { path: \"login\", component: LoginComponent},\r\n  { path: \"login/:source\", component: LoginComponent},\r\n  { path: \"signup\", component: SignupComponent},\r\n  { path: \"signup/:source\", component: SignupComponent},\r\n  { path: \"quilandquest\", component: FeedComponent},\r\n  { path: \"content/:blog_id\", component: ContentComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PortfolioModule",
            "id": "module-PortfolioModule-3237d0cea8468b089a2d113a1470e4af1234196a2b1037c072b47e51b82da4e5715c0e62bb2ce38c19b12cd97047d085b42a4e94a32b335f1eb02a215530154a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/lib/portfolio.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { APP_BASE_HREF, CommonModule } from '@angular/common';\r\nimport { AppConfig } from 'src/service/app.config';\r\nimport { WallComponent } from 'src/lib/wall/wall.component';\r\nimport { BlogsComponent } from './blogs/blogs.component';\r\nimport { ProjectsComponent } from './projects/projects.component';\r\nimport { SkillsComponent } from './skills/skills.component';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { SignupComponent } from './auth/signup/signup.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { AngularEditorModule } from '@kolkov/angular-editor';\r\nimport { WindowComponent } from './window/window.component';\r\nimport { ButtonComponent } from './button/button.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { RouterTestingModule } from \"@angular/router/testing\";\r\nimport { FeedComponent } from './quilandquest/feed/feed.component';\r\nimport { ContentComponent } from './quilandquest/content/content.component';\r\nimport { NavComponent } from './quilandquest/nav/nav.component';\r\nimport { Authenticator } from 'src/service/app.authenticator';\r\nimport { WelcomeComponent } from './welcome/welcome.component';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { provideToastr } from 'ngx-toastr';\r\nimport { provideAnimations } from '@angular/platform-browser/animations';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    WallComponent, \r\n    ProjectsComponent, \r\n    BlogsComponent, \r\n    SkillsComponent, \r\n    LoginComponent, \r\n    SignupComponent, \r\n    WindowComponent, \r\n    ButtonComponent, \r\n    ProfileComponent, \r\n    FeedComponent, \r\n    ContentComponent, \r\n    NavComponent, \r\n    WelcomeComponent\r\n  ],\r\n  imports: [\r\n    HttpClientModule, \r\n    FormsModule, \r\n    CommonModule, \r\n    RouterModule.forChild([]), \r\n    AngularEditorModule, \r\n    RouterTestingModule,\r\n    ToastrModule.forRoot()\r\n  ],\r\n  providers: [AppConfig, { provide: APP_BASE_HREF, useValue: '/' }, CookieService, Authenticator, provideToastr(), provideAnimations()],\r\n  exports: [\r\n    ProjectsComponent, \r\n    WallComponent, \r\n    SkillsComponent, \r\n    BlogsComponent, \r\n    SignupComponent, \r\n    LoginComponent, \r\n    WindowComponent, \r\n    ButtonComponent, \r\n    ProfileComponent, \r\n    FeedComponent, \r\n    ContentComponent,\r\n    NavComponent,\r\n    WelcomeComponent\r\n  ],\r\n  bootstrap: []\r\n})\r\nexport class PortfolioModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AppConfig"
                        },
                        {
                            "name": "Authenticator"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BlogsComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "ContentComponent"
                        },
                        {
                            "name": "FeedComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "NavComponent"
                        },
                        {
                            "name": "ProfileComponent"
                        },
                        {
                            "name": "ProjectsComponent"
                        },
                        {
                            "name": "SignupComponent"
                        },
                        {
                            "name": "SkillsComponent"
                        },
                        {
                            "name": "WallComponent"
                        },
                        {
                            "name": "WelcomeComponent"
                        },
                        {
                            "name": "WindowComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BlogsComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "ContentComponent"
                        },
                        {
                            "name": "FeedComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "NavComponent"
                        },
                        {
                            "name": "ProfileComponent"
                        },
                        {
                            "name": "ProjectsComponent"
                        },
                        {
                            "name": "SignupComponent"
                        },
                        {
                            "name": "SkillsComponent"
                        },
                        {
                            "name": "WallComponent"
                        },
                        {
                            "name": "WelcomeComponent"
                        },
                        {
                            "name": "WindowComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Blogs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/blogs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Content",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/content.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n  baseUrl: \"http://localhost:8080\",\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  baseUrl: \"http://15.207.113.187:8080\"\r\n}"
            },
            {
                "name": "Feed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/feed.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Login",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/login.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Nav",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/nav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\r\n  parameters: {\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/,\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "Profile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/profile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Projects",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/projects.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Signup",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/signup.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Skills",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/skills.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/blogs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: BlogsComponent) => ({\r\n\tcomponet: BlogsComponent,\r\n\tprops: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/content.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: ContentComponent) => ({\r\n\tcomponent: ContentComponent,\r\n\tprops: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/login.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: LoginComponent) => ({\r\n\tcomponet: LoginComponent,\r\n\tprops: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/feed.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: FeedComponent) => ({\r\n\tcomponent: FeedComponent,\r\n\tprops: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/nav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: NavComponent) => ({\r\n\tcomponent: NavComponent,\r\n\tprops: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/profile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: ProfileComponent) => ({\r\n\tcomponent: ProfileComponent,\r\n\tprops: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/projects.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: ProjectsComponent) => ({\r\n\tcomponent: ProjectsComponent,\r\n\tprops: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/skills.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: SkillsComponent) => ({\r\n\tcomponent: SkillsComponent,\r\n\tprops: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/signup.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: SignupComponent) => ({\r\n\tcomponet: SignupComponent,\r\n\tprops: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/wall.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: WallComponent) => ({\r\n\tcomponent: WallComponent,\r\n\tprops: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/welcome.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: WelcomeComponent) => ({\r\n\tcomponet: WelcomeComponent,\r\n\tprops: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/window.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: WindowComponent) => ({\r\n\tcomponet: WindowComponent,\r\n\tprops: args\r\n})"
            },
            {
                "name": "Wall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/wall.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Welcome",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/welcome.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Window",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/window.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [
            {
                "name": "Comp",
                "childs": [
                    {
                        "name": "PROFILE",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "PROJECTS",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "SKILLS",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "BLOGS",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/lib/wall/wall.component.ts"
            }
        ],
        "groupedVariables": {
            "src/stories/blogs.stories.ts": [
                {
                    "name": "Blogs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/blogs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/blogs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: BlogsComponent) => ({\r\n\tcomponet: BlogsComponent,\r\n\tprops: args\r\n})"
                }
            ],
            "src/stories/content.stories.ts": [
                {
                    "name": "Content",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/content.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/content.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: ContentComponent) => ({\r\n\tcomponent: ContentComponent,\r\n\tprops: args\r\n})"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n  baseUrl: \"http://localhost:8080\",\r\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  baseUrl: \"http://15.207.113.187:8080\"\r\n}"
                }
            ],
            "src/stories/feed.stories.ts": [
                {
                    "name": "Feed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/feed.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/feed.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: FeedComponent) => ({\r\n\tcomponent: FeedComponent,\r\n\tprops: args\r\n})"
                }
            ],
            "src/stories/login.stories.ts": [
                {
                    "name": "Login",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/login.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/login.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: LoginComponent) => ({\r\n\tcomponet: LoginComponent,\r\n\tprops: args\r\n})"
                }
            ],
            "src/stories/nav.stories.ts": [
                {
                    "name": "Nav",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/nav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/nav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: NavComponent) => ({\r\n\tcomponent: NavComponent,\r\n\tprops: args\r\n})"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\r\n  parameters: {\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/,\r\n      },\r\n    },\r\n  },\r\n}"
                }
            ],
            "src/stories/profile.stories.ts": [
                {
                    "name": "Profile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/profile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/profile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: ProfileComponent) => ({\r\n\tcomponent: ProfileComponent,\r\n\tprops: args\r\n})"
                }
            ],
            "src/stories/projects.stories.ts": [
                {
                    "name": "Projects",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/projects.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/projects.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: ProjectsComponent) => ({\r\n\tcomponent: ProjectsComponent,\r\n\tprops: args\r\n})"
                }
            ],
            "src/stories/signup.stories.ts": [
                {
                    "name": "Signup",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/signup.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/signup.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: SignupComponent) => ({\r\n\tcomponet: SignupComponent,\r\n\tprops: args\r\n})"
                }
            ],
            "src/stories/skills.stories.ts": [
                {
                    "name": "Skills",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/skills.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/skills.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: SkillsComponent) => ({\r\n\tcomponent: SkillsComponent,\r\n\tprops: args\r\n})"
                }
            ],
            "src/stories/wall.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/wall.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: WallComponent) => ({\r\n\tcomponent: WallComponent,\r\n\tprops: args\r\n})"
                },
                {
                    "name": "Wall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/wall.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/welcome.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/welcome.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: WelcomeComponent) => ({\r\n\tcomponet: WelcomeComponent,\r\n\tprops: args\r\n})"
                },
                {
                    "name": "Welcome",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/welcome.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/window.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/window.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: WindowComponent) => ({\r\n\tcomponet: WindowComponent,\r\n\tprops: args\r\n})"
                },
                {
                    "name": "Window",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/window.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/lib/wall/wall.component.ts": [
                {
                    "name": "Comp",
                    "childs": [
                        {
                            "name": "PROFILE",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "PROJECTS",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "SKILLS",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "BLOGS",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/lib/wall/wall.component.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "WelcomeComponent"
                    },
                    {
                        "path": "user/:username",
                        "component": "WallComponent"
                    },
                    {
                        "path": "login",
                        "component": "LoginComponent"
                    },
                    {
                        "path": "login/:source",
                        "component": "LoginComponent"
                    },
                    {
                        "path": "signup",
                        "component": "SignupComponent"
                    },
                    {
                        "path": "signup/:source",
                        "component": "SignupComponent"
                    },
                    {
                        "path": "quilandquest",
                        "component": "FeedComponent"
                    },
                    {
                        "path": "content/:blog_id",
                        "component": "ContentComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/auth/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/lib/auth/signup/signup.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/lib/blogs/blogs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BlogsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/30",
                "status": "low"
            },
            {
                "filePath": "src/lib/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/lib/profile/profile.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/lib/projects/projects.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProjectsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/31",
                "status": "low"
            },
            {
                "filePath": "src/lib/quilandquest/content/content.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/lib/quilandquest/feed/feed.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FeedComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/lib/quilandquest/nav/nav.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/lib/skills/skills.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SkillsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/lib/wall/wall.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WallComponent",
                "coveragePercent": 0,
                "coverageCount": "0/29",
                "status": "low"
            },
            {
                "filePath": "src/lib/welcome/welcome.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WelcomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/lib/window/window.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WindowComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/service/app.authenticator.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "Authenticator",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/service/app.config.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AppConfig",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/service/app.user.ts",
                "type": "class",
                "linktype": "classe",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/stories/blogs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Blogs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/blogs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/content.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Content",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/content.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/feed.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Feed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/feed.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/login.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Login",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/login.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/nav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Nav",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/nav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/profile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Profile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/profile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/projects.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Projects",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/projects.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/signup.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Signup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/signup.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/skills.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Skills",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/skills.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/wall.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/wall.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Wall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/welcome.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/welcome.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Welcome",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/window.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/window.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Window",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}