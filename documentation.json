{
    "pipes": [],
    "interfaces": [],
    "injectables": [
        {
            "name": "AppConfig",
            "id": "injectable-AppConfig-0020433498259f006467ba7f75d274b2a08ddfbbd8e81c93f6ae1a3bb9dfd1a238dfcb9ad52f805878880d4d00a8fa429915386230680a1a283b0c5accecffda",
            "file": "src/service/app.config.ts",
            "properties": [
                {
                    "name": "blogsButtonX1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "blogsButtonY1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "blogsComponentX1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "blogsComponentY1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "profileButtonX1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "profileButtonY1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "profileComponentX1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "profileComponentY1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "projectsButtonX1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "projectsButtonY1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "projectsComponentX1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "projectsComponentY1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "skillsButtonX1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "skillsButtonY1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "skillsComponentX1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "skillsComponentY1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AppConfig {\r\n\t\r\n\t//Button coordinates.\r\n\tpublic profileButtonX1: any;\r\n\tpublic profileButtonY1: any;\r\n\tpublic projectsButtonX1: any;\r\n\tpublic projectsButtonY1: any;\r\n\tpublic blogsButtonX1: any;\r\n\tpublic blogsButtonY1: any;\r\n\tpublic skillsButtonX1: any;\r\n\tpublic skillsButtonY1: any;\r\n\r\n\t//Window coordinates.\r\n\tpublic profileComponentX1: any;\r\n\tpublic profileComponentY1: any;\r\n\tpublic projectsComponentX1: any;\r\n\tpublic projectsComponentY1: any;\r\n\tpublic blogsComponentX1: any;\r\n\tpublic blogsComponentY1: any;\r\n\tpublic skillsComponentX1: any;\r\n\tpublic skillsComponentY1: any;\r\n}",
            "type": "injectable"
        },
        {
            "name": "Authenticator",
            "id": "injectable-Authenticator-fd271b5ba0fbfd153169ec0c169a74962d2786be2f5d586b6ae2d1171e742b196d4be8a0b33729243dc8a06c7b5bfb9f53edf2a7ed697fa76676eb255fd06998",
            "file": "src/service/app.authenticator.ts",
            "properties": [],
            "methods": [
                {
                    "name": "authenticate",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<boolean>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        131
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { User } from './app.user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Authenticator {\r\n  constructor(private http: HttpClient, private cookieService: CookieService) {\r\n  }\r\n\r\n  public async authenticate(): Promise<boolean>{\r\n\tif(this.cookieService.check('boonJwtToken')){\r\n\t\tconst jwtToken = this.cookieService.get('boonJwtToken');\r\n\t\tconst headers = new HttpHeaders({\r\n\t\t  'Authorization': `Bearer ${jwtToken}` // Include the JWT token in the Authorization header\r\n\t\t});\r\n\t\ttry{\r\n\t\t\tconsole.log(\"auth\");\r\n\t\t\tconst response = await this.http.get<any>('http://localhost:8080/api/v1/secured/verify_user', {headers: headers}).toPromise();\r\n\t\t\tconsole.log(\"auth2\");\r\n\t\t\tawait new Promise<void>(async (resolve) => {\r\n\t\t\t\tawait User.setUser(response.username);\r\n\t\t\t\tconsole.log(\"auth2.5\");\r\n\t\t\t\tresolve();\r\n\t\t\t  });\r\n\t\t\tconsole.log(\"auth3\");\r\n\t\t\tconsole.log(response);\r\n\t\t\treturn true;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(\"JWT authentication error :\", error);\t\r\n\t\t}\r\n\t  }\r\n\treturn false;\r\n  }\r\n\r\n  // Other methods and logic for the service\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "User",
            "id": "class-User-3e0140bf67a12e6bc59791a5268e94a9acf7cd226ff29ad352859df4051c05f4b4ee136cf898cc35cbf9ad0263b64c20553a2feece16479ee7b46267723253a9",
            "file": "src/service/app.user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class User {\r\n  private static userInstance: User | null = null;\r\n  private static currentUser: any;\r\n\r\n  private constructor(currentUser: any) {\r\n    User.currentUser = currentUser;\r\n  }\r\n\r\n  public static setUser(currentUser: any): void{\r\n    if(!User.userInstance){\r\n      User.userInstance = new User(currentUser);\r\n    }\r\n  }\r\n\r\n  public static destroyInstance(): void {\r\n    User.userInstance = null;\r\n  }\r\n\r\n  // Service methods\r\n  public static getCurrentUser() {\r\n    return this.currentUser;\r\n  }\r\n\r\n  public static isLoggedIn(){\r\n    return (this.currentUser != undefined);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "currentUser",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 3,
                "modifierKind": [
                    121
                ],
                "jsdoctags": [
                    {
                        "name": "currentUser",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "currentUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "modifierKind": [
                        121,
                        124
                    ]
                },
                {
                    "name": "userInstance",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        121,
                        124
                    ]
                }
            ],
            "methods": [
                {
                    "name": "destroyInstance",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "getCurrentUser",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "isLoggedIn",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "setUser",
                    "args": [
                        {
                            "name": "currentUser",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "currentUser",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-fa01e636703ae42a92e4773fe1a3731130df2c6db01c73b046e3c6c5ef257c3849c0a23d3b74e3df4aa27c3542489c75f453a2e755b4a895cbf3d2df45cef3a2",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'portfolio'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { WallComponent } from 'src/lib/wall/wall.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'portfolio';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<router-outlet></router-outlet>\n\n"
        },
        {
            "name": "BlogsComponent",
            "id": "component-BlogsComponent-7ceb8a3e4725c78359a4b6b42bfb28fa5a1d23bb962458e79345a6f82d25c07f0743aa01e75404993296a3ef99387fb9e702da5db4e7acebd6356c9d0597e9f1",
            "file": "src/lib/blogs/blogs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-blogs",
            "styleUrls": [
                "./blogs.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./blogs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "X1",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "Y1",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "close",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter"
                },
                {
                    "name": "Xemitter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter"
                },
                {
                    "name": "Yemitter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "AddBlogs",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "author",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "blogs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "blogsConfig",
                    "defaultValue": "{\n    theme: \"theme-blogs\",\n    heading: \"Blogs\"\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Object",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "config",
                    "defaultValue": "{\n    editable: true,\n    spellcheck: true,\n    height: '24rem',\n    minHeight: '8rem',\n    placeholder: 'Enter text here...',\n    translate: 'no',\n    defaultParagraphSeparator: 'p',\n    defaultFontName: 'Comic Sans MS',\n    toolbarHiddenButtons: [\n      ['bold']\n      ],\n    customClasses: [\n      {\n        name: \"quote\",\n        class: \"quote\",\n      },\n      {\n        name: 'redText',\n        class: 'redText'\n      },\n      {\n        name: \"titleText\",\n        class: \"titleText\",\n        tag: \"h1\",\n      },\n    ]\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AngularEditorConfig",
                    "optional": false,
                    "description": "",
                    "line": 81
                },
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "coordinateConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppConfig",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "currentUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "heading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "htmlContent",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 79
                },
                {
                    "name": "showBlog",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 78
                },
                {
                    "name": "userblogs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "back",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "closeWindow",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 157,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "emitX",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emitY",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 153,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "post",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "readMore",
                    "args": [
                        {
                            "name": "blog",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 137,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "blog",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showAddBlogs",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, HostListener, Input, Output, EventEmitter} from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\nimport { AppConfig } from 'src/service/app.config';\nimport { User } from 'src/service/app.user'\n\n@Component({\n  selector: 'app-blogs',\n  templateUrl: './blogs.component.html',\n  styleUrls: ['./blogs.component.scss']\n})\nexport class BlogsComponent implements OnInit {\n\n  public currentUser: any;\n\n  public blogsConfig: Object = {\n    theme: \"theme-blogs\",\n    heading: \"Blogs\"\n  }\n\n  @Input() public username: any;\n  @Input() public X1: number = 0;\n  @Input() public Y1: number = 0;\n  @Output() public Xemitter = new EventEmitter<any>();\n  @Output() public Yemitter = new EventEmitter<any>();\n  @Output() public close = new EventEmitter<any>();\n\n  // public showTrending: boolean = true;\n  public AddBlogs: boolean = false;\n  public blogs: any;\n  public userblogs: any;\n\n  //current blog status\n  public showBlog: boolean = false;\n  public heading: any;\n  public author: any;\n  public content: any;\n  public date: any;\n\n  constructor(private http: HttpClient, private cookieService: CookieService, public coordinateConfig: AppConfig) {\n    this.currentUser = User.getCurrentUser();\n  }\n\n  ngOnInit(): void {\n    const jwtToken = this.cookieService.get('boonJwtToken');\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${jwtToken}` // Include the JWT token in the Authorization header\n    });\n\n    // this.http.get('http://localhost:8080/api/v1/public/blogs/all')\n    // .subscribe({\n    //   next: response => {\n    //     console.log(response);\n    //     this.blogs = response;\n    //   },\n    //   error: error => {\n    //     console.error('API Error', error);\n    //   }   \n    // });\n\n    this.http.get(`http://localhost:8080/api/v1/public/blogs/${this.username}`)\n    .subscribe({\n      next: response => {\n        console.log(response);\n        this.userblogs = response;\n      },\n      error: error => {\n        console.error('API Error', error);\n      }   \n    });\n  }\n\n  showAddBlogs(){\n    this.AddBlogs = !this.AddBlogs;\n  }\n\n  title = '';\n  htmlContent = '';\n\n  config: AngularEditorConfig = {\n    editable: true,\n    spellcheck: true,\n    height: '24rem',\n    minHeight: '8rem',\n    placeholder: 'Enter text here...',\n    translate: 'no',\n    defaultParagraphSeparator: 'p',\n    defaultFontName: 'Comic Sans MS',\n    toolbarHiddenButtons: [\n      ['bold']\n      ],\n    customClasses: [\n      {\n        name: \"quote\",\n        class: \"quote\",\n      },\n      {\n        name: 'redText',\n        class: 'redText'\n      },\n      {\n        name: \"titleText\",\n        class: \"titleText\",\n        tag: \"h1\",\n      },\n    ]\n  };\n\n  post(){\n    const jwtToken = this.cookieService.get('boonJwtToken');\n    const username = this.cookieService.get('boonCurrentUser');\n    const body = {\n      username: username,\n      title: this.title,\n      content: this.htmlContent\n    };\n\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${jwtToken}` // Include the JWT token in the Authorization header\n    });\n\n    console.log(headers);\n\n    this.http.post('http://localhost:8080/api/v1/secured/blogs', body, { headers })\n    .subscribe({\n      next: response => {\n        console.log(response);\n      },\n      error: error => {\n        console.error('API Error', error);\n      }   \n    });\n  }\n\n  readMore(blog: any){\n    this.heading = blog.title;\n    this.author = blog.firstname + ' ' + blog.lastname;\n    this.content = blog.content;\n    this.date = blog.createdAt;\n    this.showBlog = true;\n  }\n\n  back(){\n    this.showBlog = false;\n  }\n\n  emitX(value:any){\n    this.Xemitter.emit(value);\n  }\n  \n  emitY(value:any){\n    this.Yemitter.emit(value);\n  }\n\n  closeWindow(){\n    this.close.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import './../../styles/config.scss';\r\n\r\n.main-container{\r\n\theight: 80vh;\r\n\twidth: 80vw;\r\n\tpadding: 8px;\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.search{\r\n\theight: 4%;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\r\n\tinput{\r\n\t\theight: 24px;\r\n\t\twidth: 320px;\r\n\t\tpadding: 0px 8px;\r\n\t\tborder-radius: 24px;\r\n\t\tborder: solid 2px black;\r\n\t}\r\n\t\r\n\t.search-btn{\r\n\t\theight: 24px;\r\n\t\twidth: 24px;\r\n\t\tmargin-left: 8px;\r\n\t\tborder-radius: 24px;\r\n\t\t// border: solid 2px black;\r\n\t\tbackground-color: $primary-color-blogs;\r\n\t\tbox-shadow: 4px 4px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\t\r\n\t.search-btn:hover{\r\n\t\tbackground-color: rgb(36, 93, 199);\r\n\t}\r\n\t.search-btn:active{\r\n\t\tbox-shadow: 2px 2px;\r\n\t}\r\n}\r\n\r\n.blogs-container{\r\n\t// background-color: red;\r\n\theight: 96%;\r\n\twidth: 100%;\r\n\tbox-sizing: border-box;\r\n\r\n\t.add{\r\n\t\tbackground-color: white;\r\n\t\theight: 48px;\r\n\t\twidth: 48px;\r\n\t\tborder-radius: 50%;\r\n\t\tbox-shadow: 4px 4px;\r\n\t\tposition: absolute;\r\n\t\tbottom: 32px; \r\n\t\tright: 32px;\r\n\t}\r\n\r\n\t.add:hover{\r\n\t\tbackground-color: whitesmoke;\r\n\t}\r\n\r\n\t.add:active{\r\n\t\tbox-shadow: 2px 2px;\r\n\t}\r\n\t\r\n\t.myblogs-container{\r\n\t\tbackground-color: $primary-color-blogs;\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t\tborder-radius: 8px;\r\n\t\tpadding: 32px 100px;\r\n\t\tbox-sizing: border-box;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\toverflow-y: scroll;\r\n\r\n\t\t.blog{\r\n\t\t\twidth: 90%;\r\n\t\t\tbackground-color: white;\r\n\t\t\tmargin: 16px;\r\n\t\t\tborder-radius: 8px;\r\n\t\t\tbox-shadow: 4px 4px;\r\n\t\t\tpadding: 16px;\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\r\n\t\t\t.heading{\r\n\t\t\t\tfont-size: 24px;\r\n\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\ttext-overflow: ellipsis;\r\n\t\t\t\twhite-space: nowrap;\r\n\t\t\t\toverflow: hidden;\r\n\t\t\t\tfont-weight: bold;\r\n\t\t\t}\r\n\r\n\t\t\t.date{\r\n\t\t\t\tfont-size: 14px;\r\n\t\t\t\tfont-style: italic;\r\n\t\t\t}\r\n\r\n\t\t\t.content{\r\n\t\t\t\theight: 96px;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tpadding: 4px;\r\n\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\toverflow: hidden;\r\n\t\t\t\twidth:100%;\r\n\t\t\t\tdisplay: -webkit-box;\r\n\t\t\t\t-webkit-line-clamp: 4;\r\n\t\t\t\t-webkit-box-orient: vertical;\r\n\t\t\t\tmargin-bottom: 8px;\r\n\t\t\t}\r\n\r\n\t\t\t.read-more{\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tjustify-content: center;\r\n\t\t\t\tcolor: white;\r\n\t\t\t\tbackground-color: $primary-color-blogs;\r\n\t\t\t\tmargin-left: auto;\r\n\t\t\t\tborder-radius: 24px;\r\n\t\t\t\tbox-shadow: black 4px 4px;\r\n\t\t\t\theight: 24px;\r\n\t\t\t\twidth: 128px;\r\n\t\t\t}\r\n\r\n\t\t\t.read-more:hover{\r\n\t\t\t\tbackground-color: rgb(36, 93, 199);\r\n\t\t\t}\r\n\r\n\t\t\t.read-more:active{\r\n\t\t\t\tbox-shadow: black 2px 2px;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.addblogs-container{\r\n\t\tbackground-color: $primary-color-blogs;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: space-evenly;\r\n\t\talign-items: center;\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t\tborder-radius: 8px;\r\n\t\tposition: relative;\r\n\t\tpadding: 8px;\r\n\t\tbox-sizing: border-box;\r\n\r\n\t\t.return{\r\n\t\t\tposition: absolute;\r\n\t\t\ttop: 0;\r\n\t\t\tleft: 0;\r\n\t\t\theight: 48px;\r\n\t\t\twidth: 48px;\r\n\t\t}\r\n\r\n\r\n\t\tinput{\r\n\t\t\theight: 36px ;\r\n\t\t\tfont-size: 32px;\r\n\t\t\tpadding: 4px;\r\n\t\t\tborder-radius: 4px;\r\n\t\t\tborder: solid 1px black;\r\n\t\t}\r\n\r\n\t\t.innerclass{\r\n\t\t\tbackground-color: white;\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\t\t\talign-items: center;\r\n\t\t\tpadding: 16px;\r\n\t\t\tborder-radius: 8px;\r\n\r\n\t\t\t.btn{\r\n\t\t\t\tbackground-color: cornflowerblue;\r\n\t\t\t\theight: 32px;\r\n\t\t\t\twidth: 84px;\r\n\t\t\t\tborder: 0px;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tjustify-content: center;\r\n\t\t\t\tbox-shadow: 4px 4px;\r\n\t\t\t\tborder-radius: 24px;\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t\tmargin-top: 4px;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t.btn:hover{\r\n\t\t\t\tbackground-color: rgb(36, 93, 199);\r\n\t\t\t}\r\n\r\n\t\t\t.btn:active{\r\n\t\t\t\tbox-shadow: 2px 2px;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.readmore-container{\r\n\tbackground-color: white;\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\tborder-radius: 0px 0px 8px 8px;\r\n\tpadding: 8px;\r\n\tbox-sizing: border-box;\r\n\toverflow-y: scroll;\r\n\tposition: absolute;\r\n\ttop: 0px;\r\n\tleft: 0px;\r\n\r\n\t.back{\r\n\t\tcursor: pointer;\r\n\t\theight: 32px;\r\n\t\twidth: 32px;\r\n\t\tpadding: 4px;\r\n\t\t// background-color: red;\r\n\t}\r\n\r\n\t.blog-heading{\r\n\t\tfont-size: 32px;\r\n\t}\r\n\r\n\t.blog-metadata{\r\n\t\tfont-style: italic;\r\n\t\tfont-size: 14px;\r\n\t}\r\n}\r\n\r\n::-webkit-scrollbar {\r\n\twidth: 12px;\r\n}\r\n\r\n// /* Track */\r\n// ::-webkit-scrollbar-track {\r\n// \t-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3); \r\n// \t-webkit-border-radius: 8px;\r\n// \tborder-radius: 8px;\r\n// }\r\n\r\n/* Handle */\r\n::-webkit-scrollbar-thumb {\r\n\t-webkit-border-radius: 8px;\r\n\tborder-radius: 8px;\r\n\tbackground: rgb(36, 93, 199); \r\n\t// -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.5); \r\n}",
                    "styleUrl": "./blogs.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "coordinateConfig",
                        "type": "AppConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 39,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "coordinateConfig",
                        "type": "AppConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-window [windowConfig]=\"blogsConfig\" [X1]=\"this.X1\" [Y1]=\"this.Y1\" (Xemitter)=\"emitX($event)\" (Yemitter)=\"emitY($event)\" (close)=\"closeWindow()\">\n\t<div class=\"main-container\">\n\t\t<div class=\"search\">\n\t\t\t<input type=\"text\" placeholder=\"Search\">\n\t\t\t<div class=\"search-btn\"></div>\n\t\t</div>\n\t\t<div class=\"blogs-container\">\n\t\t\t<div class=\"addblogs-container\" *ngIf=\"AddBlogs; else myBlogs\">\n\t\t\t\t<img class=\"return\" src=\"./../../assets/images/buttons/return.png\" alt=\"\" (click)=\"showAddBlogs()\">\n\t\t\t\t<input type=\"text\" placeholder=\"Enter blog title...\" [(ngModel)]=\"title\">\n\t\t\t\t<div class=\"innerclass\">\n\t\t\t\t\t<angular-editor [(ngModel)]=\"htmlContent\" class=\"editor\" [config]=\"config\"></angular-editor>\n\t\t\t\t\t<div class=\"btn\" (click)=\"post()\">Post</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<ng-template #myBlogs>\n\t\t\t\t<div class=\"myblogs-container\">\n\t\t\t\t\t<ng-container *ngFor=\"let b of userblogs\">\n\t\t\t\t\t\t<div class=\"blog\">\n\t\t\t\t\t\t\t<div class=\"heading\">{{b.title}}</div>\n\t\t\t\t\t\t\t<div class=\"date\"> Authored by <b>{{b.firstname}} {{b.lastname}}</b> on {{b.createdAt | slice:0:10 }}</div>\n\t\t\t\t\t\t\t<div class=\"content\" [innerHTML]=\"b.content\"></div>\n\t\t\t\t\t\t\t<div class=\"read-more\" (click)=\"readMore(b)\">Read More</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</ng-container>\n\t\t\t\t</div>\n\t\t\t\t<img *ngIf=\"(this.currentUser == this.username)\" src=\"./../../assets/images/buttons/add.png\" alt=\"\" class=\"add\" (click)=\"showAddBlogs()\">\n\t\t\t</ng-template>\n\t\t</div>\n\t\t<div class=\"readmore-container\" *ngIf=\"showBlog\">\n\t\t\t<img src=\"assets/images/buttons/return.png\" class=\"back\" (click)=\"back()\">\n\t\t\t<div class=\"blog-heading\">\n\t\t\t\t{{ this.heading }}\n\t\t\t</div>\n\t\t\t<div class=\"blog-metadata\">\n\t\t\t\tAuthored by <b>{{ this.author }}</b> on {{ this.date | slice:0:10 }}\n\t\t\t</div>\n\t\t\t<br>\n\t\t\t<div class=\"blog-content\" [innerHTML]=\"this.content\"></div>\n\t\t</div>\n\t</div>\n</app-window>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-53b6e48d6613d8916018cf73bd1e2244d122564dab57318f2d0951ca74055be3b4edc38878b97dac0666962aaf9a57f892440f820ae928ecaf635499ada28e39",
            "file": "src/lib/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "buttonConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "ButtonX1",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "ButtonY1",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "Xemitter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter"
                },
                {
                    "name": "Yemitter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "ButtonX2",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ButtonY2",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "endTime",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "initialWidth",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "insideButton",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "mouseHoldsButton",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "startTime",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "mouseOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "mouseOver",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMouseDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:mousedown', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMouseMove",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:mousemove', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMouseUp",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:mouseup', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onResize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:resize', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:mousedown",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39
                },
                {
                    "name": "document:mousemove",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57
                },
                {
                    "name": "document:mouseup",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49
                },
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostListener, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent {\n\n  public initialWidth = 0; // initial size of window\n  @Input() public buttonConfig: any;\n\n  // Button coordinates.\n  @Input() public ButtonX1: number = 0;\n  @Input() public ButtonY1: number = 0;\n  @Output() Xemitter = new EventEmitter<any>();\n  @Output() Yemitter = new EventEmitter<any>();\n  public ButtonX2: number = 0;\n  public ButtonY2: number = 0;\n  public insideButton: boolean = false;\n  public mouseHoldsButton: boolean = false;\n  public startTime: number = 0;\n  public endTime: number = 0;\n\n  constructor(){\n    this.initialWidth = window.innerWidth;\n  }\n\n  // this maintains the position of button with respect to right side, when window size is changing.\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.ButtonX1 -= this.initialWidth - window.innerWidth;\n    this.Xemitter.emit(this.ButtonX1);\n    this.initialWidth = window.innerWidth;\n  }\n\n  // listen to the mouseclick is pressed.\n  @HostListener('document:mousedown', ['$event'])\n  onMouseDown(event: MouseEvent) {\n    if(this.insideButton){\n      this.mouseHoldsButton = true;\n      this.ButtonX2 = event.clientX;\n      this.ButtonY2 = event.clientY;\n    }\n  }\n\n  // when mouse click is released.\n  @HostListener('document:mouseup', ['$event'])\n  onMouseUp(event: MouseEvent) {\n    // event.preventDefault();\n    this.endTime = Date.now();\n    this.mouseHoldsButton = false;\n  }\n\n   // when mouse is moving.\n   @HostListener('document:mousemove', ['$event'])\n   onMouseMove(event: MouseEvent) { \n     if(this.mouseHoldsButton && this.insideButton){\n        event.preventDefault();\n        this.ButtonX1 += event.clientX - this.ButtonX2;\n        this.Xemitter.emit(this.ButtonX1);\n        this.ButtonY1 += event.clientY - this.ButtonY2;\n        this.Yemitter.emit(this.ButtonY1);\n        this.ButtonX2 = event.clientX;\n        this.ButtonY2 = event.clientY;\n     }\n   }\n\n     // when mouse is inside the div.\n  mouseOver(){\n    // console.log(\"insideButton\");\n    this.insideButton = true;\n  }\n\n  // when mouse is outsider the div.\n  mouseOut(){\n    // console.log('outsidemouse')\n    if(this.mouseHoldsButton == false) this.insideButton = false;\n  }\n\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import './../../styles/config.scss';\r\n\r\n.btn-container{\r\n\tcursor: pointer;\r\n\r\n\t.btn{\r\n\t\theight: 40px;\r\n\t\twidth: 48px;\r\n\t}\r\n\r\n\tp{\r\n\t\tmargin:0;\r\n\t\ttext-align: center;\r\n\t\tfont-family: $primary-font;\r\n\t\tfont-size: 12px;\r\n\t\tmargin-left: 4px;\r\n\t}\r\n}\r\n\r\n.btn-container:hover .btn{\r\n\t\theight: 42px;\r\n\t\twidth: 50px;\r\n}\r\n\r\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 23
            },
            "templateData": "<div class=\"btn-container\" (mouseover)=\"mouseOver()\" (mouseout)=\"mouseOut()\">\n\t<img src=\"{{this.buttonConfig.image}}\" class=\"btn\">\n\t<p>{{this.buttonConfig.name}}</p>\n</div>\n"
        },
        {
            "name": "ContentComponent",
            "id": "component-ContentComponent-36f550b60e0a50cbcf1fad4d55d927121f6313bb2e123e0bcbf63fe57abba4d313245a88156a39997dcae29e51c980c7dc9f76474815c93518ae28259822aaec",
            "file": "src/lib/quilandquest/content/content.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-content",
            "styleUrls": [
                "./content.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./content.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.scss']\n})\nexport class ContentComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./content.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p>content works!</p>\n"
        },
        {
            "name": "FeedComponent",
            "id": "component-FeedComponent-0dcbc5b31b872743f627ef745151101ff5af354c39467b96743ae1fe92e4fbe5712605a5ebe94a48f07975438faaf3c2ca7e796738ce8615e2dda81f87fb9882",
            "file": "src/lib/quilandquest/feed/feed.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-feed",
            "styleUrls": [
                "./feed.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./feed.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "blogs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "headers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "jwtToken",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "disliked",
                    "args": [
                        {
                            "name": "blogId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "liked",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "blogId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "liked",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "liked",
                    "args": [
                        {
                            "name": "blogId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "liked",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "blogId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "liked",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateDatabase",
                    "args": [
                        {
                            "name": "blogId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "liked",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "blogId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "liked",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { User } from 'src/service/app.user';\nimport { Authenticator } from 'src/service/app.authenticator';\n\n@Component({\n  selector: 'app-feed',\n  templateUrl: './feed.component.html',\n  styleUrls: ['./feed.component.scss']\n})\nexport class FeedComponent implements OnInit{\n\n  public blogs: any;\n  private jwtToken: any;\n  private headers: any;\n\n  constructor(private http: HttpClient, private cookieService: CookieService, private authenticator: Authenticator){\n    authenticator.authenticate();\n    this.jwtToken = this.cookieService.get('boonJwtToken');\n    this.headers = new HttpHeaders({\n      'Authorization': `Bearer ${this.jwtToken}` // Include the JWT token in the Authorization header\n    });\n  }\n\n  ngOnInit(): void {\n    if(User.isLoggedIn()){\n      console.log(this.headers);\n      this.http.get('http://localhost:8080/api/v1/public/blogs/all', {headers: this.headers})\n      .subscribe({\n        next: response => {\n          console.log(response);\n          this.blogs = response;\n        },\n        error: error => {\n          console.error('API Error', error);\n        }   \n      });\n    }else{\n      this.http.get('http://localhost:8080/api/v1/public/blogs/all')\n      .subscribe({\n        next: response => {\n          console.log(response);\n          this.blogs = response;\n        },\n        error: error => {\n          console.error('API Error', error);\n        }   \n      });\n    }\n    \n  }\n\n  liked(blogId: number, liked: number){\n    if(User.isLoggedIn() == false){\n      alert(\"Please LogIn to like.\");\n      return;\n    } \n    var blog = this.blogs.find( (t:any) => t.blogId === blogId);\n    // console.log(blog);\n    if(liked == 1) {\n      blog.liked = 0;\n      blog.likes -= 1;\n    }\n    else if(liked == -1){\n      blog.liked = 1;\n      blog.dislikes -= 1;\n      blog.likes += 1;\n    }else{\n      blog.liked = 1;\n      blog.likes += 1;\n    }\n    this.updateDatabase(blogId, blog.liked);\n  }\n\n  disliked(blogId: number, liked: number){\n    if(User.isLoggedIn() == false){\n      alert(\"Please LogIn to dislike.\");\n      return;\n    } \n    var blog = this.blogs.find( (t:any) => t.blogId === blogId);\n    // console.log(blog);\n    if(liked == -1) {\n      blog.liked = 0;\n      blog.dislikes -= 1;\n    }else if(liked == 1){\n      blog.liked = -1;\n      blog.likes -= 1;\n      blog.dislikes += 1;\n    }\n    else {\n      blog.liked = -1;\n      blog.dislikes += 1;\n    }\n    this.updateDatabase(blogId, blog.liked);\n  }\n\n  updateDatabase(blogId: any, liked: any){\n    const body = {\n      liked: liked\n    }\n    this.http.post(`http://localhost:8080/api/v1/secured/event/${blogId}`, body, {headers: this.headers})\n      .subscribe({\n        next: response => {\n          console.log(response);\n        },\n        error: error => {\n          console.error('API Error', error);\n        }   \n      });\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".feed-container{\r\n\theight: 100vh;\r\n\twidth: 100vw;\r\n\t\r\n\t.nav{\r\n\t\theight: 10vh;\r\n\t\t// background-color: green;\r\n\t\tborder-bottom: solid gainsboro 2px;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tmargin: 0 24px;\r\n\t\tpadding: 12px;\r\n\r\n\t\t.logo{\r\n\t\t\theight: 64px;\r\n\t\t\twidth: 64px;\r\n\t\t}\r\n\t}\r\n\t.feeds{\r\n\t\theight: 90vh;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\toverflow-y: scroll;\r\n\t\tpadding-bottom: 32px;\r\n\t\tbox-sizing: border-box;\r\n\t\t// background-color: grey;\r\n\r\n\t\t.blog{\r\n\t\t\tmin-height: 240px;\r\n\t\t\tmax-height: 240px;\r\n\t\t\twidth: 48vw;\r\n\t\t\tmargin-top: 12px;\r\n\t\t\tpadding: 12px;\r\n\t\t\tborder-bottom: solid gainsboro 2px;\r\n\t\t\t// background-color: lightblue;\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\r\n\t\t\t.metadata{\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tfont-style: italic;\r\n\r\n\t\t\t\t.info{\r\n\t\t\t\t\tcolor: lightcoral;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t.content{\r\n\t\t\t\theight: 92px;\r\n\t\t\t\toverflow: hidden;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t.vote{\r\n\t\t\t\tmargin-top: auto;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tjustify-content: center;\r\n\t\t\t\tpadding-top: 4px;\r\n\r\n\t\t\t\timg{\r\n\t\t\t\t\theight: 24px;\r\n\t\t\t\t\twidth: 24px;\r\n\t\t\t\t\tcursor: pointer;\r\n\t\t\t\t}\r\n\t\t\t\tp{\r\n\t\t\t\t\tmargin: 0;\r\n\t\t\t\t\tpadding: 2px 4px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.likes{\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\tmargin-right: 64px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.dislikes{\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}",
                    "styleUrl": "./feed.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authenticator",
                        "type": "Authenticator",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authenticator",
                        "type": "Authenticator",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"feed-container\">\n\t<div class=\"nav\">\n\t\t<img class=\"logo\" src=\"/assets/images/quilandquest/feather.png\" alt=\"\">\n\t\t<h2> Quil And Quest </h2>\n\t</div>\n\t<div class=\"feeds\">\n\t\t<ng-container *ngFor=\"let blog of blogs\">\n\t\t\t<div class=\"blog\">\n\t\t\t\t<h3 class=\"heading\"> {{ blog.title }}</h3>\n\t\t\t\t<div class=\"metadata\">\n\t\t\t\t\t<p class=\"author\">Written By <a class=\"info\" [routerLink]=\"['/user', blog.username]\">{{blog.firstname}} {{blog.lastname}}</a> |</p>\n\t\t\t\t\t<p class=\"date\">| Published On <span class=\"info\">{{blog.createdAt | slice:0:10}}</span></p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"content\" [innerHTML]=\"blog.content\"></div>\n\t\t\t\t<div class=\"vote\">\n\t\t\t\t\t<div class=\"likes\">\n\t\t\t\t\t\t<img src=\"{{(blog.liked == 1) ? './../../../assets/images/quilandquest/liked.png' : './../../../assets/images/quilandquest/like.png' }}\" alt=\"\" (click)=\"liked(blog.blogId, blog.liked)\"> <p>{{blog.likes}}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"dislikes\">\n\t\t\t\t\t\t<img src=\"{{(blog.liked == -1) ? './../../../assets/images/quilandquest/disliked.png' : './../../../assets/images/quilandquest/dislike.png' }}\" alt=\"\" (click)=\"disliked(blog.blogId, blog.liked)\"> <p>{{blog.dislikes}}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</ng-container>\n\t</div>\n</div>\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-9f12eb156c45b1f2bba513d20ca659fcb652f5258a8e4a01271c9593f2f440702554a7b0bfd88eca0ad46955dd81aa5d3f188b28a05fd1d0989d6d142e0b0ee9",
            "file": "src/lib/auth/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "formData",
                    "defaultValue": "{\n    username: '',\n    password: '',\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "signUp",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private http: HttpClient, private cookieService: CookieService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  formData = {\n    username: '',\n    password: '',\n  };\n\n  submitForm() {\n    this.http.post<any>('http://localhost:8080/api/v1/public/auth/authenticate', this.formData)\n    .subscribe({\n      next: response => {\n        const jwtToken = response.token;\n        const username = response.username;\n        this.cookieService.set('boonJwtToken', jwtToken, 7, '/');\n        this.cookieService.set('boonCurrentUser', username, 7, '/');\n        console.log(response);\n        if(response.isAuthenticated){\n          this.router.navigate(['/user', response.username]);\n        }\n      },\n      error: error => {\n        console.error('API Error:', error);\n        // Handle the error response\n      }\n    });\n  }\n\n  signUp(){\n    this.router.navigate(['/signup']);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".login-page{\r\n  // background-color: red;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  // flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n    .login-form{\r\n      background-color: whitesmoke;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      // align-items: center;\r\n      padding: 48px;\r\n      border-radius: 8px;\r\n      // border: solid black 2px;\r\n      box-shadow: 4px 4px;\r\n\r\n      input{\r\n        height: 24px;\r\n        width: 256px;\r\n        padding: 4px 8px;\r\n        border: solid black 1px;\r\n        border-radius: 24px;\r\n        margin-top: 16px;\r\n      }\r\n\r\n      button{\r\n        height: 32px;\r\n        border: 0px;\r\n        margin-top: 16px;\r\n        background-color: palegreen;\r\n        box-shadow: black 4px 4px;\r\n        border-radius: 24px;\r\n        font-weight: bold;\r\n      }\r\n\r\n      p{\r\n        font-size: 14px;\r\n        text-align: center;\r\n      }\r\n\r\n      button:hover{\r\n        background-color: rgb(89, 211, 89);\r\n      }\r\n\r\n      button:active{\r\n        box-shadow: 2px 2px;\r\n      }\r\n    }\r\n}\r\n\r\n.error{\r\n  color: orangered;\r\n  font-size: 12px;\r\n  margin-left: 12px;\r\n}",
                    "styleUrl": "./login.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"login-page\">\n\t  <form class=\"login-form\" (ngSubmit)=\"submitForm()\" #myForm=\"ngForm\">\n\t\t<input type=\"text\" placeholder=\"username\" name=\"username\" [(ngModel)]=\"formData.username\" class=\"form-controle\" required minlength=\"4\" #username=\"ngModel\"/>\n\t\t<div *ngIf=\"username.invalid && (username.dirty || username.touched)\"class=\"error\">\n\t\t\t<div *ngIf=\"username.errors?.['required']\">\n\t\t\t\tusername is required.\n\t\t\t</div>\n\t\t</div>\n\t\t<input type=\"password\" placeholder=\"password\" name=\"password\" [(ngModel)]=\"formData.password\" required #password=\"ngModel\"/>\n\t\t<div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"error\">\n\t\t\t<div *ngIf=\"password.errors?.['required']\">\n\t\t\t\tpassword is required.\n\t\t\t</div>\n\t\t</div>\n\t\t<button type=\"submit\" [disabled]=\"!myForm.form.valid\">Log In</button>\n\t\t<!-- <button> Log In </button> -->\n\t\t<p class=\"message\">Not registered? <a routerLink=\"/signup\">Create an account</a></p>\n\t  </form>\n  </div>"
        },
        {
            "name": "ProfileComponent",
            "id": "component-ProfileComponent-5640726ba196d77dfc0d3e91db000592851660c8e90b8e1b3cda15866f71163defe4681d0d74905e0f254ff0f26fe367da583f254d0da68189db2b9ca88a917c",
            "file": "src/lib/profile/profile.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-profile",
            "styleUrls": [
                "./profile.component.scss",
                "./../../styles/config.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./profile.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "X1",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "Y1",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "close",
                    "defaultValue": "new EventEmitter<any> ()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter"
                },
                {
                    "name": "Xemitter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter"
                },
                {
                    "name": "Yemitter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "currentUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "descriptionLength",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "editProfile",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "formData",
                    "defaultValue": "{\n    description: \"\",\n    username: \"\",\n    firstname: \"\",\n    lastname: \"\",\n    resume: \"\",\n    showResume: false,\n    linkedin: \"\",\n    showLinkedin: false,\n    github: \"\",\n    showGithub: false,\n    gmail: \"\",\n    showGmail: false\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "profileConfig",
                    "defaultValue": "{\n    theme : \"theme-profile\",\n    heading : \"Profile\",\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Object",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "closeWindow",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "emitX",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emitY",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "limitInputLength",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setEditProfile",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submitForm",
                    "args": [
                        {
                            "name": "form",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { User } from 'src/service/app.user'\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss', './../../styles/config.scss']\n})\nexport class ProfileComponent implements OnInit{\n  public currentUser: any;\n  @Input() public username: any;\n  @Input() public X1: number = 0;\n  @Input() public Y1: number = 0;\n  @Output() public Xemitter = new EventEmitter<any>();\n  @Output() public Yemitter = new EventEmitter<any>();\n  @Output() public close = new EventEmitter<any> ();\n\n  public profileConfig: Object = {\n    theme : \"theme-profile\",\n    heading : \"Profile\",\n  }\n\n  public descriptionLength: number = 0;\n  public editProfile: boolean = false;\n  // formData: any;\n  formData = {\n    description: \"\",\n    username: \"\",\n    firstname: \"\",\n    lastname: \"\",\n    resume: \"\",\n    showResume: false,\n    linkedin: \"\",\n    showLinkedin: false,\n    github: \"\",\n    showGithub: false,\n    gmail: \"\",\n    showGmail: false\n  }\n\n  constructor(private http: HttpClient, private cookieService: CookieService) { \n    this.currentUser = User.getCurrentUser();\n  }\n\n  ngOnInit(): void {\n    this.http.get(`http://localhost:8080/api/v1/public/profile/${this.username}`)\n    .subscribe({\n      next: response => {\n        const data: any = response;\n        this.formData = data;\n      },\n      error: error => {\n        console.error('API Error:', error);\n        // Handle the error response\n      }\n    });\n  }\n\n  ngOnChanges(changes: any) {\n    if (changes.username) {\n      // Perform any necessary actions when the variable changes\n      this.ngOnInit();\n    }\n  }\n\n  submitForm(form: any) {\n    if (form.valid) {\n      const jwtToken = this.cookieService.get('boonJwtToken');\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${jwtToken}` // Include the JWT token in the Authorization header\n      });\n      console.log(jwtToken);\n      console.log(this.formData);\n      this.http.post('http://localhost:8080/api/v1/secured/profile', this.formData, {headers})\n      .subscribe({\n        next: response => {\n          console.log(\"res\", response);\n        },\n        error: error => {\n          console.error('API Error:', error);\n          // Handle the error response\n        }\n      });\n    }\n  }\n\n\n  limitInputLength() {\n    if (this.formData.description.length > 255) {\n      this.formData.description = this.formData.description.slice(0, 255);\n    }\n    this.descriptionLength = this.formData.description.length;\n  }\n\n  emitX(value:any){\n    this.Xemitter.emit(value);\n  }\n  \n  emitY(value:any){\n    this.Yemitter.emit(value);\n  }\n\n  closeWindow(){\n    this.close.emit();\n  }\n\n  setEditProfile(){\n    this.editProfile = !this.editProfile;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "app-window{\r\n\t.profile-container{\r\n\t\tmin-height: 36vh;\r\n\t\twidth: 40vw;\r\n\t\tmin-width: 400px;\r\n\t\tpadding: 8px;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\t\r\n\t\t.profile{\r\n\t\t\theight: 100%;\r\n\t\t\twidth: 100%;\r\n\t\t\tbackground-color: #ebb7c9;\r\n\t\t\tborder-radius: 8px;\r\n\t\t\tdisplay: flex;\r\n\r\n\t\t\t.left{\r\n\t\t\t\tmin-height: 36vh;\r\n\t\t\t\tbackground-color: antiquewhite;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tpadding: 0px 16px;\r\n\r\n\t\t\t\t.profile-image{\r\n\t\t\t\t\theight: 96px;\r\n\t\t\t\t\twidth: 96px;\r\n\t\t\t\t\tmargin: 8px;\r\n\t\t\t\t\tborder-radius: 50%;\r\n\t\t\t\t\tborder: solid black;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.contacts{\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t\t// background-color: aquamarine;\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\tflex-direction: column;\r\n\t\t\t\t\tjustify-content: center;\r\n\r\n\t\t\t\t\t.source{\r\n\t\t\t\t\t\tpadding: 4px;\r\n\t\t\t\t\t\tdisplay: flex;\r\n\r\n\t\t\t\t\t\t.icon{\r\n\t\t\t\t\t\t\theight: 24px;\r\n\t\t\t\t\t\t\twidth: 24px;\r\n\t\t\t\t\t\t\tmargin-right: 8px;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tp{\r\n\t\t\t\t\t\t\tmargin: 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t.right{\r\n\t\t\t\tpadding: 8px;\r\n\t\t\t\tmin-height: 36vh;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t\tposition: relative;\r\n\r\n\t\t\t\th2{\r\n\t\t\t\t\tmargin: 0;\r\n\t\t\t\t}\r\n\t\t\t\th5{\r\n\t\t\t\t\tmargin: 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.description{\r\n\t\t\t\t\tbackground-color: white;\r\n\t\t\t\t\theight: fit-content;\r\n\t\t\t\t\tmargin-top: 16px;\r\n\t\t\t\t\tpadding: 8px 16px;\r\n\t\t\t\t\tborder-radius: 8px;\r\n\t\t\t\t\ttext-align: justify;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.edit{\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\tbottom: 8px;\r\n\t\t\t\t\tright: 8px;\r\n\t\t\t\t\theight: 32px;\r\n\t\t\t\t\twidth: 32px;\r\n\t\t\t\t\tbackground-color: white;\r\n\t\t\t\t\tmargin-top: auto;\r\n\t\t\t\t\tmargin-left: auto;\r\n\t\t\t\t\tbox-shadow: black 4px 4px;\r\n\t\t\t\t\tpadding: 4px;\r\n\t\t\t\t\tborder-radius: 48px 48px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.edit:hover{\r\n\t\t\t\t\tbackground-color: whitesmoke;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.edit:active{\r\n\t\t\t\t\tbox-shadow: 2px 2px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t.edit-profile{\r\n\t\t\tmin-height: 40vh;\r\n\t\t\twidth: 100%;\r\n\t\t\tbackground-color: #ebb7c9;\r\n\t\t\tborder-radius: 8px;\r\n\r\n\t\t\t.return{\r\n\t\t\t\theight: 32px;\r\n\t\t\t\twidth: 32px;\r\n\t\t\t\tpadding: 4px;\r\n\t\t\t}\r\n\r\n\t\t\t.description{\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tpadding: 4px;\r\n\t\t\t\tmargin-bottom: 8px;\r\n\r\n\t\t\t\ttextarea{\r\n\t\t\t\t\tresize: none;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t.element{\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tpadding: 4px;\r\n\t\t\t\tmargin-bottom: 8px;\r\n\t\t\t}\r\n\r\n\t\t\tbutton{\r\n\t\t\t\tmargin-left: 4px;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n",
                    "styleUrl": "./profile.component.scss"
                },
                {
                    "data": "$primary-font: cursive;\r\n\r\n//themes\r\n$primary-color-profile: #ebb7c9;\r\n$secondary-color-profile: #faedf1; \r\n.theme-profile{\r\n\tbackground-color: $secondary-color-profile;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-profile;\r\n\t}\r\n}\r\n\r\n$primary-color-projects: #b2fcb2;\r\n$secondary-color-projects: #ecfeec;\r\n.theme-projects{\r\n\tbackground-color: $secondary-color-projects;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-projects;\r\n\t}\r\n}\r\n\r\n$primary-color-skills: #ffefd5;\r\n$secondary-color-skills: #fffbf4;\r\n.theme-skills{\r\n\tbackground-color: $secondary-color-skills;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-skills;\r\n\t}\r\n}\r\n\r\n$primary-color-blogs: #8baff1;\r\n$seconday-color-blogs: #e2ebfb;\r\n.theme-blogs{\r\n\tbackground-color: $seconday-color-blogs;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-blogs;\r\n\t}\r\n}\r\n\r\n",
                    "styleUrl": "./../../styles/config.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-window [windowConfig]=\"profileConfig\" [X1]=\"this.X1\" [Y1]=\"this.Y1\" (Xemitter)=\"emitX($event)\" (Yemitter)=\"emitY($event)\" (close)=\"closeWindow()\">\n\t<div class=\"profile-container\">\n\t\t<div class=\"edit-profile\" *ngIf=\"editProfile; else profile\">\n\t\t\t<img src=\"./../../assets/images/buttons/return.png\" alt=\"\" class=\"return\" (click)=\"setEditProfile()\">\n\t\t\t<form #myForm=\"ngForm\" (ngSubmit)=\"submitForm(myForm)\">\n\t\t\t\t<div class=\"description\">\n\t\t\t\t  <label for=\"description\">Description ({{ this.descriptionLength }}/255 characters):</label>\n\t\t\t\t  <textarea rows=\"5\" cols=\"60\" id=\"description\" placeholder=\"Enter Description ...\" name=\"description\" maxlength=\"255\" [(ngModel)]=\"formData.description\" (input)=\"limitInputLength()\"></textarea>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"element\">\n\t\t\t\t  <label for=\"resume\">Resume:</label>\n\t\t\t\t  <input type=\"url\" id=\"resume\" name=\"resume\" [(ngModel)]=\"formData.resume\">\n\t\t\t\t  <label for=\"show-resume\">Show resume on profile:</label>\n\t\t\t\t  <input type=\"checkbox\" id=\"show-resume\" name=\"showResume\" [(ngModel)]=\"formData.showResume\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"element\">\n\t\t\t\t  <label for=\"linkedin\">LinkedIn:</label>\n\t\t\t\t  <input type=\"url\" id=\"linkedin\" name=\"linkedin\" [(ngModel)]=\"formData.linkedin\">\n\t\t\t\t  <label for=\"show-linkedin\">Show resume on profile:</label>\n\t\t\t\t  <input type=\"checkbox\" id=\"show-linkedin\" name=\"showLinkedin\" [(ngModel)]=\"formData.showLinkedin\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"element\">\n\t\t\t\t  <label for=\"github\">GitHub:</label>\n\t\t\t\t  <input type=\"url\" id=\"github\" name=\"github\" [(ngModel)]=\"formData.github\">\n\t\t\t\t  <label for=\"show-github\">Show resume on profile:</label>\n\t\t\t\t  <input type=\"checkbox\" id=\"show-github\" name=\"showGithub\" [(ngModel)]=\"formData.showGithub\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"element\">\n\t\t\t\t  <label for=\"gmail\">Gmail:</label>\n\t\t\t\t  <input type=\"email\" id=\"gmail\" name=\"gmail\" [(ngModel)]=\"formData.gmail\">\n\t\t\t\t  <label for=\"show-gmail\">Show resume on profile:</label>\n\t\t\t\t  <input type=\"checkbox\" id=\"show-gmail\" name=\"showGmail\" [(ngModel)]=\"formData.showGmail\">\n\t\t\t\t</div>\n\t\t\t\t<button type=\"submit\">Submit</button>\n\t\t\t</form>  \n\t\t</div>\n\t\t<ng-template #profile>\n\t\t\t<div class=\"profile\">\n\t\t\t\t<div class=\"left\">\n\t\t\t\t\t<img src=\"./../../assets/images/profile/user.png\" alt=\"\" class=\"profile-image\">\n\t\t\t\t\t<div class=\"contacts\">\n\t\t\t\t\t\t<a href=\"{{this.formData.resume}}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"source\" *ngIf=\"this.formData.showResume\"> <img src=\"./../../assets/images/profile/doc.png\" alt=\"\" class=\"icon\"> <p> Resume </p></a>\n\t\t\t\t\t\t<a href=\"{{this.formData.linkedin}}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"source\" *ngIf=\"this.formData.showLinkedin\"> <img src=\"./../../assets/images/profile/linkedin.png\" alt=\"\" class=\"icon\"> <p> Linkedin </p> </a>\n\t\t\t\t\t\t<a href=\"{{this.formData.github}}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"source\" *ngIf=\"this.formData.showGithub\"> <img src=\"./../../assets/images/profile/git.png\" alt=\"\" class=\"icon\"> <p> GitHub </p></a>\n\t\t\t\t\t\t<a href=\"https://mail.google.com/mail/?view=cm&fs=1&to={{this.formData.gmail}}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"source\" *ngIf=\"this.formData.showGmail\"> <img src=\"./../../assets/images/profile/gmail.png\" alt=\"\" class=\"icon\"> <p> Gmail </p> </a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"right\">\n\t\t\t\t\t<div class=\"name\"><h2>{{this.formData.firstname}} {{this.formData.lastname}}</h2></div>\n\t\t\t\t\t<div class=\"username\"><h5>@{{this.formData.username}}</h5></div>\n\t\t\t\t\t<div class=\"description\"><p>{{ this.formData.description }}</p></div>\n\t\t\t\t\t<img *ngIf=\"(this.currentUser == this.username) \"class=\"edit\" src=\"./../../assets/images/profile/edit.png\" alt=\"\" (click)=\"setEditProfile()\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</ng-template>\n\t</div>\t\n</app-window>"
        },
        {
            "name": "ProjectsComponent",
            "id": "component-ProjectsComponent-5887baaaf19c732db0d2d19f7af75fa09efa9a74ce3e72f8f47e5a0f325e3ea7cb0f4bd7def8e784554bafa7ff1a36ff621f48354e1585483305cd55a604ae77",
            "file": "src/lib/projects/projects.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-projects",
            "styleUrls": [
                "./projects.component.scss",
                "./../../styles/config.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./projects.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "X1",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "Y1",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "close",
                    "defaultValue": "new EventEmitter<any> ()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "EventEmitter"
                },
                {
                    "name": "Xemitter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                },
                {
                    "name": "Yemitter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "config",
                    "defaultValue": "{\n    editable: true,\n    spellcheck: true,\n    height: '24rem',\n    minHeight: '8rem',\n    placeholder: 'Enter text here...',\n    translate: 'no',\n    defaultParagraphSeparator: 'p',\n    defaultFontName: 'Comic Sans MS',\n    toolbarHiddenButtons: [\n      ['bold']\n      ],\n    customClasses: [\n      {\n        name: \"quote\",\n        class: \"quote\",\n      },\n      {\n        name: 'redText',\n        class: 'redText'\n      },\n      {\n        name: \"titleText\",\n        class: \"titleText\",\n        tag: \"h1\",\n      },\n    ]\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AngularEditorConfig",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "currentUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "descriptionLength",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "editProject",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "formData",
                    "defaultValue": "{\n    showProject: false,\n    title: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    description: \"\",\n    content: \"\"\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "projects",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "projectsConfig",
                    "defaultValue": "{\n    theme : \"theme-projects\",\n    heading : \"Projects\",\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Object",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "projectsHeading",
                    "defaultValue": "\"Projects\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "projectsTheme",
                    "defaultValue": "\"theme-projects\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "closeWindow",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "emitX",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emitY",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "limitInputLength",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setEditProject",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { User } from 'src/service/app.user';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss', './../../styles/config.scss']\n})\nexport class ProjectsComponent implements OnInit {\n  public currentUser: any;\n  @Input() public username: any;\n  @Input() public X1: number = 0;\n  @Input() public Y1: number = 0;\n  @Output() public Xemitter = new EventEmitter<any>();\n  @Output() public Yemitter = new EventEmitter<any>();\n  @Output() public close = new EventEmitter<any> ();\n\n  public projectsTheme: string = \"theme-projects\";\n  public projectsHeading: string = \"Projects\";\n\n  public projectsConfig: Object = {\n    theme : \"theme-projects\",\n    heading : \"Projects\",\n  }\n  \n  public editProject: boolean = false;\n  public projects: any;\n  public descriptionLength: number = 0;\n  // public formData: any;\n  public formData = {\n    showProject: false,\n    title: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    description: \"\",\n    content: \"\"\n  }\n\n  config: AngularEditorConfig = {\n    editable: true,\n    spellcheck: true,\n    height: '24rem',\n    minHeight: '8rem',\n    placeholder: 'Enter text here...',\n    translate: 'no',\n    defaultParagraphSeparator: 'p',\n    defaultFontName: 'Comic Sans MS',\n    toolbarHiddenButtons: [\n      ['bold']\n      ],\n    customClasses: [\n      {\n        name: \"quote\",\n        class: \"quote\",\n      },\n      {\n        name: 'redText',\n        class: 'redText'\n      },\n      {\n        name: \"titleText\",\n        class: \"titleText\",\n        tag: \"h1\",\n      },\n    ]\n  };\n\n  constructor(private http: HttpClient, private cookieService: CookieService) { \n    this.currentUser = User.getCurrentUser();\n  }\n\n  ngOnInit(): void {\n    this.http.get(`http://localhost:8080/api/v1/public/projects/${this.username}`)\n    .subscribe({\n      next: response => {\n        console.log(response);\n        this.projects = response;\n      },\n      error: error => {\n        console.error('API Error', error);\n      }   \n    });\n  }\n\n  emitX(value:any){\n    this.Xemitter.emit(value);\n  }\n  \n  emitY(value:any){\n    this.Yemitter.emit(value);\n  }\n\n  closeWindow(){\n    this.close.emit();\n  }\n  \n  setEditProject(){\n    this.editProject = !this.editProject;\n  }\n\n  submitForm(){\n    console.log(this.formData);\n\n    const jwtToken = this.cookieService.get('boonJwtToken');\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${jwtToken}` // Include the JWT token in the Authorization header\n    });\n\n    console.log(headers);\n    this.http.post<any>('http://localhost:8080/api/v1/secured/projects', this.formData, {headers})\n    .subscribe({\n      next: response => {\n        console.log(response);\n      },\n      error: error => {\n        console.error('API Error', error);\n      }   \n    });\n  }\n\n  limitInputLength(){\n    this.descriptionLength = this.formData.description.length;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import './../../styles/config.scss';\r\n\r\n.projects-window{\r\n\theight: 80vh;\r\n\twidth: 80vw;\r\n\tpadding: 8px;\r\n\tposition: relative;\r\n\r\n\t.add{\r\n\t\tbackground-color: white;\r\n\t\theight: 48px;\r\n\t\twidth: 48px;\r\n\t\tborder-radius: 50%;\r\n\t\tbox-shadow: 4px 4px;\r\n\t\tposition: absolute;\r\n\t\tbottom: 32px; \r\n\t\tright: 32px;\r\n\t}\r\n\r\n\t.add:hover{\r\n\t\tbackground-color: whitesmoke;\r\n\t}\r\n\r\n\t.add:active{\r\n\t\tbox-shadow: 2px 2px;\r\n\t}\r\n\t\r\n\t.projects-container{\r\n\t\tposition: relative;\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t\tpadding: 8px 84px 8px 150px;\r\n\t\tbox-sizing: border-box;\r\n\t\tbackground-color: $primary-color-projects;\r\n\t\tborder-radius: 8px;\r\n\t\toverflow-y: scroll;\r\n\r\n\t\t.timeline{\r\n\t\t\tlist-style: none;\r\n\t\t\tborder-left: solid white 8px;\r\n\r\n\t\t\t.block{\r\n\t\t\t\t// background-color: grey;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tposition: relative;\r\n\t\t\t\t// padding-bottom: 16px;\r\n\t\t\t\t// padding-right: 16px;\r\n\t\t\t\tmargin-bottom: 16px;\r\n\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\t\r\n\t\t\t\t.date{\r\n\t\t\t\t\tbackground-color: white;\r\n\t\t\t\t\tborder-radius: 8px;\r\n\t\t\t\t\tpadding: 0px 4px;\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\ttop:50%;\r\n\t\t\t\t\tleft: -158px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.circle{\r\n\t\t\t\t\tbackground-color: palegreen;\r\n\t\t\t\t\tborder-radius: 50%;\r\n\t\t\t\t\tborder: 6px solid white;\r\n\t\t\t\t\theight: 10px;\r\n\t\t\t\t\twidth: 10px;\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\ttop: 50%;\r\n\t\t\t\t\tleft: -55px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.show{\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\ttop: 8px;\r\n\t\t\t\t\tleft: 20px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.radio:checked ~ label .show{\r\n\t\t\t\t\topacity: 0;\r\n\t\t\t\t\ttransform: translateX(20px);\r\n\t\t\t\t\ttransition: transform 0.2s linear;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.radio:not(:checked) ~ label .show{\r\n\t\t\t\t\topacity: 1;\r\n\t\t\t\t\ttransform: translateX(-20px);\r\n\t\t\t\t\ttransition: transform 0.2s linear;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.hide{\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\ttop: 8px;\r\n\t\t\t\t\tleft: 20px;\r\n\t\t\t\t\topacity: 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.radio:checked ~ label .hide{\r\n\t\t\t\t\topacity: 1;\r\n\t\t\t\t\ttransform: translateX(20px);\r\n\t\t\t\t\ttransition: transform 0.2s linear;\r\n\t\t\t\t}\r\n\t\t\t\t.radio:not(:checked) ~ label .hide{\r\n\t\t\t\t\topacity: 0;\r\n\t\t\t\t\ttransform: translateX(-20px);\r\n\t\t\t\t\ttransition: transform 0.2s linear;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.content{\r\n\t\t\t\t\tposition: relative;\r\n\t\t\t\t\tbackground-color: white;\r\n\t\t\t\t\tborder-radius: 8px;\r\n\t\t\t\t\tpadding: 16px;\r\n\t\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\t\toverflow: hidden;\r\n\t\t\t\t\twidth:100%;\r\n\t\t\t\t\tbox-shadow: black 4px 4px;\r\n\r\n\t\t\t\t\t.material{\r\n\t\t\t\t\t\tmax-height: 0;\r\n\t\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\t\toverflow: hidden;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.radio{\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.radio:checked ~ .content{\r\n\t\t\t\t\t// background-color: gainsboro;\r\n\t\t\t\t\ttransform: translateX(20px);\r\n\t\t\t\t\ttransition: transform 0.2s linear;\r\n\t\t\t\t\t// height: max-content;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.radio:checked ~ .content .material{\r\n\t\t\t\t\tmax-height: 2000px;\r\n\t\t\t\t\t// overflow: scroll;\r\n\t\t\t\t\twidth: auto;\r\n\t\t\t\t\ttransition: max-height 0.2s linear;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.radio:not(:checked) ~ .content .material{\r\n\t\t\t\t\tmax-height: 0px;\r\n\t\t\t\t\t// overflow: scroll;\r\n\t\t\t\t\twidth: auto;\r\n\t\t\t\t\ttransition: max-height 0.2s linear;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.radio:not(:checked) ~ .content{\r\n\t\t\t\t\t// background-color: gainsboro;\r\n\t\t\t\t\ttransform: translateX(-20px);\r\n\t\t\t\t\ttransition: transform 0.2s linear;\r\n\t\t\t\t\t// height: max-content;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.radio:checked ~ .circle{\r\n\t\t\t\t\tbackground-color: lightcoral;\r\n\t\t\t\t\ttransition: background-color 0.2s linear;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.radio:not(:checked) ~ .circle{\r\n\t\t\t\t\tbackground-color: palegreen;\r\n\t\t\t\t\ttransition: background-color 0.2s linear;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t::-webkit-scrollbar {\r\n\t\twidth: 12px;\r\n\t}\r\n\t\r\n\t/* Handle */\r\n\t::-webkit-scrollbar-thumb {\r\n\t\t-webkit-border-radius: 8px;\r\n\t\tborder-radius: 8px;\r\n\t\tbackground: rgb(76, 170, 76); \r\n\t}\r\n\r\n\t.edit-project{\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t\toverflow-y: scroll;\r\n\t\t// background-color: red;\r\n\r\n\t\t.return{\r\n\t\t\theight: 48px;\r\n\t\t\twidth: 48px;\r\n\t\t}\r\n\r\n\t\t.element{\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\t\t\tjustify-content: space-between;\r\n\t\t\talign-items: baseline;\r\n\r\n\t\t\tangular-editor{\r\n\t\t\t\tbackground-color: white;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\r\n\t\t\ttextarea{\r\n\t\t\t\tresize: none;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tbox-sizing: border-box;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n",
                    "styleUrl": "./projects.component.scss"
                },
                {
                    "data": "$primary-font: cursive;\r\n\r\n//themes\r\n$primary-color-profile: #ebb7c9;\r\n$secondary-color-profile: #faedf1; \r\n.theme-profile{\r\n\tbackground-color: $secondary-color-profile;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-profile;\r\n\t}\r\n}\r\n\r\n$primary-color-projects: #b2fcb2;\r\n$secondary-color-projects: #ecfeec;\r\n.theme-projects{\r\n\tbackground-color: $secondary-color-projects;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-projects;\r\n\t}\r\n}\r\n\r\n$primary-color-skills: #ffefd5;\r\n$secondary-color-skills: #fffbf4;\r\n.theme-skills{\r\n\tbackground-color: $secondary-color-skills;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-skills;\r\n\t}\r\n}\r\n\r\n$primary-color-blogs: #8baff1;\r\n$seconday-color-blogs: #e2ebfb;\r\n.theme-blogs{\r\n\tbackground-color: $seconday-color-blogs;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-blogs;\r\n\t}\r\n}\r\n\r\n",
                    "styleUrl": "./../../styles/config.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 69,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-window [windowConfig]=\"projectsConfig\" [X1]=\"this.X1\" [Y1]=\"this.Y1\" (Xemitter)=\"emitX($event)\" (Yemitter)=\"emitY($event)\" (close)=\"closeWindow()\">\n\t<div class=\"projects-window\">\n\t\t<div class=\"edit-project\" *ngIf=\"editProject; else project\">\n\t\t\t<img src=\"./../../assets/images/buttons/return.png\" alt=\"\" class=\"return\" (click)=\"setEditProject()\">\n\t\t\t<div class=\"element\">\n\t\t\t\t<label for=\"title\">Title:</label>\n\t\t\t\t<input type=\"text\" id=\"title\" name=\"title\" [(ngModel)]=\"formData.title\">\n\t\t\t</div>\n\t\t\t<div class=\"element\">\n\t\t\t\t<label for=\"description\">Description ({{ this.descriptionLength }}/255 characters):</label>\n\t\t\t\t<textarea rows=\"3\" cols=\"60\" id=\"description\" placeholder=\"Enter Description ...\" name=\"description\" maxlength=\"255\" [(ngModel)]=\"formData.description\" (input)=\"limitInputLength()\"></textarea>\n\t\t\t</div>\n\t\t\t<div class=\"element\">\n\t\t\t\t<label for=\"startDate\">Start Date:</label>\n\t\t\t\t<input type=\"date\" id=\"startDate\" name=\"startDate\" [(ngModel)]=\"formData.startDate\">\n\t\t\t</div>\n\t\t\t<div class=\"element\">\n\t\t\t\t<label for=\"endDate\">End Date:</label>\n\t\t\t\t<input type=\"date\" id=\"endDate\" name=\"endDate\" [(ngModel)]=\"formData.endDate\">\n\t\t\t</div>\n\t\t\t<div class=\"element content\">\n\t\t\t\t<label for=\"content\">Content:</label>\n\t\t\t\t<angular-editor id=\"content\" [(ngModel)]=\"formData.content\" class=\"editor\" [config]=\"config\"></angular-editor>\n\t\t\t</div>\n\t\t\t<button (click)=\"submitForm()\">Submit</button>\n\t\t</div>\n\t\t<ng-template #project>\n\t\t\t<div class=\"projects-container\">\n\t\t\t\t<ul class=\"timeline\">\n\t\t\t\t\t<ng-container *ngFor=\"let project of projects; let i = index\">\n\t\t\t\t\t\t<li class=\"block\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"project{{i}}\" class=\"radio\" name=\"project\">\n\t\t\t\t\t\t\t<div class=\"date\">{{project.startDate|slice:0:10}}</div>\n\t\t\t\t\t\t\t<span class=\"circle\"></span>\n\t\t\t\t\t\t\t<div class=\"content\">\n\t\t\t\t\t\t\t\t<h2> {{project.title}} </h2>\n\t\t\t\t\t\t\t\t<p> {{project.description}} </p>\n\t\t\t\t\t\t\t\t<p class=\"material\" [innerHTML]=\"project.content\"></p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<label for=\"project{{i}}\">\n\t\t\t\t\t\t\t\t<div class=\"show\">[ + ]</div>\n\t\t\t\t\t\t\t\t<div class=\"hide\">[ - ]</div>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ng-container>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<img *ngIf=\"(this.currentUser == this.username)\" class=\"add\" src=\"./../../assets/images/buttons/add.png\" alt=\"\" (click)=\"setEditProject()\">\n\t\t</ng-template>\n\t</div>\t\n</app-window>"
        },
        {
            "name": "SignupComponent",
            "id": "component-SignupComponent-0a13a5aa62cb87e80f6dbbc2ace34f775b80616580e7ce5501b3b1dc17f92b6dbb64749d554020b5f1988e0e03943f9e4893bd2b9c6ec039a5b84634c1dd5078",
            "file": "src/lib/auth/signup/signup.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-signup",
            "styleUrls": [
                "./signup.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./signup.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "emailExists",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "formData",
                    "defaultValue": "{\n    username: '',\n    firstname: '',\n    lastname: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "userCreated",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "usernameExists",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submitForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor(private http: HttpClient, private cookieService: CookieService, private router: Router){}\n\n  ngOnInit(): void {\n  }\n\n  formData = {\n    username: '',\n    firstname: '',\n    lastname: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  };\n\n  public usernameExists: boolean = false;\n  public emailExists: boolean = false;\n  public userCreated: boolean = false;\n\n  submitForm() {\n    console.log(this.formData);\n    this.http.post<any>('http://localhost:8080/api/v1/public/auth/register', this.formData)\n    .subscribe({\n      next: response => {\n        this.cookieService.set('boonCurrentUser', response.username, 7, '/');\n        this.cookieService.set('boonJwtToken', response.token), 7, '/';\n        this.usernameExists = response.usernameCollision;\n        this.emailExists = response.emailCollision;\n        this.userCreated = response.userCreated;\n        if(this.userCreated) {\n          // route to home page of user.\n          this.router.navigate(['/user', response.username]);\n        }\n        console.log(response);\n        // Handle the JWT token as needed\n      },\n      error: error => {\n        console.error('API Error:', error);\n        // Handle the error response\n      }\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".signup-page{\r\n  // background-color: red;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  // flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n    .register-form{\r\n      background-color: whitesmoke;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      // align-items: center;\r\n      padding: 48px;\r\n      border-radius: 8px;\r\n      // border: solid black 2px;\r\n      box-shadow: 4px 4px;\r\n\r\n      input{\r\n        height: 24px;\r\n        width: 256px;\r\n        padding: 4px 8px;\r\n        border: solid black 1px;\r\n        border-radius: 24px;\r\n        margin-top: 16px;\r\n      }\r\n\r\n      button{\r\n        height: 32px;\r\n        margin-top: 16px;\r\n        border: 0px;\r\n        background-color: palegreen;\r\n        box-shadow: black 4px 4px;\r\n        border-radius: 24px;\r\n        font-weight: bold;\r\n      }\r\n\r\n      p{\r\n        font-size: 14px;\r\n        text-align: center;\r\n      }\r\n\r\n      button:hover{\r\n        background-color: rgb(89, 211, 89);\r\n      }\r\n\r\n      button:active{\r\n        box-shadow: 2px 2px;\r\n      }\r\n    }\r\n}\r\n\r\n.error{\r\n  color: orangered;\r\n  font-size: 12px;\r\n  margin-left: 12px;\r\n}",
                    "styleUrl": "./signup.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"signup-page\">\n\t\t<form class=\"register-form\" (ngSubmit)=\"submitForm()\" #myForm=\"ngForm\">\n\t\t\t<input type=\"text\" placeholder=\"username\" name=\"username\" [(ngModel)]=\"formData.username\" class=\"form-controle\" required minlength=\"4\" #username=\"ngModel\"/>\n\t\t\t<div *ngIf=\"username.invalid && (username.dirty || username.touched)\"class=\"error\">\n\t\t\t\t<div *ngIf=\"username.errors?.['required']\">\n\t\t\t\t\tusername is required.\n\t\t\t\t</div>\n\t\t\t\t<div *ngIf=\"username.errors?.['minlength']\">\n\t\t\t\t\tusername must be at least 4 characters long.\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div *ngIf=\"this.usernameExists\" class=\"error\">\n\t\t\t\tusername already in use. Try another.\n\t\t\t</div>\n\t\t\t<input type=\"text\" placeholder=\"firstname\" name=\"firstname\" [(ngModel)]=\"formData.firstname\" class=\"form-controle\" required minlength=\"4\" #firstname=\"ngModel\"/>\n\t\t\t<div *ngIf=\"firstname.invalid && (firstname.dirty || firstname.touched)\"class=\"error\">\n\t\t\t\t<div *ngIf=\"firstname.errors?.['required']\">\n\t\t\t\t\tfirstname is required.\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<input type=\"text\" placeholder=\"lastname\" name=\"lastname\" [(ngModel)]=\"formData.lastname\" class=\"form-controle\" required minlength=\"4\" #lastname=\"ngModel\"/>\n\t\t\t<div *ngIf=\"lastname.invalid && (lastname.dirty || lastname.touched)\"class=\"error\">\n\t\t\t\t<div *ngIf=\"lastname.errors?.['required']\">\n\t\t\t\t\tlastname is required.\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<input type=\"email\" placeholder=\"email\" name=\"email\" [(ngModel)]=\"formData.email\" required email #email=\"ngModel\"/>\n\t\t\t<div *ngIf=\"email.invalid && (email.dirty || email.touched)\"class=\"error\">\n\t\t\t\t<div *ngIf=\"email.errors?.['required']\">\n\t\t\t\t\temail is required.\n\t\t\t\t</div>\n\t\t\t\t<div *ngIf=\"email.errors?.['email']\">\n\t\t\t\t\tinvalid email format.\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div *ngIf=\"this.emailExists\" class=\"error\">\n\t\t\t\tEmail already in use. Try another.\n\t\t\t</div>\n\t\t\t<input type=\"password\" placeholder=\"password\" name=\"password\" [(ngModel)]=\"formData.password\" required #password=\"ngModel\"/>\n\t\t\t<div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"error\">\n\t\t\t\t<div *ngIf=\"password.errors?.['required']\">\n\t\t\t\t\tpassword is required.\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<input type=\"password\" placeholder=\"confirm password\" name=\"confirmPassword\" [(ngModel)]=\"formData.confirmPassword\" required #confirm=\"ngModel\"/>\n\t\t\t<div *ngIf=\"confirm.invalid && (confirm.dirty || confirm.touched)\" class=\"error\">\n\t\t\t\t<div *ngIf=\"confirm.errors?.['required']\">\n\t\t\t\t\tconfirm password is required.\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div *ngIf=\"password.value != confirm.value\" class=\"error\">\n\t\t\t\tPasswords do not match.\n\t\t\t</div>\n\t\t\t<button type=\"submit\" [disabled]=\"!myForm.form.valid || password.value != confirm.value\">Sign Up</button>\n\t\t\t<p class=\"message\">Already registered? <a routerLink=\"/login\">Sign In</a></p>\n\t  \t</form>\n</div>"
        },
        {
            "name": "SkillsComponent",
            "id": "component-SkillsComponent-478062cb87bf23dc8714dbc5c3dc5f4bb3b6f52289110060cfbd5392e078a8a93bc435ec9445312a86742b4903bf0685e4215ee6232121265f0e1635f95773d8",
            "file": "src/lib/skills/skills.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-skills",
            "styleUrls": [
                "./skills.component.scss",
                "./../../styles/config.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./skills.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "X1",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "Y1",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "close",
                    "defaultValue": "new EventEmitter<any> ()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter"
                },
                {
                    "name": "Xemitter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter"
                },
                {
                    "name": "Yemitter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "projectsConfig",
                    "defaultValue": "{\n    theme : \"theme-skills\",\n    heading : \"Skills\",\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Object",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "closeWindow",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "emitX",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emitY",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-skills',\n  templateUrl: './skills.component.html',\n  styleUrls: ['./skills.component.scss', './../../styles/config.scss']\n})\nexport class SkillsComponent implements OnInit {\n  @Input() public username: any;\n  @Input() public X1: number = 0;\n  @Input() public Y1: number = 0;\n  @Output() public Xemitter = new EventEmitter<any>();\n  @Output() public Yemitter = new EventEmitter<any>();\n  @Output() public close = new EventEmitter<any> ();\n\n  public projectsConfig: Object = {\n    theme : \"theme-skills\",\n    heading : \"Skills\",\n  }\n\n  constructor() { \n  }\n\n  ngOnInit(): void {\n  }\n\n  emitX(value:any){\n    this.Xemitter.emit(value);\n  }\n  \n  emitY(value:any){\n    this.Yemitter.emit(value);\n  }\n\n  closeWindow(){\n    this.close.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "app-window{\r\n\t.skills-container{\r\n\t\theight: 720px;\r\n\t\tpadding: 8px;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\t\r\n\t\t.skills{\r\n\t\t\tposition: relative;\r\n\t\t\theight: 100%;\r\n\t\t\twidth: 100%;\r\n\t\t\tbackground-color: #ffefd5;\r\n\t\t\tborder-radius: 8px;\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n}",
                    "styleUrl": "./skills.component.scss"
                },
                {
                    "data": "$primary-font: cursive;\r\n\r\n//themes\r\n$primary-color-profile: #ebb7c9;\r\n$secondary-color-profile: #faedf1; \r\n.theme-profile{\r\n\tbackground-color: $secondary-color-profile;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-profile;\r\n\t}\r\n}\r\n\r\n$primary-color-projects: #b2fcb2;\r\n$secondary-color-projects: #ecfeec;\r\n.theme-projects{\r\n\tbackground-color: $secondary-color-projects;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-projects;\r\n\t}\r\n}\r\n\r\n$primary-color-skills: #ffefd5;\r\n$secondary-color-skills: #fffbf4;\r\n.theme-skills{\r\n\tbackground-color: $secondary-color-skills;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-skills;\r\n\t}\r\n}\r\n\r\n$primary-color-blogs: #8baff1;\r\n$seconday-color-blogs: #e2ebfb;\r\n.theme-blogs{\r\n\tbackground-color: $seconday-color-blogs;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-blogs;\r\n\t}\r\n}\r\n\r\n",
                    "styleUrl": "./../../styles/config.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-window [windowConfig]=\"projectsConfig\" [X1]=\"this.X1\" [Y1]=\"this.Y1\" (Xemitter)=\"emitX($event)\" (Yemitter)=\"emitY($event)\" (close)=\"closeWindow()\">\n\t<div class=\"skills-container\">\n\t\t<div class=\"skills\">\n\t\t\t\n\t\t</div>\n\t</div>\t\n</app-window>"
        },
        {
            "name": "WallComponent",
            "id": "component-WallComponent-11fe9cf2ef3ca329ec63a1b8703cc37d8a37ca2296e6ba3e656238bb6c9ff4076cb2a1f8a9432ba8023a43d4cd441338e41ea56a115ac8a465ee0e947515255f",
            "file": "src/lib/wall/wall.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-wall",
            "styleUrls": [
                "./wall.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./wall.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "BLOGS",
                    "defaultValue": "Comp.BLOGS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "blogsButton",
                    "defaultValue": "{\n    name: \"Blogs\",\n    image: \"/assets/images/buttons/cloudClosedFolder.png\",\n    state: false\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppConfig",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "currentUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "initialWidth",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isLoggedIn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loadBlogsComponent",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loadProfileComponent",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loadProjectsComponent",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loadSkillsComponent",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "PROFILE",
                    "defaultValue": "Comp.PROFILE",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "profileButton",
                    "defaultValue": "{\n    name: \"Profile\",\n    image: \"/assets/images/buttons/cloudOpenFolder.png\",\n    state: true\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "PROJECTS",
                    "defaultValue": "Comp.PROJECTS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "projectsButton",
                    "defaultValue": "{\n    name: \"Projects\",\n    image: \"/assets/images/buttons/cloudClosedFolder.png\",\n    state: false\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "showCurrentUser",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "SKILLS",
                    "defaultValue": "Comp.SKILLS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "skillsButton",
                    "defaultValue": "{\n    name: \"Skills\",\n    image: \"/assets/images/buttons/cloudClosedFolder.png\",\n    state: false\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "validClick",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "flipWindow",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 181,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMouseDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:mousedown', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMouseMove",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 119,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:mousemove', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setButtonX1",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "button",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 163,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "button",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setButtonY1",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "button",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 170,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "button",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setWindowX1",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "window",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "window",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setWindowY1",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "window",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "window",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 177,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:mousedown",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 114
                },
                {
                    "name": "document:mousemove",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 119
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, HostListener} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AppConfig} from 'src/service/app.config';\nimport { User } from 'src/service/app.user'\nimport { CookieService } from 'ngx-cookie-service';\nimport { Authenticator } from 'src/service/app.authenticator';\n\nenum Comp{\n  PROFILE,\n  PROJECTS,\n  SKILLS,\n  BLOGS,\n}\n\n@Component({\n  selector: 'app-wall',\n  templateUrl: './wall.component.html',\n  styleUrls: ['./wall.component.scss']\n})\n\nexport class WallComponent implements OnInit {\n  public currentUser: any;\n  public isLoggedIn!: boolean;\n  public username: any;\n  public showCurrentUser: boolean = false;\n\n  public PROFILE: any = Comp.PROFILE;\n  public PROJECTS: any = Comp.PROJECTS;\n  public SKILLS: any = Comp.SKILLS;\n  public BLOGS: any = Comp.BLOGS;\n\n  public profileButton = {\n    name: \"Profile\",\n    image: \"/assets/images/buttons/cloudOpenFolder.png\",\n    state: true\n  }\n  public projectsButton = {\n    name: \"Projects\",\n    image: \"/assets/images/buttons/cloudClosedFolder.png\",\n    state: false\n  }\n  public skillsButton = {\n    name: \"Skills\",\n    image: \"/assets/images/buttons/cloudClosedFolder.png\",\n    state: false\n  }\n  public blogsButton = {\n    name: \"Blogs\",\n    image: \"/assets/images/buttons/cloudClosedFolder.png\",\n    state: false\n  }\n\n\n  public initialWidth = 0; // initial size of window\n  public validClick: boolean = false;\n\n  // Component booleans\n  public loadProfileComponent: boolean = true;\n  public loadProjectsComponent: boolean = false;\n  public loadSkillsComponent: boolean = false;\n  public loadBlogsComponent: boolean =  false;\n  \n\n  constructor(public config: AppConfig, private cookieService: CookieService, private route: ActivatedRoute, private router: Router, private authenticator: Authenticator) { \n    //set initil window width.\n    this.initialWidth = window.innerWidth;\n\n    // Initialize all button coordinates.\n    if(config.profileButtonX1 == undefined) config.profileButtonX1 = window.innerWidth - 100;\n    if(config.profileButtonY1 == undefined) config.profileButtonY1 = 50;\n\n    if(config.projectsButtonX1 == undefined) config.projectsButtonX1 = window.innerWidth - 100;\n    if(config.projectsButtonY1 == undefined) config.projectsButtonY1 = 140;  // 50 + 90\n\n    if(config.blogsButtonX1 == undefined) config.blogsButtonX1 = window.innerWidth - 100;\n    if(config.blogsButtonY1 == undefined) config.blogsButtonY1 = 230; // 140 + 90\n\n    if(config.skillsButtonX1 == undefined) config.skillsButtonX1 = window.innerWidth - 100;\n    if(config.skillsButtonY1 == undefined) config.skillsButtonY1 = 310; // 230 + 90\n\n    \n\n    \n    // Initialize all window coordinates.\n    if(config.profileComponentX1 == undefined) config.profileComponentX1 = (window.innerWidth * 60) / 200; // for view width 40%\n    if(config.profileComponentY1 == undefined) config.profileComponentY1 = 72;\n\n    if(config.projectsComponentX1 == undefined) config.projectsComponentX1 = ((window.innerWidth * 20) / 200); // for view width 80%\n    if(config.projectsComponentY1 == undefined) config.projectsComponentY1 = 72;\n\n    if(config.skillsComponentX1 == undefined) config.skillsComponentX1 = ((window.innerWidth * 15) / 200); // for view width 85%\n    if(config.skillsComponentY1 == undefined) config.skillsComponentY1 = 72;\n\n    if(config.blogsComponentX1 == undefined) config.blogsComponentX1 = ((window.innerWidth * 20) / 200); // for view width 80%\n    if(config.blogsComponentY1 == undefined) config.blogsComponentY1 = 72;\n  }\n\n  ngOnInit(): void {\n    //get user details.\n    console.log(\"something\");\n    console.log(User.getCurrentUser());\n    this.authenticator.authenticate();\n    console.log(User.getCurrentUser());\n    this.isLoggedIn = User.isLoggedIn();\n    this.currentUser = User.getCurrentUser();\n\n    this.route.params.subscribe(params => {\n      this.username = params['username'];\n      this.profileButton.name = this.username;\n    });    \n  }\n\n  @HostListener('document:mousedown', ['$event'])\n  onMouseDown(event: MouseEvent) {\n    this.validClick = true;\n  }\n\n  @HostListener('document:mousemove', ['$event'])\n  onMouseMove(event: MouseEvent) {\n    // this.validClick = false;\n  }\n  \n  flipWindow(value: any) {\n    if(this.validClick){\n      if(value == Comp.PROJECTS) {\n        this.loadProjectsComponent = !this.loadProjectsComponent;\n        this.projectsButton.state = !this.projectsButton.state;\n        if(this.projectsButton.state) this.projectsButton.image = \"/assets/images/buttons/cloudOpenFolder.png\";\n        else this.projectsButton.image = \"/assets/images/buttons/cloudClosedFolder.png\"\n      }else if(value == Comp.BLOGS){\n        this.loadBlogsComponent = !this.loadBlogsComponent;\n        this.blogsButton.state = !this.blogsButton.state;\n        if(this.blogsButton.state) this.blogsButton.image = \"/assets/images/buttons/cloudOpenFolder.png\";\n        else this.blogsButton.image = \"/assets/images/buttons/cloudClosedFolder.png\"\n      }else if(value == Comp.SKILLS){\n        this.loadSkillsComponent = !this.loadSkillsComponent;\n        this.skillsButton.state = !this.skillsButton.state;\n        if(this.skillsButton.state) this.skillsButton.image = \"/assets/images/buttons/cloudOpenFolder.png\";\n        else this.skillsButton.image = \"/assets/images/buttons/cloudClosedFolder.png\"\n      }else{\n        this.loadProfileComponent = !this.loadProfileComponent;\n        this.profileButton.state = !this.profileButton.state;\n        if(this.profileButton.state) this.profileButton.image = \"/assets/images/buttons/cloudOpenFolder.png\";\n        else this.profileButton.image = \"/assets/images/buttons/cloudClosedFolder.png\"\n      }\n    }\n  }\n\n  setWindowX1(value: any, window: any){\n    if(window == Comp.PROFILE) this.config.profileComponentX1 = value;\n    else if(window == Comp.PROJECTS) this.config.projectsComponentX1 = value;\n    else if(window == Comp.SKILLS) this.config.skillsComponentX1 = value;\n    else this.config.blogsComponentX1 = value;\n  }\n\n  setWindowY1(value: any, window: any){\n    if(window == Comp.PROFILE) this.config.profileComponentY1 = value;\n    else if(window == Comp.PROJECTS) this.config.projectsComponentY1 = value;\n    else if(window == Comp.SKILLS) this.config.skillsComponentY1 = value;\n    else this.config.blogsComponentY1 = value;\n  }\n\n  setButtonX1(value: any, button: any){\n    // if(button == Comp.PROFILE) this.config.profileButtonX1 = value;\n    // else if(button == Comp.PROJECTS) this.config.projectsButtonX1 = value;\n    // else if(button == Comp.SKILLS) this.config.skillsButtonX1 = value;\n    // else this.config.blogsButtonX1 = value;\n  }\n\n  setButtonY1(value: any, button: any){\n    // if(button == Comp.PROFILE) this.config.profileButtonY1 = value;\n    // else if(button == Comp.PROJECTS) this.config.projectsButtonY1 = value;\n    // else if(button == Comp.SKILLS) this.config.skillsButtonY1 = value;\n    // else this.config.blogsButtonY1 = value;\n  }\n\n  showMenu(){\n    this.showCurrentUser = !this.showCurrentUser;\n  }\n\n  logOut(){\n    // this.user.setCurrentUser(undefined);\n    User.destroyInstance();\n    this.cookieService.deleteAll('/');\n    this.cookieService.deleteAll('/user');\n    this.router.navigate(['/login']);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wall{\r\n\toverflow: hidden;\r\n\theight: 100vh;\r\n\twidth: 100vw;\r\n\t// display: flex;\r\n\t// align-items: center;\r\n\t// justify-content: center;\r\n\tz-index: 0;\r\n\tposition: relative;\r\n\t// background-image: url(\"/assets/images/wall/wall1.jpg\");\r\n\t// background-color: #c7ede6;\r\n\tbackground-color: #afeeee;\r\n\tbackground-image:\r\n      repeating-linear-gradient(#ebfbfb 0 2px, transparent 1px 100%),\r\n      repeating-linear-gradient(90deg, #ebfbfb 0 2px, transparent 1px 100%);\r\n    background-size: 32px 32px;\r\n\r\n\t.user{\r\n\t\tposition: fixed;\r\n\t\ttop: 24px;\r\n\t\tleft: 24px;\r\n\t\tborder-radius: 24px;\r\n\t\tbox-shadow: black 4px 4px;\r\n\t\tbackground-color: white;\r\n\t\theight: 48px;\r\n\t\twidth: 48px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\t.user:active{\r\n\t\tbox-shadow: black 2px 2px;\r\n\t}\r\n\t.user:hover{\r\n\t\tbackground-color: whitesmoke;\r\n\t}\r\n\r\n\t.quilandquest{\r\n\t\tposition: fixed;\r\n\t\ttop: 104px;\r\n\t\tleft: 24px;\r\n\t\tborder-radius: 24px;\r\n\t\tbox-shadow: black 4px 4px;\r\n\t\tbackground-color: white;\r\n\t\theight: 48px;\r\n\t\twidth: 48px;\r\n\t\tpadding: 8px;\r\n\t\tbox-sizing: border-box;\r\n\t\tcursor: pointer;\r\n\r\n\t\timg{\r\n\t\t\theight: 32px;\r\n\t\t\twidth: 32px;\r\n\t\t}\r\n\t}\r\n\t.quilandquest:active{\r\n\t\tbox-shadow: black 2px 2px;\r\n\t}\r\n\t.quilandquest:hover{\r\n\t\tbackground-color: whitesmoke;\r\n\t}\r\n\r\n\t.user-card{\r\n\t\tbackground-color: white;\r\n\t\tbox-shadow: 4px 4px;\r\n\t\theight: 48px;\r\n\t\twidth: 256px;\r\n\t\tposition: fixed;\r\n\t\tborder-radius: 24px;\r\n\t\ttop: 24px;\r\n\t\tleft: 84px;\r\n\t\tz-index: -1;\r\n\r\n\t\t.info-container{\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: row;\r\n\t\t\talign-items: center;\r\n\t\t\tjustify-content: space-around;\r\n\r\n\t\t\t// p{\r\n\t\t\t// \tmargin: 0;\r\n\t\t\t// \tfont-weight: bold;\r\n\t\t\t// }\r\n\r\n\t\t\t.log{\r\n\t\t\t\tbackground-color: gray;\r\n\t\t\t\tborder-radius: 8px;\r\n\t\t\t\tpadding: 8px;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tapp-button{\r\n\t\tposition: fixed;\r\n\t}\r\n\t\r\n\tapp-profile{\r\n\t\tposition: fixed;\r\n\t\tz-index: 100;\r\n\t}\r\n\r\n\tapp-projects{\r\n\t\tposition: fixed;\r\n\t\tz-index: 100;\r\n\t}\r\n\r\n\tapp-skills{\r\n\t\tposition: fixed;\r\n\t\tz-index: 100;\r\n\t}\r\n\r\n\tapp-blogs{\r\n\t\tposition: fixed;\r\n\t\tz-index: 100;\r\n\t}\r\n\r\n\t.homebtn{\r\n\t\tz-index: 1;\r\n\t\tposition: absolute;\r\n\t\tcursor: pointer;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\r\n\t\t.logo{\r\n\t\t\theight: 40px;\r\n\t\t\twidth: 60px;\r\n\t\t\tmargin-bottom: 5px;\r\n\t\t}\r\n\r\n\t\t.foldername{\r\n\t\t\theight: 20px;\r\n\t\t\twidth: 60px;\r\n\t\t\tfont-size: 16px;\r\n\t\t\tfont-weight: bolder;\r\n\t\t\tfont-family: 'Courier New', Courier, monospace;\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: center;\r\n\t\t\tmargin: 0px;\r\n\t\t}\r\n\t}\r\n\r\n\t.folderbtn{\r\n\t\tz-index: 1;\r\n\t\tposition: absolute;\r\n\t\tcursor: pointer;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\r\n\t\t.homelogo{\r\n\t\t\theight: 40px;\r\n\t\t\twidth: 60px;\r\n\t\t\tmargin-bottom: 2px;\r\n\t\t}\r\n\r\n\t\t.logo{\r\n\t\t\theight: 50px;\r\n\t\t\twidth: 60px;\r\n\t\t\tmargin-bottom: 2px;\r\n\t\t}\r\n\r\n\t\t.foldername{\r\n\t\t\theight: 15px;\r\n\t\t\twidth: 60px;\r\n\t\t\tfont-size: 12px;\r\n\t\t\t// font-weight: bold;\r\n\t\t\tcolor: black;\r\n\t\t\tfont-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: center;\r\n\t\t\tmargin: 0px;\r\n\t\t}\r\n\t}\r\n\r\n\t.card-container{\r\n\t\tz-index: 3;\r\n\t\theight: 300px;\r\n\t\twidth: 700px;\r\n\t\tposition: absolute;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tbackground-color: aquamarine;\r\n\t\tborder-radius: 20px;\r\n\t\tbox-shadow: 0 10px 25px -5px rgb(0 0 0 / 0.8), 0 8px 10px -6px rgb(0 0 0 / 0.5);\r\n\t\tvisibility: hidden;\r\n\t\t// padding: 15px;\r\n\t\t// box-sizing: border-box;\r\n\t\t// transform: translateY(10px);\r\n\t\t// transition: all 100ms ease-out;\r\n\r\n\t\t&.show-card{\r\n\t\t\tvisibility: visible;\r\n\t\t\t// transform: translateY(0);\r\n\t\t}\r\n\r\n\t\t.menu-bar{\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 32px;\r\n\t\t\tcursor: pointer;\r\n\t\t\tbackground-color: whitesmoke;\r\n\t\t\tborder-radius: 20px 20px 0px 0px;\r\n\t\t\tborder: 2px solid black;\r\n\t\t\tborder-bottom: 0px;\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: row;\r\n\t\t\talign-items: center;\r\n\r\n\t\t\t.first{\r\n\t\t\t\theight: 15px;\r\n\t\t\t\twidth: 15px;\r\n\t\t\t\tbackground-color: lightcoral;\r\n\t\t\t\tborder-radius: 10px 10px 10px 10px;\r\n\t\t\t\tborder: 2px solid black;\r\n\t\t\t\tmargin-left: 10px;\r\n\t\t\t}\r\n\t\t\t.second{\r\n\t\t\t\theight: 15px;\r\n\t\t\t\twidth: 15px;\r\n\t\t\t\tbackground-color: white;\r\n\t\t\t\tborder-radius: 10px 10px 10px 10px;\r\n\t\t\t\tborder: 2px solid black;\r\n\t\t\t\tmargin-left: 10px;\r\n\t\t\t}\r\n\t\t\t.third{\r\n\t\t\t\theight: 15px;\r\n\t\t\t\twidth: 15px;\r\n\t\t\t\tbackground-color: white;\r\n\t\t\t\tborder-radius: 10px 10px 10px 10px;\r\n\t\t\t\tborder: 2px solid black;\r\n\t\t\t\tmargin-left: 10px;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.content-box{\r\n\t\t\tbackground-color: whitesmoke;\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 100%;\r\n\t\t\tborder-radius: 0px 0px 20px 20px;\r\n\t\t\tborder: 2px solid black;\r\n\t\t\t// font-family: 'Courier New', Courier, monospace;\r\n\t\t\t// font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n\t\t\t// font-family: Jost,sans-serif;\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\t\t\tjustify-content: space-around;\r\n\t\t\t// font-weight: bold;\r\n\t\t\t// padding: 15px;\r\n\t\t\t// box-sizing: border-box;\r\n\r\n\t\t\th1{\r\n\t\t\t\tpadding: 12px 24px;\r\n\t\t\t\tmargin: 0px;\r\n\t\t\t}\r\n\r\n\t\t\tp{\r\n\t\t\t\tpadding: 12px 24px;\t\r\n\t\t\t\tmargin: 0px;\r\n\t\t\t\tfont-size: 15px;\r\n\t\t\t\tfont-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n\t\t\t}\r\n\r\n\t\t\t.find{\r\n\t\t\t\tpadding: 0px 24px;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\t// background-color: blue;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: 60px;\r\n\r\n\t\t\t\tp{\r\n\t\t\t\t\tpadding: 12px 0px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.logo{\r\n\t\t\t\t\theight: 32px;\r\n\t\t\t\t\twidth: 32px;\r\n\t\t\t\t\tmargin: 8px;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.res{\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t\twidth: 60%;\r\n\t\t\t\t\t// background-color: red;\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\talign-items: center;\r\n\t\t\t\t\tflex-direction: row;\r\n\t\t\t\t\tjustify-content: flex-end;\r\n\r\n\t\t\t\t\t.logo{\r\n\t\t\t\t\t\theight: 32px;\r\n\t\t\t\t\t\twidth: 32px;\r\n\t\t\t\t\t\tmargin: 8px;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\n",
                    "styleUrl": "./wall.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "config",
                        "type": "AppConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authenticator",
                        "type": "Authenticator",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 61,
                "jsdoctags": [
                    {
                        "name": "config",
                        "type": "AppConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cookieService",
                        "type": "CookieService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authenticator",
                        "type": "Authenticator",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"wall\">\n\t<img src=\"/assets/images/profile/user.png\" class=\"user\" (click)=\"showMenu()\">\n\t<div class=\"user-card\" *ngIf=\"this.showCurrentUser\">\n\t\t<div class=\"info-container\" *ngIf=\"this.isLoggedIn; else notLoggedIn\">\n\t\t\t<a [routerLink]=\"['/user', this.currentUser]\">{{ this.currentUser }}</a>\n\t\t\t<div class=\"log\" (click)=\"logOut()\"> LogOut</div>\n\t\t</div>\n\t\t<ng-template #notLoggedIn>\n\t\t\t<div class=\"info-container\">\n\t\t\t\t<p>Please log in to continue.</p>\n\t\t\t\t<a class=\"log\" [routerLink]=\"['/login']\"> LogIn </a>\n\t\t\t</div>\n\t\t</ng-template>\n\t</div>\n\t<a class=\"quilandquest\" [routerLink]=\"['/quilandquest']\"> <img src=\"/assets/images/quilandquest/feather.png\" alt=\"\" > </a>\n\t<app-button (click)=\"flipWindow(PROFILE)\" [buttonConfig]=\"profileButton\" [ButtonX1]=\"this.config.profileButtonX1\" [ButtonY1]=\"this.config.profileButtonY1\" (Xemitter)=\"setButtonX1($event, PROFILE)\" (Yemitter)=\"setButtonY1($event, PROFILE)\"style = \"top: {{this.config.profileButtonY1}}px; left: {{this.config.profileButtonX1}}px\"></app-button>\n\t<app-button (click)=\"flipWindow(PROJECTS)\" [buttonConfig]=\"projectsButton\" [ButtonX1]=\"this.config.projectsButtonX1\" [ButtonY1]=\"this.config.projectsButtonY1\" (Xemitter)=\"setButtonX1($event, PROJECTS)\" (Yemitter)=\"setButtonY1($event, PROJECTS)\"style = \"top: {{this.config.projectsButtonY1}}px; left: {{this.config.projectsButtonX1}}px\"></app-button>\n\t<!-- <app-button (click)=\"flipWindow(SKILLS)\" [buttonConfig]=\"skillsButton\" [ButtonX1]=\"this.config.skillsButtonX1\" [ButtonY1]=\"this.config.skillsButtonY1\" (Xemitter)=\"setButtonX1($event, SKILLS)\" (Yemitter)=\"setButtonY1($event, SKILLS)\"style = \"top: {{this.config.skillsButtonY1}}px; left: {{this.config.skillsButtonX1}}px\"></app-button>\t -->\n\t<app-button (click)=\"flipWindow(BLOGS)\" [buttonConfig]=\"blogsButton\" [ButtonX1]=\"this.config.blogsButtonX1\" [ButtonY1]=\"this.config.blogsButtonY1\" (Xemitter)=\"setButtonX1($event, BLOGS)\" (Yemitter)=\"setButtonY1($event, BLOGS)\"style = \"top: {{this.config.blogsButtonY1}}px; left: {{this.config.blogsButtonX1}}px\"></app-button>\n\t\n\n\t<app-profile [username]=\"username\" [X1] = \"this.config.profileComponentX1\" [Y1] = \"this.config.profileComponentY1\" (Xemitter)=\"setWindowX1($event, PROFILE)\" (Yemitter)=\"setWindowY1($event, PROFILE)\" (close)=\"flipWindow(PROFILE)\" *ngIf=\"loadProfileComponent\"style=\"top : {{this.config.profileComponentY1}}px; left: {{this.config.profileComponentX1}}px\"> </app-profile>\n\t<app-projects [username]=\"username\" [X1] = \"this.config.projectsComponentX1\" [Y1] = \"this.config.projectsComponentY1\" (Xemitter)=\"setWindowX1($event, PROJECTS)\" (Yemitter)=\"setWindowY1($event, PROJECTS)\" (close)=\"flipWindow(PROJECTS)\"*ngIf=\"loadProjectsComponent\"style=\"top : {{this.config.projectsComponentY1}}px; left: {{this.config.projectsComponentX1}}px\"> </app-projects>\n\t<!-- <app-skills [username]=\"username\" [X1] = \"this.config.skillsComponentX1\" [Y1] = \"this.config.skillsComponentY1\" (Xemitter)=\"setWindowX1($event, SKILLS)\" (Yemitter)=\"setWindowY1($event, SKILLS)\" (close)=\"flipWindow(SKILLS)\" *ngIf=\"loadSkillsComponent\"style=\"top : {{this.config.skillsComponentY1}}px; left: {{this.config.skillsComponentX1}}px\"> </app-skills>  -->\n\t<app-blogs [username]=\"username\" [X1] = \"this.config.blogsComponentX1\" [Y1] = \"this.config.blogsComponentY1\" (Xemitter)=\"setWindowX1($event, BLOGS)\" (Yemitter)=\"setWindowY1($event, BLOGS)\" (close)=\"flipWindow(BLOGS)\" *ngIf=\"loadBlogsComponent\"style=\"top : {{this.config.blogsComponentY1}}px; left: {{this.config.blogsComponentX1}}px\"> </app-blogs>\n\t\n\t\n\t\n\t\n\t<!-- <div class = \"card-container\" [class.show-card] = \"cardVisible\" style = \"top: {{cardY1}}px; left: {{cardX1}}px\">\n\t\t<div class=\"menu-bar\" (mouseover)=\"mouseOver(CARD)\" (mouseout)=\"mouseOut(CARD)\">\n\t\t\t<div class=\"first\" (click)=\"flipCard(HOME)\" ></div>\n\t\t\t<div class=\"second\" (click)=\"flipCard(HOME)\"></div>\n\t\t\t<div class=\"third\"></div>\n\t\t</div>\t\n\t\t<div class=\"content-box\">\n\t\t\t<h1>Hey, I'm Gagan!</h1>\n\t\t\t<p> I am a full-stack software developer and a hobbyist competitive programmer who loves to tackle challenging problems. I am currently pursuing an undergrad degree at the National Institute of Technology Raipur.</p>\n\t\t\t<div class=\"find\">\n\t\t\t\t<p> Find me on : </p> \n\t\t\t\t<a href=\"https://linkedin.com/in/gagan-gaurav\">\n\t\t\t\t\t<img src=\"assets/images/buttons/cloudLinkedin.png\" class = \"logo\">\n\t\t\t\t</a>\n\t\t\t\t<a href=\"https://mail.google.com/mail/?view=cm&fs=1&to=iamgagangaurav@gmail.com\">\n\t\t\t\t\t<img src=\"assets/images/buttons/cloudGmail.png\" class = \"logo\">\n\t\t\t\t</a>\n\t\t\t\t<a href=\"https://github.com/gagan-gaurav\">\n\t\t\t\t\t<img src=\"assets/images/buttons/cloudGit.png\" class = \"logo\">\n\t\t\t\t</a>\n\t\t\t\t<div class=\"res\">\n\t\t\t\t\t<p> Resume : </p>\n\t\t\t\t\t<a href=\"https://docs.google.com/document/d/1CaoFqU-tZwj7LNEjBxguaU8XPmAwZQbI9Sjfh1ohzYU/edit?usp=sharing\">\n\t\t\t\t\t\t<img src=\"assets/images/buttons/cloudDoc.png\" class = \"logo\">\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div> -->\n</div>\n\n"
        },
        {
            "name": "WindowComponent",
            "id": "component-WindowComponent-da8c3587b10f8363093784f42009b6c6bc780122dc5731e379cea827726a900304e2144cb33fb85f4fb82e1e58444507e48998cd8ddb2fd65420404b3ddaf678",
            "file": "src/lib/window/window.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-window",
            "styleUrls": [
                "./window.component.scss",
                "./../../styles/config.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./window.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "windowConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "X1",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "Y1",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "close",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter"
                },
                {
                    "name": "Xemitter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter"
                },
                {
                    "name": "Yemitter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "insideMenubar",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "mouseHoldsComponent",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "X2",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "Y2",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "closeWindow",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "mouseOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "mouseOver",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMouseDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:mousedown', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMouseMove",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:mousemove', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMouseUp",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:mouseup', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:mousedown",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40
                },
                {
                    "name": "document:mousemove",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58
                },
                {
                    "name": "document:mouseup",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostListener, Input, Output, EventEmitter, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-window',\n  templateUrl: './window.component.html',\n  styleUrls: ['./window.component.scss', './../../styles/config.scss']\n})\nexport class WindowComponent implements OnInit{\n  //Window config\n  @Input() public windowConfig: any;\n\n  public insideMenubar: boolean = false;\n  public mouseHoldsComponent: boolean = false;\n  @Input() public X1: number = 0;\n  @Input() public Y1: number = 0;\n  @Output() public Xemitter = new EventEmitter<any>();\n  @Output() public Yemitter = new EventEmitter<any>();\n  @Output() public close = new EventEmitter<any>();\n  public X2: number = 0;\n  public Y2: number = 0;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n      // console.log(this.X1, this.Y1);\n  }\n\n  mouseOver(){\n    this.insideMenubar = true;\n    // console.log(\"insideMenubar\", this.insideMenubar);\n  }\n\n  mouseOut(){\n    if(!this.mouseHoldsComponent) this.insideMenubar = false;\n    // console.log(\"insideMenubar\", this.insideMenubar);\n  }\n\n  @HostListener('document:mousedown', ['$event'])\n  onMouseDown(event: MouseEvent) {\n    // event.preventDefault();\n    if(this.insideMenubar) {\n      this.mouseHoldsComponent = true;\n      this.X2 = event.clientX;\n      this.Y2 = event.clientY;\n      // console.log(\"HoldsBlogs\");\n    }\n  }\n\n  @HostListener('document:mouseup', ['$event'])\n  onMouseUp(event: MouseEvent) {\n    // event.preventDefault();\n    this.mouseHoldsComponent = false;\n    // console.log(\"DonstHoldBlogs\");\n  }\n\n  @HostListener('document:mousemove', ['$event'])\n  onMouseMove(event: MouseEvent) {\n    if(this.mouseHoldsComponent && this.insideMenubar){\n      event.preventDefault();\n      this.X1 += event.clientX - this.X2;\n      this.Xemitter.emit(this.X1);\n      this.Y1 += event.clientY - this.Y2;\n      this.Yemitter.emit(this.Y1);\n      this.X2 = event.clientX;\n      this.Y2 = event.clientY;\n    }\n  }\n\n  closeWindow(){\n    this.close.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import './../../styles/config.scss';\r\n\r\n.window{\r\n\tfont-family: $primary-font;\r\n\tbackground-color: white;\r\n\tborder-radius: 8px;\r\n\tborder: solid black;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\twidth: fit-content;\r\n\r\n\t.menu-bar{\r\n\t\tcursor: pointer;\r\n\t\tbackground-color: white;\r\n\t\theight: 24px;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: align-self;\r\n\t\talign-items: center;\r\n\t\tborder-bottom: solid black;\r\n\r\n\t\t.heading{\r\n\t\t\tmargin-left: auto;\r\n\t\t}\r\n\t\t.close{\r\n\t\t\tbackground-color: coral;\r\n\t\t\theight: 12px;\r\n\t\t\twidth: 12px;\r\n\t\t\tborder: solid black;\r\n\t\t\tborder-radius: 12px;\r\n\t\t\tmargin-left: auto;\r\n\t\t\tmargin-right: 4px;\r\n\t\t}\r\n\t}\r\n}\r\n",
                    "styleUrl": "./window.component.scss"
                },
                {
                    "data": "$primary-font: cursive;\r\n\r\n//themes\r\n$primary-color-profile: #ebb7c9;\r\n$secondary-color-profile: #faedf1; \r\n.theme-profile{\r\n\tbackground-color: $secondary-color-profile;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-profile;\r\n\t}\r\n}\r\n\r\n$primary-color-projects: #b2fcb2;\r\n$secondary-color-projects: #ecfeec;\r\n.theme-projects{\r\n\tbackground-color: $secondary-color-projects;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-projects;\r\n\t}\r\n}\r\n\r\n$primary-color-skills: #ffefd5;\r\n$secondary-color-skills: #fffbf4;\r\n.theme-skills{\r\n\tbackground-color: $secondary-color-skills;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-skills;\r\n\t}\r\n}\r\n\r\n$primary-color-blogs: #8baff1;\r\n$seconday-color-blogs: #e2ebfb;\r\n.theme-blogs{\r\n\tbackground-color: $seconday-color-blogs;\r\n\t.menu-bar{\r\n\t\tbackground-color: $primary-color-blogs;\r\n\t}\r\n}\r\n\r\n",
                    "styleUrl": "./../../styles/config.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"window\" [class]=\"windowConfig.theme\">\n\t<div class=\"menu-bar\" (mouseover)=\"mouseOver()\" (mouseout)=\"mouseOut()\">\n\t\t<div class=\"heading\">{{this.windowConfig.heading}}</div>\n\t\t<div class=\"close\" (click)=\"closeWindow()\"></div>\n\t</div>\n\t<ng-content></ng-content>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-17817e8c424a9b5f104333211b2944a9d4fa27a755ff8d6434ff6be1d89f4346aee48a00778e92d2ca741fbd2f82bbcfcc08815a842ef9b87cf7a01bdde16758",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PortfolioModule } from 'src/lib/portfolio.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    PortfolioModule,\n    BrowserModule,\n    CommonModule,\n    AppRoutingModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "PortfolioModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-cb28f145dbb41b11b3049c1ca648232eea1614939ea7c735a11ce328fc07dc34fc31a0c4c069b6aa644b62c0bdc11571e48e36bdb89e3cc74d41b89f9feffaf4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { WallComponent } from 'src/lib/wall/wall.component';\nimport { LoginComponent } from 'src/lib/auth/login/login.component';\nimport { SignupComponent } from 'src/lib/auth/signup/signup.component';\nimport { FeedComponent } from 'src/lib/quilandquest/feed/feed.component';\nimport { ContentComponent } from 'src/lib/quilandquest/content/content.component';\n\nconst routes: Routes = [\n  { path: \"user/:username\", component: WallComponent},\n  { path: \"login\", component: LoginComponent},\n  { path: \"signup\", component: SignupComponent},\n  { path: \"quilandquest\", component: FeedComponent},\n  { path: \"blog/:blog_id\", component: ContentComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PortfolioModule",
            "id": "module-PortfolioModule-8ac32d4873639b096c71031201a3a83a59f4bc3ff09273b90f34b01e7f25b762c52af1197142a31461d036947f033d7c2b009c165204cf3bea913fd9e0adc453",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/lib/portfolio.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { APP_BASE_HREF, CommonModule } from '@angular/common';\r\nimport { AppConfig } from 'src/service/app.config';\r\nimport { WallComponent } from 'src/lib/wall/wall.component';\r\nimport { BlogsComponent } from './blogs/blogs.component';\r\nimport { ProjectsComponent } from './projects/projects.component';\r\nimport { SkillsComponent } from './skills/skills.component';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { SignupComponent } from './auth/signup/signup.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { AngularEditorModule } from '@kolkov/angular-editor';\r\nimport { WindowComponent } from './window/window.component';\r\nimport { ButtonComponent } from './button/button.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { RouterTestingModule } from \"@angular/router/testing\";\r\nimport { FeedComponent } from './quilandquest/feed/feed.component';\r\nimport { ContentComponent } from './quilandquest/content/content.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    WallComponent, \r\n    ProjectsComponent, \r\n    BlogsComponent, \r\n    SkillsComponent, \r\n    LoginComponent, \r\n    SignupComponent, \r\n    WindowComponent, \r\n    ButtonComponent, \r\n    ProfileComponent, \r\n    FeedComponent, \r\n    ContentComponent\r\n  ],\r\n  imports: [\r\n    HttpClientModule, \r\n    FormsModule, \r\n    CommonModule, \r\n    RouterModule.forChild([]), \r\n    AngularEditorModule, \r\n    RouterTestingModule\r\n  ],\r\n  providers: [AppConfig, { provide: APP_BASE_HREF, useValue: '/' }, CookieService],\r\n  exports: [\r\n    ProjectsComponent, \r\n    WallComponent, \r\n    SkillsComponent, \r\n    BlogsComponent, \r\n    SignupComponent, \r\n    LoginComponent, \r\n    WindowComponent, \r\n    ButtonComponent, \r\n    ProfileComponent, \r\n    FeedComponent, \r\n    ContentComponent\r\n  ],\r\n  bootstrap: []\r\n})\r\nexport class PortfolioModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AppConfig"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BlogsComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "ContentComponent"
                        },
                        {
                            "name": "FeedComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "ProfileComponent"
                        },
                        {
                            "name": "ProjectsComponent"
                        },
                        {
                            "name": "SignupComponent"
                        },
                        {
                            "name": "SkillsComponent"
                        },
                        {
                            "name": "WallComponent"
                        },
                        {
                            "name": "WindowComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BlogsComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "ContentComponent"
                        },
                        {
                            "name": "FeedComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "ProfileComponent"
                        },
                        {
                            "name": "ProjectsComponent"
                        },
                        {
                            "name": "SignupComponent"
                        },
                        {
                            "name": "SkillsComponent"
                        },
                        {
                            "name": "WallComponent"
                        },
                        {
                            "name": "WindowComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Blogs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/blogs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Content",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/content.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Feed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/feed.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Login",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/login.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n}"
            },
            {
                "name": "Profile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/profile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Projects",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/projects.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Signup",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/signup.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Skills",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/skills.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/content.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: ContentComponent) => ({\r\n\tcomponent: ContentComponent,\r\n\tprops: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/blogs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: BlogsComponent) => ({\r\n\tcomponet: BlogsComponent,\r\n\tprops: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/login.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: LoginComponent) => ({\r\n\tcomponet: LoginComponent,\r\n\tprops: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/feed.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: FeedComponent) => ({\r\n\tcomponent: FeedComponent,\r\n\tprops: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/profile.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: ProfileComponent) => ({\r\n\tcomponent: ProfileComponent,\r\n\tprops: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/projects.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: ProjectsComponent) => ({\r\n\tcomponent: ProjectsComponent,\r\n\tprops: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/signup.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: SignupComponent) => ({\r\n\tcomponet: SignupComponent,\r\n\tprops: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/skills.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: SkillsComponent) => ({\r\n\tcomponent: SkillsComponent,\r\n\tprops: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/wall.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: WallComponent) => ({\r\n\tcomponent: WallComponent,\r\n\tprops: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/window.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: WindowComponent) => ({\r\n\tcomponet: WindowComponent,\r\n\tprops: args\r\n})"
            },
            {
                "name": "Wall",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/wall.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Window",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/window.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [
            {
                "name": "Comp",
                "childs": [
                    {
                        "name": "PROFILE",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "PROJECTS",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "SKILLS",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "BLOGS",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/lib/wall/wall.component.ts"
            }
        ],
        "groupedVariables": {
            "src/stories/blogs.stories.ts": [
                {
                    "name": "Blogs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/blogs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/blogs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: BlogsComponent) => ({\r\n\tcomponet: BlogsComponent,\r\n\tprops: args\r\n})"
                }
            ],
            "src/stories/content.stories.ts": [
                {
                    "name": "Content",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/content.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/content.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: ContentComponent) => ({\r\n\tcomponent: ContentComponent,\r\n\tprops: args\r\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/stories/feed.stories.ts": [
                {
                    "name": "Feed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/feed.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/feed.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: FeedComponent) => ({\r\n\tcomponent: FeedComponent,\r\n\tprops: args\r\n})"
                }
            ],
            "src/stories/login.stories.ts": [
                {
                    "name": "Login",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/login.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/login.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: LoginComponent) => ({\r\n\tcomponet: LoginComponent,\r\n\tprops: args\r\n})"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n}"
                }
            ],
            "src/stories/profile.stories.ts": [
                {
                    "name": "Profile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/profile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/profile.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: ProfileComponent) => ({\r\n\tcomponent: ProfileComponent,\r\n\tprops: args\r\n})"
                }
            ],
            "src/stories/projects.stories.ts": [
                {
                    "name": "Projects",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/projects.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/projects.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: ProjectsComponent) => ({\r\n\tcomponent: ProjectsComponent,\r\n\tprops: args\r\n})"
                }
            ],
            "src/stories/signup.stories.ts": [
                {
                    "name": "Signup",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/signup.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/signup.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: SignupComponent) => ({\r\n\tcomponet: SignupComponent,\r\n\tprops: args\r\n})"
                }
            ],
            "src/stories/skills.stories.ts": [
                {
                    "name": "Skills",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/skills.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/skills.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: SkillsComponent) => ({\r\n\tcomponent: SkillsComponent,\r\n\tprops: args\r\n})"
                }
            ],
            "src/stories/wall.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/wall.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: WallComponent) => ({\r\n\tcomponent: WallComponent,\r\n\tprops: args\r\n})"
                },
                {
                    "name": "Wall",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/wall.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/window.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/window.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: WindowComponent) => ({\r\n\tcomponet: WindowComponent,\r\n\tprops: args\r\n})"
                },
                {
                    "name": "Window",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/window.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/lib/wall/wall.component.ts": [
                {
                    "name": "Comp",
                    "childs": [
                        {
                            "name": "PROFILE",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "PROJECTS",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "SKILLS",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "BLOGS",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/lib/wall/wall.component.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "user/:username",
                        "component": "WallComponent"
                    },
                    {
                        "path": "login",
                        "component": "LoginComponent"
                    },
                    {
                        "path": "signup",
                        "component": "SignupComponent"
                    },
                    {
                        "path": "quilandquest",
                        "component": "FeedComponent"
                    },
                    {
                        "path": "blog/:blog_id",
                        "component": "ContentComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/auth/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/lib/auth/signup/signup.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/lib/blogs/blogs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BlogsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/30",
                "status": "low"
            },
            {
                "filePath": "src/lib/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/lib/profile/profile.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/lib/projects/projects.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProjectsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/lib/quilandquest/content/content.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/quilandquest/feed/feed.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FeedComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/lib/skills/skills.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SkillsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/lib/wall/wall.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WallComponent",
                "coveragePercent": 0,
                "coverageCount": "0/33",
                "status": "low"
            },
            {
                "filePath": "src/lib/window/window.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WindowComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/service/app.authenticator.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "Authenticator",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/service/app.config.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AppConfig",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/service/app.user.ts",
                "type": "class",
                "linktype": "classe",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/stories/blogs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Blogs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/blogs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/content.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Content",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/content.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/feed.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Feed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/feed.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/login.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Login",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/login.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/profile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Profile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/profile.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/projects.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Projects",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/projects.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/signup.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Signup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/signup.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/skills.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Skills",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/skills.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/wall.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/wall.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Wall",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/window.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/window.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Window",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}